✅ 파이프라인 2단계: 7가지 팩터 원본 데이터 수집을 시작합니다.
'all_us_tickers.csv'에서 총 9399개 티커를 불러왔습니다.

✅ 데이터 수집 기간: 2022-09-26 ~ 2025-09-25

✅ 각 주식의 팩터 원본 데이터를 수집합니다. (모멘텀/변동성은 1년, 3년 모두 계산)
[1/9399] 'A' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'A' 데이터 수집 완료.
[2/9399] 'AA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AA' 데이터 수집 완료.
[3/9399] 'AAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4/9399] 'AACB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5/9399] 'AACG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AACG' 데이터 수집 완료.
[6/9399] 'AACI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7/9399] 'AACT' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8/9399] 'AADR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9/9399] 'AAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[10/9399] 'AALG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[11/9399] 'AAM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[12/9399] 'AAME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AAME' 데이터 수집 완료.
[13/9399] 'AAMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AAMI' 데이터 수집 완료.
[14/9399] 'AAOI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AAOI' 데이터 수집 완료.
[15/9399] 'AAON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AAON' 데이터 수집 완료.
[16/9399] 'AAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AAP' 데이터 수집 완료.
[17/9399] 'AAPB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[18/9399] 'AAPD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[19/9399] 'AAPG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[20/9399] 'AAPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AAPL' 데이터 수집 완료.
[21/9399] 'AAPU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[22/9399] 'AARD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[23/9399] 'AAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AAT' 데이터 수집 완료.
[24/9399] 'AAUC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[25/9399] 'AAUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[26/9399] 'AAVM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[27/9399] 'AAXJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[28/9399] 'AB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AB' 데이터 수집 완료.
[29/9399] 'ABAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABAT' 데이터 수집 완료.
[30/9399] 'ABBV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABBV' 데이터 수집 완료.
[31/9399] 'ABCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABCB' 데이터 수집 완료.
[32/9399] 'ABCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABCL' 데이터 수집 완료.
[33/9399] 'ABCS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[34/9399] 'ABEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABEO' 데이터 수집 완료.
[35/9399] 'ABEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[36/9399] 'ABEV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABEV' 데이터 수집 완료.
[37/9399] 'ABG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABG' 데이터 수집 완료.
[38/9399] 'ABI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[39/9399] 'ABIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[40/9399] 'ABL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABL' 데이터 수집 완료.
[41/9399] 'ABLV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABLV' 데이터 수집 완료.
[42/9399] 'ABM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABM' 데이터 수집 완료.
[43/9399] 'ABNB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABNB' 데이터 수집 완료.
[44/9399] 'ABNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[45/9399] 'ABOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABOS' 데이터 수집 완료.
[46/9399] 'ABP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[47/9399] 'ABR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABR' 데이터 수집 완료.
[48/9399] 'ABSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABSI' 데이터 수집 완료.
[49/9399] 'ABT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABT' 데이터 수집 완료.
[50/9399] 'ABTC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[51/9399] 'ABTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABTS' 데이터 수집 완료.
[52/9399] 'ABUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABUS' 데이터 수집 완료.
[53/9399] 'ABVC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ABVC' 데이터 수집 완료.
[54/9399] 'ABVE' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[55/9399] 'ABVX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[56/9399] 'ACA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACA' 데이터 수집 완료.
[57/9399] 'ACAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACAD' 데이터 수집 완료.
[58/9399] 'ACB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACB' 데이터 수집 완료.
[59/9399] 'ACCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACCO' 데이터 수집 완료.
[60/9399] 'ACCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACCS' 데이터 수집 완료.
[61/9399] 'ACDC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACDC' 데이터 수집 완료.
[62/9399] 'ACEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACEL' 데이터 수집 완료.
[63/9399] 'ACES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[64/9399] 'ACET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACET' 데이터 수집 완료.
[65/9399] 'ACFN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACFN' 데이터 수집 완료.
[66/9399] 'ACGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACGL' 데이터 수집 완료.
[67/9399] 'ACGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[68/9399] 'ACHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACHC' 데이터 수집 완료.
[69/9399] 'ACHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACHR' 데이터 수집 완료.
[70/9399] 'ACHV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACHV' 데이터 수집 완료.
[71/9399] 'ACI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACI' 데이터 수집 완료.
[72/9399] 'ACIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACIC' 데이터 수집 완료.
[73/9399] 'ACIU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACIU' 데이터 수집 완료.
[74/9399] 'ACIW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACIW' 데이터 수집 완료.
[75/9399] 'ACKY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[76/9399] 'ACLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[77/9399] 'ACLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[78/9399] 'ACLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACLS' 데이터 수집 완료.
[79/9399] 'ACLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACLX' 데이터 수집 완료.
[80/9399] 'ACM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACM' 데이터 수집 완료.
[81/9399] 'ACMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACMR' 데이터 수집 완료.
[82/9399] 'ACN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACN' 데이터 수집 완료.
[83/9399] 'ACNB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACNB' 데이터 수집 완료.
[84/9399] 'ACNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACNT' 데이터 수집 완료.
[85/9399] 'ACOG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[86/9399] 'ACON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACON' 데이터 수집 완료.
[87/9399] 'ACP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACP' 데이터 수집 완료.
[88/9399] 'ACR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACR' 데이터 수집 완료.
[89/9399] 'ACRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACRE' 데이터 수집 완료.
[90/9399] 'ACRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACRS' 데이터 수집 완료.
[91/9399] 'ACRV' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[92/9399] 'ACT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACT' 데이터 수집 완료.
[93/9399] 'ACTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACTG' 데이터 수집 완료.
[94/9399] 'ACTU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[95/9399] 'ACTV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[96/9399] 'ACU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACU' 데이터 수집 완료.
[97/9399] 'ACV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[98/9399] 'ACVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACVA' 데이터 수집 완료.
[99/9399] 'ACVF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[100/9399] 'ACVT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[101/9399] 'ACWI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[102/9399] 'ACWX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[103/9399] 'ACXP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ACXP' 데이터 수집 완료.
[104/9399] 'AD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AD' 데이터 수집 완료.
[105/9399] 'ADAG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADAG' 데이터 수집 완료.
[106/9399] 'ADAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADAM' 데이터 수집 완료.
[107/9399] 'ADAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADAP' 데이터 수집 완료.
[108/9399] 'ADBE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADBE' 데이터 수집 완료.
[109/9399] 'ADBG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[110/9399] 'ADC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADC' 데이터 수집 완료.
[111/9399] 'ADCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[112/9399] 'ADEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADEA' 데이터 수집 완료.
[113/9399] 'ADGM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[114/9399] 'ADI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADI' 데이터 수집 완료.
[115/9399] 'ADIL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADIL' 데이터 수집 완료.
[116/9399] 'ADIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[117/9399] 'ADM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADM' 데이터 수집 완료.
[118/9399] 'ADMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADMA' 데이터 수집 완료.
[119/9399] 'ADN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[120/9399] 'ADNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADNT' 데이터 수집 완료.
[121/9399] 'ADP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADP' 데이터 수집 완료.
[122/9399] 'ADPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADPT' 데이터 수집 완료.
[123/9399] 'ADPV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[124/9399] 'ADSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[125/9399] 'ADSK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADSK' 데이터 수집 완료.
[126/9399] 'ADT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADT' 데이터 수집 완료.
[127/9399] 'ADTN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADTN' 데이터 수집 완료.
[128/9399] 'ADTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADTX' 데이터 수집 완료.
[129/9399] 'ADUR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[130/9399] 'ADUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADUS' 데이터 수집 완료.
[131/9399] 'ADV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADV' 데이터 수집 완료.
[132/9399] 'ADVB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[133/9399] 'ADVE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[134/9399] 'ADVM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADVM' 데이터 수집 완료.
[135/9399] 'ADX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADX' 데이터 수집 완료.
[136/9399] 'ADXN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ADXN' 데이터 수집 완료.
[137/9399] 'AEBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[138/9399] 'AEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEC' 데이터 수집 완료.
[139/9399] 'AEE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEE' 데이터 수집 완료.
[140/9399] 'AEF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEF' 데이터 수집 완료.
[141/9399] 'AEG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEG' 데이터 수집 완료.
[142/9399] 'AEHL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEHL' 데이터 수집 완료.
[143/9399] 'AEHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEHR' 데이터 수집 완료.
[144/9399] 'AEI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEI' 데이터 수집 완료.
[145/9399] 'AEIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEIS' 데이터 수집 완료.
[146/9399] 'AEM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEM' 데이터 수집 완료.
[147/9399] 'AEMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEMD' 데이터 수집 완료.
[148/9399] 'AENT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AENT' 데이터 수집 완료.
[149/9399] 'AEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEO' 데이터 수집 완료.
[150/9399] 'AEON' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[151/9399] 'AEP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEP' 데이터 수집 완료.
[152/9399] 'AER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AER' 데이터 수집 완료.
[153/9399] 'AERT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[154/9399] 'AES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AES' 데이터 수집 완료.
[155/9399] 'AESI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[156/9399] 'AETH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[157/9399] 'AEVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEVA' 데이터 수집 완료.
[158/9399] 'AEYE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AEYE' 데이터 수집 완료.
[159/9399] 'AFB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AFB' 데이터 수집 완료.
[160/9399] 'AFBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AFBI' 데이터 수집 완료.
[161/9399] 'AFCG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AFCG' 데이터 수집 완료.
[162/9399] 'AFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AFG' 데이터 수집 완료.
[163/9399] 'AFIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[164/9399] 'AFJK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[165/9399] 'AFK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[166/9399] 'AFL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AFL' 데이터 수집 완료.
[167/9399] 'AFLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[168/9399] 'AFMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[169/9399] 'AFOS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[170/9399] 'AFRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AFRI' 데이터 수집 완료.
[171/9399] 'AFRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AFRM' 데이터 수집 완료.
[172/9399] 'AFSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[173/9399] 'AFSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[174/9399] 'AFYA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AFYA' 데이터 수집 완료.
[175/9399] 'AG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AG' 데이터 수집 완료.
[176/9399] 'AGAE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGAE' 데이터 수집 완료.
[177/9399] 'AGCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGCO' 데이터 수집 완료.
[178/9399] 'AGD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[179/9399] 'AGEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[180/9399] 'AGEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[181/9399] 'AGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[182/9399] 'AGGA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[183/9399] 'AGGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[184/9399] 'AGGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[185/9399] 'AGGY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[186/9399] 'AGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[187/9399] 'AGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGI' 데이터 수집 완료.
[188/9399] 'AGIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGIO' 데이터 수집 완료.
[189/9399] 'AGIQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[190/9399] 'AGIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[191/9399] 'AGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGL' 데이터 수집 완료.
[192/9399] 'AGM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGM' 데이터 수집 완료.
[193/9399] 'AGMH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGMH' 데이터 수집 완료.
[194/9399] 'AGMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[195/9399] 'AGNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGNC' 데이터 수집 완료.
[196/9399] 'AGNG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[197/9399] 'AGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGO' 데이터 수집 완료.
[198/9399] 'AGOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[199/9399] 'AGQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[200/9399] 'AGQI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[201/9399] 'AGRH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[202/9399] 'AGRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGRI' 데이터 수집 완료.
[203/9399] 'AGRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGRO' 데이터 수집 완료.
[204/9399] 'AGRW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[205/9399] 'AGX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGX' 데이터 수집 완료.
[206/9399] 'AGYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AGYS' 데이터 수집 완료.
[207/9399] 'AGZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[208/9399] 'AGZD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[209/9399] 'AHCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AHCO' 데이터 수집 완료.
[210/9399] 'AHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AHG' 데이터 수집 완료.
[211/9399] 'AHH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AHH' 데이터 수집 완료.
[212/9399] 'AHL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[213/9399] 'AHLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[214/9399] 'AHR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[215/9399] 'AHT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[216/9399] 'AHYB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[217/9399] 'AI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AI' 데이터 수집 완료.
[218/9399] 'AIA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[219/9399] 'AIBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[220/9399] 'AIBU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[221/9399] 'AIEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[222/9399] 'AIFD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[223/9399] 'AIFF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[224/9399] 'AIFU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIFU' 데이터 수집 완료.
[225/9399] 'AIG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIG' 데이터 수집 완료.
[226/9399] 'AIHS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIHS' 데이터 수집 완료.
[227/9399] 'AII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[228/9399] 'AIIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[229/9399] 'AIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[230/9399] 'AIMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIMD' 데이터 수집 완료.
[231/9399] 'AIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIN' 데이터 수집 완료.
[232/9399] 'AINP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[233/9399] 'AIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[234/9399] 'AIOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIOT' 데이터 수집 완료.
[235/9399] 'AIP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[236/9399] 'AIPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[237/9399] 'AIPO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[238/9399] 'AIQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[239/9399] 'AIR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[240/9399] 'AIRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[241/9399] 'AIRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIRG' 데이터 수집 완료.
[242/9399] 'AIRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIRI' 데이터 수집 완료.
[243/9399] 'AIRJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIRJ' 데이터 수집 완료.
[244/9399] 'AIRL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[245/9399] 'AIRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[246/9399] 'AIRR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[247/9399] 'AIRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIRS' 데이터 수집 완료.
[248/9399] 'AIRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIRT' 데이터 수집 완료.
[249/9399] 'AIS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[250/9399] 'AISP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[251/9399] 'AIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIT' 데이터 수집 완료.
[252/9399] 'AIV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIV' 데이터 수집 완료.
[253/9399] 'AIVC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[254/9399] 'AIVI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[255/9399] 'AIVL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[256/9399] 'AIXI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[257/9399] 'AIYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[258/9399] 'AIZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AIZ' 데이터 수집 완료.
[259/9399] 'AJG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AJG' 데이터 수집 완료.
[260/9399] 'AKA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AKA' 데이터 수집 완료.
[261/9399] 'AKAF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[262/9399] 'AKAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AKAM' 데이터 수집 완료.
[263/9399] 'AKAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AKAN' 데이터 수집 완료.
[264/9399] 'AKBA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[265/9399] 'AKO-A' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AKO-A' 데이터 수집 완료.
[266/9399] 'AKO-B' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AKO-B' 데이터 수집 완료.
[267/9399] 'AKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AKR' 데이터 수집 완료.
[268/9399] 'AKRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AKRO' 데이터 수집 완료.
[269/9399] 'AKTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AKTX' 데이터 수집 완료.
[270/9399] 'AL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AL' 데이터 수집 완료.
[271/9399] 'ALAB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[272/9399] 'ALAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[273/9399] 'ALAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALAR' 데이터 수집 완료.
[274/9399] 'ALB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALB' 데이터 수집 완료.
[275/9399] 'ALBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[276/9399] 'ALC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALC' 데이터 수집 완료.
[277/9399] 'ALCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALCO' 데이터 수집 완료.
[278/9399] 'ALCY' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[279/9399] 'ALDF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[280/9399] 'ALDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALDX' 데이터 수집 완료.
[281/9399] 'ALE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALE' 데이터 수집 완료.
[282/9399] 'ALEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALEC' 데이터 수집 완료.
[283/9399] 'ALEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALEX' 데이터 수집 완료.
[284/9399] 'ALF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[285/9399] 'ALG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALG' 데이터 수집 완료.
[286/9399] 'ALGM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALGM' 데이터 수집 완료.
[287/9399] 'ALGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALGN' 데이터 수집 완료.
[288/9399] 'ALGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALGS' 데이터 수집 완료.
[289/9399] 'ALGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALGT' 데이터 수집 완료.
[290/9399] 'ALHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALHC' 데이터 수집 완료.
[291/9399] 'ALIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[292/9399] 'ALIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALIT' 데이터 수집 완료.
[293/9399] 'ALK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALK' 데이터 수집 완료.
[294/9399] 'ALKS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALKS' 데이터 수집 완료.
[295/9399] 'ALKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALKT' 데이터 수집 완료.
[296/9399] 'ALL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALL' 데이터 수집 완료.
[297/9399] 'ALLE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALLE' 데이터 수집 완료.
[298/9399] 'ALLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALLO' 데이터 수집 완료.
[299/9399] 'ALLR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALLR' 데이터 수집 완료.
[300/9399] 'ALLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALLT' 데이터 수집 완료.
[301/9399] 'ALLW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[302/9399] 'ALLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALLY' 데이터 수집 완료.
[303/9399] 'ALM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALM' 데이터 수집 완료.
[304/9399] 'ALMS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[305/9399] 'ALMU' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[306/9399] 'ALNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALNT' 데이터 수집 완료.
[307/9399] 'ALNY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALNY' 데이터 수집 완료.
[308/9399] 'ALOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALOT' 데이터 수집 완료.
[309/9399] 'ALRG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[310/9399] 'ALRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALRM' 데이터 수집 완료.
[311/9399] 'ALRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALRS' 데이터 수집 완료.
[312/9399] 'ALSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALSN' 데이터 수집 완료.
[313/9399] 'ALT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALT' 데이터 수집 완료.
[314/9399] 'ALTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALTG' 데이터 수집 완료.
[315/9399] 'ALTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALTI' 데이터 수집 완료.
[316/9399] 'ALTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[317/9399] 'ALTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALTO' 데이터 수집 완료.
[318/9399] 'ALTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALTS' 데이터 수집 완료.
[319/9399] 'ALTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[320/9399] 'ALUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[321/9399] 'ALV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALV' 데이터 수집 완료.
[322/9399] 'ALVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[323/9399] 'ALX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALX' 데이터 수집 완료.
[324/9399] 'ALXO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALXO' 데이터 수집 완료.
[325/9399] 'ALZN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ALZN' 데이터 수집 완료.
[326/9399] 'AM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AM' 데이터 수집 완료.
[327/9399] 'AMAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMAL' 데이터 수집 완료.
[328/9399] 'AMAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMAT' 데이터 수집 완료.
[329/9399] 'AMAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[330/9399] 'AMBA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMBA' 데이터 수집 완료.
[331/9399] 'AMBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMBC' 데이터 수집 완료.
[332/9399] 'AMBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMBI' 데이터 수집 완료.
[333/9399] 'AMBO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMBO' 데이터 수집 완료.
[334/9399] 'AMBP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[335/9399] 'AMBQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[336/9399] 'AMBR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[337/9399] 'AMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[338/9399] 'AMCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMCR' 데이터 수집 완료.
[339/9399] 'AMCX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMCX' 데이터 수집 완료.
[340/9399] 'AMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMD' 데이터 수집 완료.
[341/9399] 'AMDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[342/9399] 'AMDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[343/9399] 'AMDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[344/9399] 'AMDU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[345/9399] 'AMDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[346/9399] 'AME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AME' 데이터 수집 완료.
[347/9399] 'AMG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMG' 데이터 수집 완료.
[348/9399] 'AMGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMGN' 데이터 수집 완료.
[349/9399] 'AMH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMH' 데이터 수집 완료.
[350/9399] 'AMID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[351/9399] 'AMIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[352/9399] 'AMJB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[353/9399] 'AMKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMKR' 데이터 수집 완료.
[354/9399] 'AMLP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[355/9399] 'AMLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMLX' 데이터 수집 완료.
[356/9399] 'AMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMN' 데이터 수집 완료.
[357/9399] 'AMOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[358/9399] 'AMOM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[359/9399] 'AMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMP' 데이터 수집 완료.
[360/9399] 'AMPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMPG' 데이터 수집 완료.
[361/9399] 'AMPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMPH' 데이터 수집 완료.
[362/9399] 'AMPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMPL' 데이터 수집 완료.
[363/9399] 'AMPX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMPX' 데이터 수집 완료.
[364/9399] 'AMPY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMPY' 데이터 수집 완료.
[365/9399] 'AMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMR' 데이터 수집 완료.
[366/9399] 'AMRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMRC' 데이터 수집 완료.
[367/9399] 'AMRK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMRK' 데이터 수집 완료.
[368/9399] 'AMRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMRN' 데이터 수집 완료.
[369/9399] 'AMRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[370/9399] 'AMRZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[371/9399] 'AMS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMS' 데이터 수집 완료.
[372/9399] 'AMSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMSC' 데이터 수집 완료.
[373/9399] 'AMSF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMSF' 데이터 수집 완료.
[374/9399] 'AMST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMST' 데이터 수집 완료.
[375/9399] 'AMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMT' 데이터 수집 완료.
[376/9399] 'AMTB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMTB' 데이터 수집 완료.
[377/9399] 'AMTD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMTD' 데이터 수집 완료.
[378/9399] 'AMTM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[379/9399] 'AMTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[380/9399] 'AMUB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[381/9399] 'AMUU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[382/9399] 'AMWD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMWD' 데이터 수집 완료.
[383/9399] 'AMWL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMWL' 데이터 수집 완료.
[384/9399] 'AMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMX' 데이터 수집 완료.
[385/9399] 'AMYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[386/9399] 'AMZA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[387/9399] 'AMZD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[388/9399] 'AMZE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMZE' 데이터 수집 완료.
[389/9399] 'AMZN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AMZN' 데이터 수집 완료.
[390/9399] 'AMZU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[391/9399] 'AMZY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[392/9399] 'AMZZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[393/9399] 'AN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AN' 데이터 수집 완료.
[394/9399] 'ANAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[395/9399] 'ANDE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANDE' 데이터 수집 완료.
[396/9399] 'ANEB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANEB' 데이터 수집 완료.
[397/9399] 'ANEL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[398/9399] 'ANET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANET' 데이터 수집 완료.
[399/9399] 'ANEW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[400/9399] 'ANF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANF' 데이터 수집 완료.
[401/9399] 'ANGH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANGH' 데이터 수집 완료.
[402/9399] 'ANGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANGI' 데이터 수집 완료.
[403/9399] 'ANGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[404/9399] 'ANGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANGO' 데이터 수집 완료.
[405/9399] 'ANGX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[406/9399] 'ANIK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANIK' 데이터 수집 완료.
[407/9399] 'ANIP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANIP' 데이터 수집 완료.
[408/9399] 'ANIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANIX' 데이터 수집 완료.
[409/9399] 'ANL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[410/9399] 'ANNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANNA' 데이터 수집 완료.
[411/9399] 'ANNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANNX' 데이터 수집 완료.
[412/9399] 'ANPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[413/9399] 'ANRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[414/9399] 'ANSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[415/9399] 'ANTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[416/9399] 'ANTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANTX' 데이터 수집 완료.
[417/9399] 'ANVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANVS' 데이터 수집 완료.
[418/9399] 'ANY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ANY' 데이터 수집 완료.
[419/9399] 'AOA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[420/9399] 'AOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AOD' 데이터 수집 완료.
[421/9399] 'AOHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[422/9399] 'AOK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[423/9399] 'AOM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[424/9399] 'AOMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AOMR' 데이터 수집 완료.
[425/9399] 'AON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AON' 데이터 수집 완료.
[426/9399] 'AOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[427/9399] 'AORT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AORT' 데이터 수집 완료.
[428/9399] 'AOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AOS' 데이터 수집 완료.
[429/9399] 'AOSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AOSL' 데이터 수집 완료.
[430/9399] 'AOTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[431/9399] 'AOUT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AOUT' 데이터 수집 완료.
[432/9399] 'AP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AP' 데이터 수집 완료.
[433/9399] 'APA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APA' 데이터 수집 완료.
[434/9399] 'APAD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[435/9399] 'APADU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[436/9399] 'APAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APAM' 데이터 수집 완료.
[437/9399] 'APCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[438/9399] 'APD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APD' 데이터 수집 완료.
[439/9399] 'APDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APDN' 데이터 수집 완료.
[440/9399] 'APED' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[441/9399] 'APEI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APEI' 데이터 수집 완료.
[442/9399] 'APG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APG' 데이터 수집 완료.
[443/9399] 'APGE' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[444/9399] 'APH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APH' 데이터 수집 완료.
[445/9399] 'API' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'API' 데이터 수집 완료.
[446/9399] 'APIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[447/9399] 'APLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APLD' 데이터 수집 완료.
[448/9399] 'APLE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APLE' 데이터 수집 완료.
[449/9399] 'APLM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APLM' 데이터 수집 완료.
[450/9399] 'APLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APLS' 데이터 수집 완료.
[451/9399] 'APLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APLT' 데이터 수집 완료.
[452/9399] 'APLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[453/9399] 'APLY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[454/9399] 'APM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APM' 데이터 수집 완료.
[455/9399] 'APMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[456/9399] 'APO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APO' 데이터 수집 완료.
[457/9399] 'APOG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APOG' 데이터 수집 완료.
[458/9399] 'APP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APP' 데이터 수집 완료.
[459/9399] 'APPF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APPF' 데이터 수집 완료.
[460/9399] 'APPN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[461/9399] 'APPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APPS' 데이터 수집 완료.
[462/9399] 'APPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[463/9399] 'APRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APRE' 데이터 수집 완료.
[464/9399] 'APRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[465/9399] 'APRW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[466/9399] 'APT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APT' 데이터 수집 완료.
[467/9399] 'APTV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APTV' 데이터 수집 완료.
[468/9399] 'APUE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[469/9399] 'APUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[470/9399] 'APVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APVO' 데이터 수집 완료.
[471/9399] 'APWC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APWC' 데이터 수집 완료.
[472/9399] 'APYX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'APYX' 데이터 수집 완료.
[473/9399] 'AQB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AQB' 데이터 수집 완료.
[474/9399] 'AQMS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AQMS' 데이터 수집 완료.
[475/9399] 'AQN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AQN' 데이터 수집 완료.
[476/9399] 'AQST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[477/9399] 'AQWA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[478/9399] 'AR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AR' 데이터 수집 완료.
[479/9399] 'ARAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[480/9399] 'ARAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARAY' 데이터 수집 완료.
[481/9399] 'ARB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[482/9399] 'ARBB' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[483/9399] 'ARBE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARBE' 데이터 수집 완료.
[484/9399] 'ARBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[485/9399] 'ARCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARCB' 데이터 수집 완료.
[486/9399] 'ARCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARCC' 데이터 수집 완료.
[487/9399] 'ARCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARCO' 데이터 수집 완료.
[488/9399] 'ARCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARCT' 데이터 수집 완료.
[489/9399] 'ARDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[490/9399] 'ARDT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[491/9399] 'ARDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARDX' 데이터 수집 완료.
[492/9399] 'ARE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARE' 데이터 수집 완료.
[493/9399] 'AREA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[494/9399] 'AREB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[495/9399] 'AREC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[496/9399] 'AREN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[497/9399] 'ARES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARES' 데이터 수집 완료.
[498/9399] 'ARGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[499/9399] 'ARGX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARGX' 데이터 수집 완료.
[500/9399] 'ARHS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARHS' 데이터 수집 완료.
[501/9399] 'ARI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARI' 데이터 수집 완료.
[502/9399] 'ARIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARIS' 데이터 수집 완료.
[503/9399] 'ARKO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARKO' 데이터 수집 완료.
[504/9399] 'ARKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARKR' 데이터 수집 완료.
[505/9399] 'ARL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARL' 데이터 수집 완료.
[506/9399] 'ARLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARLO' 데이터 수집 완료.
[507/9399] 'ARLP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARLP' 데이터 수집 완료.
[508/9399] 'ARM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[509/9399] 'ARMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[510/9399] 'ARMH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[511/9399] 'ARMK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARMK' 데이터 수집 완료.
[512/9399] 'ARMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARMN' 데이터 수집 완료.
[513/9399] 'ARMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[514/9399] 'AROC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AROC' 데이터 수집 완료.
[515/9399] 'AROW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AROW' 데이터 수집 완료.
[516/9399] 'ARP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[517/9399] 'ARQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARQ' 데이터 수집 완료.
[518/9399] 'ARQQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARQQ' 데이터 수집 완료.
[519/9399] 'ARQT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARQT' 데이터 수집 완료.
[520/9399] 'ARR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARR' 데이터 수집 완료.
[521/9399] 'ARRY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARRY' 데이터 수집 완료.
[522/9399] 'ARTL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARTL' 데이터 수집 완료.
[523/9399] 'ARTNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARTNA' 데이터 수집 완료.
[524/9399] 'ARTV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[525/9399] 'ARTW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARTW' 데이터 수집 완료.
[526/9399] 'ARTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[527/9399] 'ARVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARVN' 데이터 수집 완료.
[528/9399] 'ARVR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[529/9399] 'ARW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARW' 데이터 수집 완료.
[530/9399] 'ARWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ARWR' 데이터 수집 완료.
[531/9399] 'ARX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[532/9399] 'AS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[533/9399] 'ASA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASA' 데이터 수집 완료.
[534/9399] 'ASAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASAN' 데이터 수집 완료.
[535/9399] 'ASB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASB' 데이터 수집 완료.
[536/9399] 'ASBP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[537/9399] 'ASC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASC' 데이터 수집 완료.
[538/9399] 'ASCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[539/9399] 'ASEA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[540/9399] 'ASET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[541/9399] 'ASG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASG' 데이터 수집 완료.
[542/9399] 'ASGI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[543/9399] 'ASGM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[544/9399] 'ASGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASGN' 데이터 수집 완료.
[545/9399] 'ASH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASH' 데이터 수집 완료.
[546/9399] 'ASHR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[547/9399] 'ASHS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[548/9399] 'ASIA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[549/9399] 'ASIC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[550/9399] 'ASIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASIX' 데이터 수집 완료.
[551/9399] 'ASLE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASLE' 데이터 수집 완료.
[552/9399] 'ASLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[553/9399] 'ASM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASM' 데이터 수집 완료.
[554/9399] 'ASMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASMB' 데이터 수집 완료.
[555/9399] 'ASMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[556/9399] 'ASMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[557/9399] 'ASMH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[558/9399] 'ASML' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASML' 데이터 수집 완료.
[559/9399] 'ASND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[560/9399] 'ASNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASNS' 데이터 수집 완료.
[561/9399] 'ASO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASO' 데이터 수집 완료.
[562/9399] 'ASPC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[563/9399] 'ASPI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[564/9399] 'ASPN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASPN' 데이터 수집 완료.
[565/9399] 'ASPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[566/9399] 'ASR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASR' 데이터 수집 완료.
[567/9399] 'ASRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASRT' 데이터 수집 완료.
[568/9399] 'ASRV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASRV' 데이터 수집 완료.
[569/9399] 'ASST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[570/9399] 'ASTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASTC' 데이터 수집 완료.
[571/9399] 'ASTE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASTE' 데이터 수집 완료.
[572/9399] 'ASTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASTH' 데이터 수집 완료.
[573/9399] 'ASTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASTI' 데이터 수집 완료.
[574/9399] 'ASTL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[575/9399] 'ASTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASTS' 데이터 수집 완료.
[576/9399] 'ASUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASUR' 데이터 수집 완료.
[577/9399] 'ASX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASX' 데이터 수집 완료.
[578/9399] 'ASYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ASYS' 데이터 수집 완료.
[579/9399] 'ATAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATAI' 데이터 수집 완료.
[580/9399] 'ATAT' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[581/9399] 'ATCH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[582/9399] 'ATEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATEC' 데이터 수집 완료.
[583/9399] 'ATEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATEN' 데이터 수집 완료.
[584/9399] 'ATER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATER' 데이터 수집 완료.
[585/9399] 'ATEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATEX' 데이터 수집 완료.
[586/9399] 'ATFV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[587/9399] 'ATGE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATGE' 데이터 수집 완료.
[588/9399] 'ATGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[589/9399] 'ATHA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATHA' 데이터 수집 완료.
[590/9399] 'ATHE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATHE' 데이터 수집 완료.
[591/9399] 'ATHM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATHM' 데이터 수집 완료.
[592/9399] 'ATHR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[593/9399] 'ATI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATI' 데이터 수집 완료.
[594/9399] 'ATII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[595/9399] 'ATKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATKR' 데이터 수집 완료.
[596/9399] 'ATLC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATLC' 데이터 수집 완료.
[597/9399] 'ATLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[598/9399] 'ATLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATLO' 데이터 수집 완료.
[599/9399] 'ATLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATLX' 데이터 수집 완료.
[600/9399] 'ATMC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[601/9399] 'ATMU' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[602/9399] 'ATMV' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[603/9399] 'ATNI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATNI' 데이터 수집 완료.
[604/9399] 'ATNM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATNM' 데이터 수집 완료.
[605/9399] 'ATO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATO' 데이터 수집 완료.
[606/9399] 'ATOM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATOM' 데이터 수집 완료.
[607/9399] 'ATON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATON' 데이터 수집 완료.
[608/9399] 'ATOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATOS' 데이터 수집 완료.
[609/9399] 'ATPC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[610/9399] 'ATR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATR' 데이터 수집 완료.
[611/9399] 'ATRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[612/9399] 'ATRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATRC' 데이터 수집 완료.
[613/9399] 'ATRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATRO' 데이터 수집 완료.
[614/9399] 'ATS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATS' 데이터 수집 완료.
[615/9399] 'ATUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[616/9399] 'ATXG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATXG' 데이터 수집 완료.
[617/9399] 'ATXS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATXS' 데이터 수집 완료.
[618/9399] 'ATYR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ATYR' 데이터 수집 완료.
[619/9399] 'AU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AU' 데이터 수집 완료.
[620/9399] 'AUB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AUB' 데이터 수집 완료.
[621/9399] 'AUBN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AUBN' 데이터 수집 완료.
[622/9399] 'AUDC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AUDC' 데이터 수집 완료.
[623/9399] 'AUGO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[624/9399] 'AUGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[625/9399] 'AUGW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[626/9399] 'AUID' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AUID' 데이터 수집 완료.
[627/9399] 'AUMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[628/9399] 'AUNA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[629/9399] 'AUPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AUPH' 데이터 수집 완료.
[630/9399] 'AUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AUR' 데이터 수집 완료.
[631/9399] 'AURA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AURA' 데이터 수집 완료.
[632/9399] 'AUSF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[633/9399] 'AUSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[634/9399] 'AUST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AUST' 데이터 수집 완료.
[635/9399] 'AUTL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AUTL' 데이터 수집 완료.
[636/9399] 'AUUD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AUUD' 데이터 수집 완료.
[637/9399] 'AVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVA' 데이터 수집 완료.
[638/9399] 'AVAH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[639/9399] 'AVAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVAL' 데이터 수집 완료.
[640/9399] 'AVAV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVAV' 데이터 수집 완료.
[641/9399] 'AVB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVB' 데이터 수집 완료.
[642/9399] 'AVBC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[643/9399] 'AVBH' 처리 중...
  -> 일부 팩터 값이 누락되어 제외합니다.
[644/9399] 'AVBP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[645/9399] 'AVD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVD' 데이터 수집 완료.
[646/9399] 'AVDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[647/9399] 'AVDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[648/9399] 'AVDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[649/9399] 'AVDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[650/9399] 'AVDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVDX' 데이터 수집 완료.
[651/9399] 'AVEE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[652/9399] 'AVEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[653/9399] 'AVES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[654/9399] 'AVGB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[655/9399] 'AVGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[656/9399] 'AVGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[657/9399] 'AVGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVGO' 데이터 수집 완료.
[658/9399] 'AVGU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[659/9399] 'AVGV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[660/9399] 'AVGX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[661/9399] 'AVIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[662/9399] 'AVIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[663/9399] 'AVIR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVIR' 데이터 수집 완료.
[664/9399] 'AVIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[665/9399] 'AVK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[666/9399] 'AVL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[667/9399] 'AVLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[668/9399] 'AVLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[669/9399] 'AVMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[670/9399] 'AVMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[671/9399] 'AVMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[672/9399] 'AVMV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[673/9399] 'AVNM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[674/9399] 'AVNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVNS' 데이터 수집 완료.
[675/9399] 'AVNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVNT' 데이터 수집 완료.
[676/9399] 'AVNV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[677/9399] 'AVNW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVNW' 데이터 수집 완료.
[678/9399] 'AVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVO' 데이터 수집 완료.
[679/9399] 'AVPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVPT' 데이터 수집 완료.
[680/9399] 'AVR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[681/9399] 'AVRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[682/9399] 'AVS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[683/9399] 'AVSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[684/9399] 'AVSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[685/9399] 'AVSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[686/9399] 'AVSF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[687/9399] 'AVSU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[688/9399] 'AVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVT' 데이터 수집 완료.
[689/9399] 'AVTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVTR' 데이터 수집 완료.
[690/9399] 'AVTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVTX' 데이터 수집 완료.
[691/9399] 'AVUQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[692/9399] 'AVUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[693/9399] 'AVUV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[694/9399] 'AVXC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[695/9399] 'AVXL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVXL' 데이터 수집 완료.
[696/9399] 'AVY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AVY' 데이터 수집 완료.
[697/9399] 'AWAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[698/9399] 'AWEG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[699/9399] 'AWF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AWF' 데이터 수집 완료.
[700/9399] 'AWI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AWI' 데이터 수집 완료.
[701/9399] 'AWK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AWK' 데이터 수집 완료.
[702/9399] 'AWP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AWP' 데이터 수집 완료.
[703/9399] 'AWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AWR' 데이터 수집 완료.
[704/9399] 'AWRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AWRE' 데이터 수집 완료.
[705/9399] 'AWX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AWX' 데이터 수집 완료.
[706/9399] 'AX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AX' 데이터 수집 완료.
[707/9399] 'AXGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AXGN' 데이터 수집 완료.
[708/9399] 'AXIL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[709/9399] 'AXIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[710/9399] 'AXL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AXL' 데이터 수집 완료.
[711/9399] 'AXON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AXON' 데이터 수집 완료.
[712/9399] 'AXP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AXP' 데이터 수집 완료.
[713/9399] 'AXR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AXR' 데이터 수집 완료.
[714/9399] 'AXS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AXS' 데이터 수집 완료.
[715/9399] 'AXSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AXSM' 데이터 수집 완료.
[716/9399] 'AXTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AXTA' 데이터 수집 완료.
[717/9399] 'AXTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AXTI' 데이터 수집 완료.
[718/9399] 'AYI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AYI' 데이터 수집 완료.
[719/9399] 'AYTU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[720/9399] 'AZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AZ' 데이터 수집 완료.
[721/9399] 'AZI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[722/9399] 'AZN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AZN' 데이터 수집 완료.
[723/9399] 'AZNH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[724/9399] 'AZO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[725/9399] 'AZTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AZTA' 데이터 수집 완료.
[726/9399] 'AZTD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[727/9399] 'AZTR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[728/9399] 'AZYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[729/9399] 'AZZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'AZZ' 데이터 수집 완료.
[730/9399] 'B' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'B' 데이터 수집 완료.
[731/9399] 'BA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[732/9399] 'BAB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[733/9399] 'BABA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BABA' 데이터 수집 완료.
[734/9399] 'BABO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[735/9399] 'BABX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[736/9399] 'BAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BAC' 데이터 수집 완료.
[737/9399] 'BACC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[738/9399] 'BACQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[739/9399] 'BAER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BAER' 데이터 수집 완료.
[740/9399] 'BAFE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[741/9399] 'BAFN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BAFN' 데이터 수집 완료.
[742/9399] 'BAH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BAH' 데이터 수집 완료.
[743/9399] 'BAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[744/9399] 'BAIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[745/9399] 'BAK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[746/9399] 'BALL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BALL' 데이터 수집 완료.
[747/9399] 'BALY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[748/9399] 'BAM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[749/9399] 'BANC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[750/9399] 'BAND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BAND' 데이터 수집 완료.
[751/9399] 'BANF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BANF' 데이터 수집 완료.
[752/9399] 'BANL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[753/9399] 'BANR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BANR' 데이터 수집 완료.
[754/9399] 'BANX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BANX' 데이터 수집 완료.
[755/9399] 'BAOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BAOS' 데이터 수집 완료.
[756/9399] 'BAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BAP' 데이터 수집 완료.
[757/9399] 'BAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[758/9399] 'BARK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BARK' 데이터 수집 완료.
[759/9399] 'BASE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BASE' 데이터 수집 완료.
[760/9399] 'BASG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[761/9399] 'BASV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[762/9399] 'BATL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BATL' 데이터 수집 완료.
[763/9399] 'BATRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BATRA' 데이터 수집 완료.
[764/9399] 'BATRK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BATRK' 데이터 수집 완료.
[765/9399] 'BATT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[766/9399] 'BAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BAX' 데이터 수집 완료.
[767/9399] 'BAYA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[768/9399] 'BB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BB' 데이터 수집 완료.
[769/9399] 'BBAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[770/9399] 'BBAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBAI' 데이터 수집 완료.
[771/9399] 'BBAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBAR' 데이터 수집 완료.
[772/9399] 'BBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[773/9399] 'BBBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[774/9399] 'BBBL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[775/9399] 'BBBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[776/9399] 'BBBY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[777/9399] 'BBC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[778/9399] 'BBCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[779/9399] 'BBCP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBCP' 데이터 수집 완료.
[780/9399] 'BBD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBD' 데이터 수집 완료.
[781/9399] 'BBDC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBDC' 데이터 수집 완료.
[782/9399] 'BBGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBGI' 데이터 수집 완료.
[783/9399] 'BBH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[784/9399] 'BBIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[785/9399] 'BBLG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBLG' 데이터 수집 완료.
[786/9399] 'BBLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[787/9399] 'BBMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[788/9399] 'BBN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[789/9399] 'BBNX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[790/9399] 'BBOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[791/9399] 'BBP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[792/9399] 'BBSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[793/9399] 'BBSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBSI' 데이터 수집 완료.
[794/9399] 'BBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBT' 데이터 수집 완료.
[795/9399] 'BBU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBU' 데이터 수집 완료.
[796/9399] 'BBUC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBUC' 데이터 수집 완료.
[797/9399] 'BBVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBVA' 데이터 수집 완료.
[798/9399] 'BBW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBW' 데이터 수집 완료.
[799/9399] 'BBWI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[800/9399] 'BBY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BBY' 데이터 수집 완료.
[801/9399] 'BC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BC' 데이터 수집 완료.
[802/9399] 'BCAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCAB' 데이터 수집 완료.
[803/9399] 'BCAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCAL' 데이터 수집 완료.
[804/9399] 'BCAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[805/9399] 'BCAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[806/9399] 'BCAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[807/9399] 'BCBP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCBP' 데이터 수집 완료.
[808/9399] 'BCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCC' 데이터 수집 완료.
[809/9399] 'BCD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[810/9399] 'BCDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[811/9399] 'BCDF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[812/9399] 'BCE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCE' 데이터 수집 완료.
[813/9399] 'BCG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[814/9399] 'BCH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCH' 데이터 수집 완료.
[815/9399] 'BCHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[816/9399] 'BCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[817/9399] 'BCIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCIC' 데이터 수집 완료.
[818/9399] 'BCIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[819/9399] 'BCIM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[820/9399] 'BCLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[821/9399] 'BCML' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCML' 데이터 수집 완료.
[822/9399] 'BCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCO' 데이터 수집 완료.
[823/9399] 'BCOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[824/9399] 'BCPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCPC' 데이터 수집 완료.
[825/9399] 'BCRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[826/9399] 'BCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCS' 데이터 수집 완료.
[827/9399] 'BCSF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCSF' 데이터 수집 완료.
[828/9399] 'BCTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCTX' 데이터 수집 완료.
[829/9399] 'BCUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[830/9399] 'BCV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCV' 데이터 수집 완료.
[831/9399] 'BCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[832/9399] 'BCYC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BCYC' 데이터 수집 완료.
[833/9399] 'BDBT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[834/9399] 'BDC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BDC' 데이터 수집 완료.
[835/9399] 'BDCIU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[836/9399] 'BDCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[837/9399] 'BDCZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[838/9399] 'BDGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[839/9399] 'BDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[840/9399] 'BDJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BDJ' 데이터 수집 완료.
[841/9399] 'BDL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BDL' 데이터 수집 완료.
[842/9399] 'BDMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BDMD' 데이터 수집 완료.
[843/9399] 'BDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BDN' 데이터 수집 완료.
[844/9399] 'BDRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BDRX' 데이터 수집 완료.
[845/9399] 'BDRY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[846/9399] 'BDSX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BDSX' 데이터 수집 완료.
[847/9399] 'BDTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BDTX' 데이터 수집 완료.
[848/9399] 'BDVG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[849/9399] 'BDVL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[850/9399] 'BDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BDX' 데이터 수집 완료.
[851/9399] 'BDYN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[852/9399] 'BE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BE' 데이터 수집 완료.
[853/9399] 'BEAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[854/9399] 'BEAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BEAM' 데이터 수집 완료.
[855/9399] 'BEAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BEAT' 데이터 수집 완료.
[856/9399] 'BEDU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BEDU' 데이터 수집 완료.
[857/9399] 'BEDZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[858/9399] 'BEEM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BEEM' 데이터 수집 완료.
[859/9399] 'BEEP' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[860/9399] 'BEEX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[861/9399] 'BEEZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[862/9399] 'BEKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BEKE' 데이터 수집 완료.
[863/9399] 'BELFB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BELFB' 데이터 수집 완료.
[864/9399] 'BELT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[865/9399] 'BEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BEN' 데이터 수집 완료.
[866/9399] 'BENF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BENF' 데이터 수집 완료.
[867/9399] 'BENJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[868/9399] 'BEP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BEP' 데이터 수집 완료.
[869/9399] 'BEPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BEPC' 데이터 수집 완료.
[870/9399] 'BERZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[871/9399] 'BETE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[872/9399] 'BETH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[873/9399] 'BETR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BETR' 데이터 수집 완료.
[874/9399] 'BETZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[875/9399] 'BF-A' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BF-A' 데이터 수집 완료.
[876/9399] 'BF-B' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BF-B' 데이터 수집 완료.
[877/9399] 'BFAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BFAM' 데이터 수집 완료.
[878/9399] 'BFAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[879/9399] 'BFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BFC' 데이터 수집 완료.
[880/9399] 'BFH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BFH' 데이터 수집 완료.
[881/9399] 'BFIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BFIN' 데이터 수집 완료.
[882/9399] 'BFIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[883/9399] 'BFJL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[884/9399] 'BFK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[885/9399] 'BFLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BFLY' 데이터 수집 완료.
[886/9399] 'BFOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[887/9399] 'BFRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[888/9399] 'BFRG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[889/9399] 'BFRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BFRI' 데이터 수집 완료.
[890/9399] 'BFRZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[891/9399] 'BFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BFS' 데이터 수집 완료.
[892/9399] 'BFST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BFST' 데이터 수집 완료.
[893/9399] 'BFZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BFZ' 데이터 수집 완료.
[894/9399] 'BG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BG' 데이터 수집 완료.
[895/9399] 'BGB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[896/9399] 'BGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGC' 데이터 수집 완료.
[897/9399] 'BGDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[898/9399] 'BGFV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGFV' 데이터 수집 완료.
[899/9399] 'BGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[900/9399] 'BGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[901/9399] 'BGIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[902/9399] 'BGIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[903/9399] 'BGL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[904/9399] 'BGLC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGLC' 데이터 수집 완료.
[905/9399] 'BGM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGM' 데이터 수집 완료.
[906/9399] 'BGMS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGMS' 데이터 수집 완료.
[907/9399] 'BGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGR' 데이터 수집 완료.
[908/9399] 'BGRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[909/9399] 'BGRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[910/9399] 'BGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGS' 데이터 수집 완료.
[911/9399] 'BGSF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGSF' 데이터 수집 완료.
[912/9399] 'BGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGT' 데이터 수집 완료.
[913/9399] 'BGX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[914/9399] 'BGY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BGY' 데이터 수집 완료.
[915/9399] 'BH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BH' 데이터 수집 완료.
[916/9399] 'BHAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHAT' 데이터 수집 완료.
[917/9399] 'BHB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHB' 데이터 수집 완료.
[918/9399] 'BHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[919/9399] 'BHE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHE' 데이터 수집 완료.
[920/9399] 'BHF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHF' 데이터 수집 완료.
[921/9399] 'BHK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHK' 데이터 수집 완료.
[922/9399] 'BHM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHM' 데이터 수집 완료.
[923/9399] 'BHP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHP' 데이터 수집 완료.
[924/9399] 'BHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHR' 데이터 수집 완료.
[925/9399] 'BHRB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHRB' 데이터 수집 완료.
[926/9399] 'BHST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHST' 데이터 수집 완료.
[927/9399] 'BHV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[928/9399] 'BHVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BHVN' 데이터 수집 완료.
[929/9399] 'BIAF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BIAF' 데이터 수집 완료.
[930/9399] 'BIB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[931/9399] 'BIBL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[932/9399] 'BIDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[933/9399] 'BIDU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BIDU' 데이터 수집 완료.
[934/9399] 'BIGY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[935/9399] 'BIIB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BIIB' 데이터 수집 완료.
[936/9399] 'BIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[937/9399] 'BILD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[938/9399] 'BILI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BILI' 데이터 수집 완료.
[939/9399] 'BILL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BILL' 데이터 수집 완료.
[940/9399] 'BILS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[941/9399] 'BILZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[942/9399] 'BINC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[943/9399] 'BINI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[944/9399] 'BINT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[945/9399] 'BIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BIO' 데이터 수집 완료.
[946/9399] 'BIOA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[947/9399] 'BIOX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BIOX' 데이터 수집 완료.
[948/9399] 'BIP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BIP' 데이터 수집 완료.
[949/9399] 'BIPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BIPC' 데이터 수집 완료.
[950/9399] 'BIRD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BIRD' 데이터 수집 완료.
[951/9399] 'BIRK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[952/9399] 'BIS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[953/9399] 'BIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[954/9399] 'BITB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[955/9399] 'BITC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[956/9399] 'BITF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BITF' 데이터 수집 완료.
[957/9399] 'BITI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[958/9399] 'BITO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[959/9399] 'BITQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[960/9399] 'BITS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[961/9399] 'BITU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[962/9399] 'BIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[963/9399] 'BIVI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BIVI' 데이터 수집 완료.
[964/9399] 'BIYA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[965/9399] 'BIZD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[966/9399] 'BJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BJ' 데이터 수집 완료.
[967/9399] 'BJDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BJDX' 데이터 수집 완료.
[968/9399] 'BJK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[969/9399] 'BJRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BJRI' 데이터 수집 완료.
[970/9399] 'BK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BK' 데이터 수집 완료.
[971/9399] 'BKAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[972/9399] 'BKCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[973/9399] 'BKCH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[974/9399] 'BKCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[975/9399] 'BKD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKD' 데이터 수집 완료.
[976/9399] 'BKDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[977/9399] 'BKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKE' 데이터 수집 완료.
[978/9399] 'BKEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[979/9399] 'BKF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[980/9399] 'BKH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKH' 데이터 수집 완료.
[981/9399] 'BKHA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[982/9399] 'BKHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[983/9399] 'BKIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[984/9399] 'BKIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[985/9399] 'BKKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKKT' 데이터 수집 완료.
[986/9399] 'BKLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[987/9399] 'BKLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[988/9399] 'BKMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[989/9399] 'BKN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKN' 데이터 수집 완료.
[990/9399] 'BKNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[991/9399] 'BKNU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[992/9399] 'BKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKR' 데이터 수집 완료.
[993/9399] 'BKSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[994/9399] 'BKSY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKSY' 데이터 수집 완료.
[995/9399] 'BKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKT' 데이터 수집 완료.
[996/9399] 'BKTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKTI' 데이터 수집 완료.
[997/9399] 'BKU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKU' 데이터 수집 완료.
[998/9399] 'BKUI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[999/9399] 'BKV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1000/9399] 'BKWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1001/9399] 'BKYI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BKYI' 데이터 수집 완료.
[1002/9399] 'BL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BL' 데이터 수집 완료.
[1003/9399] 'BLBD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLBD' 데이터 수집 완료.
[1004/9399] 'BLBX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLBX' 데이터 수집 완료.
[1005/9399] 'BLCN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1006/9399] 'BLCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLCO' 데이터 수집 완료.
[1007/9399] 'BLCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1008/9399] 'BLCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1009/9399] 'BLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLD' 데이터 수집 완료.
[1010/9399] 'BLDP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLDP' 데이터 수집 완료.
[1011/9399] 'BLDR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLDR' 데이터 수집 완료.
[1012/9399] 'BLE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLE' 데이터 수집 완료.
[1013/9399] 'BLES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1014/9399] 'BLFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLFS' 데이터 수집 완료.
[1015/9399] 'BLFY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLFY' 데이터 수집 완료.
[1016/9399] 'BLGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1017/9399] 'BLIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLIN' 데이터 수집 완료.
[1018/9399] 'BLIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1019/9399] 'BLK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLK' 데이터 수집 완료.
[1020/9399] 'BLKB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLKB' 데이터 수집 완료.
[1021/9399] 'BLMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLMN' 데이터 수집 완료.
[1022/9399] 'BLMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1023/9399] 'BLND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLND' 데이터 수집 완료.
[1024/9399] 'BLNE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1025/9399] 'BLNK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLNK' 데이터 수집 완료.
[1026/9399] 'BLOK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1027/9399] 'BLOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1028/9399] 'BLRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLRX' 데이터 수집 완료.
[1029/9399] 'BLSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1030/9399] 'BLST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1031/9399] 'BLTD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1032/9399] 'BLTE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLTE' 데이터 수집 완료.
[1033/9399] 'BLUC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1034/9399] 'BLUI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1035/9399] 'BLUW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1036/9399] 'BLUX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1037/9399] 'BLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1038/9399] 'BLW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLW' 데이터 수집 완료.
[1039/9399] 'BLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLX' 데이터 수집 완료.
[1040/9399] 'BLZE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BLZE' 데이터 수집 완료.
[1041/9399] 'BLZRU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1042/9399] 'BMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BMA' 데이터 수집 완료.
[1043/9399] 'BMAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1044/9399] 'BMBL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BMBL' 데이터 수집 완료.
[1045/9399] 'BMDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1046/9399] 'BME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BME' 데이터 수집 완료.
[1047/9399] 'BMEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BMEA' 데이터 수집 완료.
[1048/9399] 'BMED' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1049/9399] 'BMEZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1050/9399] 'BMGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1051/9399] 'BMHL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1052/9399] 'BMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BMI' 데이터 수집 완료.
[1053/9399] 'BMN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1054/9399] 'BMNR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1055/9399] 'BMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BMO' 데이터 수집 완료.
[1056/9399] 'BMR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1057/9399] 'BMRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BMRA' 데이터 수집 완료.
[1058/9399] 'BMRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BMRC' 데이터 수집 완료.
[1059/9399] 'BMRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BMRN' 데이터 수집 완료.
[1060/9399] 'BMVP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1061/9399] 'BMY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BMY' 데이터 수집 완료.
[1062/9399] 'BN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BN' 데이터 수집 완료.
[1063/9399] 'BNAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNAI' 데이터 수집 완료.
[1064/9399] 'BNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1065/9399] 'BND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1066/9399] 'BNDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1067/9399] 'BNDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1068/9399] 'BNDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1069/9399] 'BNDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1070/9399] 'BNDW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1071/9399] 'BNDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1072/9399] 'BNED' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNED' 데이터 수집 완료.
[1073/9399] 'BNGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1074/9399] 'BNGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNGO' 데이터 수집 완료.
[1075/9399] 'BNKD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1076/9399] 'BNKU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1077/9399] 'BNL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNL' 데이터 수집 완료.
[1078/9399] 'BNO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1079/9399] 'BNR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNR' 데이터 수집 완료.
[1080/9399] 'BNRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNRG' 데이터 수집 완료.
[1081/9399] 'BNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNS' 데이터 수집 완료.
[1082/9399] 'BNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNT' 데이터 수집 완료.
[1083/9399] 'BNTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNTC' 데이터 수집 완료.
[1084/9399] 'BNTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNTX' 데이터 수집 완료.
[1085/9399] 'BNY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BNY' 데이터 수집 완료.
[1086/9399] 'BNZI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1087/9399] 'BOAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1088/9399] 'BOBP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1089/9399] 'BOC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOC' 데이터 수집 완료.
[1090/9399] 'BODI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BODI' 데이터 수집 완료.
[1091/9399] 'BOE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOE' 데이터 수집 완료.
[1092/9399] 'BOED' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1093/9399] 'BOEG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1094/9399] 'BOEU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1095/9399] 'BOF' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1096/9399] 'BOH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOH' 데이터 수집 완료.
[1097/9399] 'BOIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1098/9399] 'BOKF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOKF' 데이터 수집 완료.
[1099/9399] 'BOLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1100/9399] 'BOLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOLT' 데이터 수집 완료.
[1101/9399] 'BON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BON' 데이터 수집 완료.
[1102/9399] 'BOND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1103/9399] 'BOOM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOOM' 데이터 수집 완료.
[1104/9399] 'BOOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOOT' 데이터 수집 완료.
[1105/9399] 'BORR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BORR' 데이터 수집 완료.
[1106/9399] 'BOSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOSC' 데이터 수집 완료.
[1107/9399] 'BOTJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOTJ' 데이터 수집 완료.
[1108/9399] 'BOTT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1109/9399] 'BOTZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1110/9399] 'BOUT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1111/9399] 'BOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1112/9399] 'BOX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOX' 데이터 수집 완료.
[1113/9399] 'BOXL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BOXL' 데이터 수집 완료.
[1114/9399] 'BP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BP' 데이터 수집 완료.
[1115/9399] 'BPAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1116/9399] 'BPH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1117/9399] 'BPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1118/9399] 'BPOP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BPOP' 데이터 수집 완료.
[1119/9399] 'BPRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BPRN' 데이터 수집 완료.
[1120/9399] 'BQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1121/9399] 'BR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BR' 데이터 수집 완료.
[1122/9399] 'BRAG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRAG' 데이터 수집 완료.
[1123/9399] 'BRAZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1124/9399] 'BRBI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1125/9399] 'BRBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1126/9399] 'BRBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRBS' 데이터 수집 완료.
[1127/9399] 'BRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRC' 데이터 수집 완료.
[1128/9399] 'BRCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1129/9399] 'BRCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRCC' 데이터 수집 완료.
[1130/9399] 'BREA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1131/9399] 'BRF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1132/9399] 'BRFH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRFH' 데이터 수집 완료.
[1133/9399] 'BRFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRFS' 데이터 수집 완료.
[1134/9399] 'BRHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1135/9399] 'BRIA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1136/9399] 'BRID' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRID' 데이터 수집 완료.
[1137/9399] 'BRIF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1138/9399] 'BRK-A' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRK-A' 데이터 수집 완료.
[1139/9399] 'BRK-B' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRK-B' 데이터 수집 완료.
[1140/9399] 'BRKC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1141/9399] 'BRKD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1142/9399] 'BRKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRKR' 데이터 수집 완료.
[1143/9399] 'BRKU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1144/9399] 'BRLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRLS' 데이터 수집 완료.
[1145/9399] 'BRLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRLT' 데이터 수집 완료.
[1146/9399] 'BRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRN' 데이터 수집 완료.
[1147/9399] 'BRNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRNS' 데이터 수집 완료.
[1148/9399] 'BRNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1149/9399] 'BRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRO' 데이터 수집 완료.
[1150/9399] 'BROS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BROS' 데이터 수집 완료.
[1151/9399] 'BRR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1152/9399] 'BRRR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1153/9399] 'BRSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRSL' 데이터 수집 완료.
[1154/9399] 'BRSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRSP' 데이터 수집 완료.
[1155/9399] 'BRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRT' 데이터 수집 완료.
[1156/9399] 'BRTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1157/9399] 'BRTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRTX' 데이터 수집 완료.
[1158/9399] 'BRW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRW' 데이터 수집 완료.
[1159/9399] 'BRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRX' 데이터 수집 완료.
[1160/9399] 'BRY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRY' 데이터 수집 완료.
[1161/9399] 'BRZE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BRZE' 데이터 수집 완료.
[1162/9399] 'BRZU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1163/9399] 'BSAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1164/9399] 'BSAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSAC' 데이터 수집 완료.
[1165/9399] 'BSBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSBK' 데이터 수집 완료.
[1166/9399] 'BSBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSBR' 데이터 수집 완료.
[1167/9399] 'BSCP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1168/9399] 'BSCQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1169/9399] 'BSCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1170/9399] 'BSCS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1171/9399] 'BSCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1172/9399] 'BSCU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1173/9399] 'BSCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1174/9399] 'BSCW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1175/9399] 'BSCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1176/9399] 'BSCY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1177/9399] 'BSCZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1178/9399] 'BSET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSET' 데이터 수집 완료.
[1179/9399] 'BSJP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1180/9399] 'BSJQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1181/9399] 'BSJR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1182/9399] 'BSJS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1183/9399] 'BSJT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1184/9399] 'BSJU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1185/9399] 'BSJV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1186/9399] 'BSJW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1187/9399] 'BSJX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1188/9399] 'BSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSL' 데이터 수집 완료.
[1189/9399] 'BSLK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1190/9399] 'BSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSM' 데이터 수집 완료.
[1191/9399] 'BSMP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1192/9399] 'BSMQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1193/9399] 'BSMR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1194/9399] 'BSMS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1195/9399] 'BSMT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1196/9399] 'BSMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1197/9399] 'BSMV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1198/9399] 'BSMW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1199/9399] 'BSMY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1200/9399] 'BSMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1201/9399] 'BSR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1202/9399] 'BSRR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSRR' 데이터 수집 완료.
[1203/9399] 'BSSX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1204/9399] 'BST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1205/9399] 'BSTP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1206/9399] 'BSTZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1207/9399] 'BSV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1208/9399] 'BSVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSVN' 데이터 수집 완료.
[1209/9399] 'BSVO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1210/9399] 'BSX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSX' 데이터 수집 완료.
[1211/9399] 'BSY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BSY' 데이터 수집 완료.
[1212/9399] 'BTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTA' 데이터 수집 완료.
[1213/9399] 'BTAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1214/9399] 'BTAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1215/9399] 'BTBD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTBD' 데이터 수집 완료.
[1216/9399] 'BTBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTBT' 데이터 수집 완료.
[1217/9399] 'BTC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1218/9399] 'BTCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1219/9399] 'BTCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTCM' 데이터 수집 완료.
[1220/9399] 'BTCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTCS' 데이터 수집 완료.
[1221/9399] 'BTCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTCT' 데이터 수집 완료.
[1222/9399] 'BTDR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTDR' 데이터 수집 완료.
[1223/9399] 'BTE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTE' 데이터 수집 완료.
[1224/9399] 'BTF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1225/9399] 'BTFX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1226/9399] 'BTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTG' 데이터 수집 완료.
[1227/9399] 'BTGD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1228/9399] 'BTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTI' 데이터 수집 완료.
[1229/9399] 'BTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTM' 데이터 수집 완료.
[1230/9399] 'BTMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1231/9399] 'BTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTO' 데이터 수집 완료.
[1232/9399] 'BTOC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1233/9399] 'BTOG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTOG' 데이터 수집 완료.
[1234/9399] 'BTOP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1235/9399] 'BTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1236/9399] 'BTRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1237/9399] 'BTSG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1238/9399] 'BTT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTT' 데이터 수집 완료.
[1239/9399] 'BTU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTU' 데이터 수집 완료.
[1240/9399] 'BTX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1241/9399] 'BTZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BTZ' 데이터 수집 완료.
[1242/9399] 'BUCK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1243/9399] 'BUD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BUD' 데이터 수집 완료.
[1244/9399] 'BUFC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1245/9399] 'BUFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1246/9399] 'BUFM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1247/9399] 'BUG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1248/9399] 'BUI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1249/9399] 'BUL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1250/9399] 'BULD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1251/9399] 'BULG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1252/9399] 'BULL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BULL' 데이터 수집 완료.
[1253/9399] 'BULX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1254/9399] 'BULZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1255/9399] 'BUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BUR' 데이터 수집 완료.
[1256/9399] 'BURL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BURL' 데이터 수집 완료.
[1257/9399] 'BURU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1258/9399] 'BUSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BUSE' 데이터 수집 완료.
[1259/9399] 'BUUU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1260/9399] 'BUXX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1261/9399] 'BUYO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1262/9399] 'BUZZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1263/9399] 'BV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BV' 데이터 수집 완료.
[1264/9399] 'BVAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1265/9399] 'BVFL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BVFL' 데이터 수집 완료.
[1266/9399] 'BVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BVN' 데이터 수집 완료.
[1267/9399] 'BVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BVS' 데이터 수집 완료.
[1268/9399] 'BW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1269/9399] 'BWA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWA' 데이터 수집 완료.
[1270/9399] 'BWAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWAY' 데이터 수집 완료.
[1271/9399] 'BWB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWB' 데이터 수집 완료.
[1272/9399] 'BWEB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1273/9399] 'BWEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWEN' 데이터 수집 완료.
[1274/9399] 'BWET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1275/9399] 'BWFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWFG' 데이터 수집 완료.
[1276/9399] 'BWG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1277/9399] 'BWIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWIN' 데이터 수집 완료.
[1278/9399] 'BWLP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWLP' 데이터 수집 완료.
[1279/9399] 'BWMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWMN' 데이터 수집 완료.
[1280/9399] 'BWMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWMX' 데이터 수집 완료.
[1281/9399] 'BWX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1282/9399] 'BWXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BWXT' 데이터 수집 완료.
[1283/9399] 'BWZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1284/9399] 'BX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BX' 데이터 수집 완료.
[1285/9399] 'BXC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BXC' 데이터 수집 완료.
[1286/9399] 'BXMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BXMT' 데이터 수집 완료.
[1287/9399] 'BXMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BXMX' 데이터 수집 완료.
[1288/9399] 'BXP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BXP' 데이터 수집 완료.
[1289/9399] 'BXSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BXSL' 데이터 수집 완료.
[1290/9399] 'BY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BY' 데이터 수집 완료.
[1291/9399] 'BYD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BYD' 데이터 수집 완료.
[1292/9399] 'BYFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BYFC' 데이터 수집 완료.
[1293/9399] 'BYLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1294/9399] 'BYM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BYM' 데이터 수집 완료.
[1295/9399] 'BYND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1296/9399] 'BYRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1297/9399] 'BYRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BYRN' 데이터 수집 완료.
[1298/9399] 'BYSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1299/9399] 'BZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BZ' 데이터 수집 완료.
[1300/9399] 'BZAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1301/9399] 'BZFD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BZFD' 데이터 수집 완료.
[1302/9399] 'BZH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BZH' 데이터 수집 완료.
[1303/9399] 'BZQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1304/9399] 'BZUN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'BZUN' 데이터 수집 완료.
[1305/9399] 'C' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'C' 데이터 수집 완료.
[1306/9399] 'CA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1307/9399] 'CAAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1308/9399] 'CAAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAAP' 데이터 수집 완료.
[1309/9399] 'CAAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAAS' 데이터 수집 완료.
[1310/9399] 'CABA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CABA' 데이터 수집 완료.
[1311/9399] 'CABO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CABO' 데이터 수집 완료.
[1312/9399] 'CAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAC' 데이터 수집 완료.
[1313/9399] 'CACC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CACC' 데이터 수집 완료.
[1314/9399] 'CACI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CACI' 데이터 수집 완료.
[1315/9399] 'CADE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CADE' 데이터 수집 완료.
[1316/9399] 'CADL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CADL' 데이터 수집 완료.
[1317/9399] 'CAE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAE' 데이터 수집 완료.
[1318/9399] 'CAEP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1319/9399] 'CAF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1320/9399] 'CAFG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1321/9399] 'CAFX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1322/9399] 'CAG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAG' 데이터 수집 완료.
[1323/9399] 'CAH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1324/9399] 'CAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1325/9399] 'CAIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1326/9399] 'CAKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAKE' 데이터 수집 완료.
[1327/9399] 'CAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAL' 데이터 수집 완료.
[1328/9399] 'CALC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1329/9399] 'CALI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1330/9399] 'CALM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CALM' 데이터 수집 완료.
[1331/9399] 'CALX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CALX' 데이터 수집 완료.
[1332/9399] 'CAML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1333/9399] 'CAMP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1334/9399] 'CAMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAMT' 데이터 수집 완료.
[1335/9399] 'CAMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1336/9399] 'CAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAN' 데이터 수집 완료.
[1337/9399] 'CANC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1338/9399] 'CANE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1339/9399] 'CANF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CANF' 데이터 수집 완료.
[1340/9399] 'CANG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CANG' 데이터 수집 완료.
[1341/9399] 'CANQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1342/9399] 'CAPE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1343/9399] 'CAPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1344/9399] 'CAPN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1345/9399] 'CAPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAPR' 데이터 수집 완료.
[1346/9399] 'CAPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1347/9399] 'CAPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1348/9399] 'CAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1349/9399] 'CARD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1350/9399] 'CARE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CARE' 데이터 수집 완료.
[1351/9399] 'CARG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CARG' 데이터 수집 완료.
[1352/9399] 'CARK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1353/9399] 'CARL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1354/9399] 'CARM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1355/9399] 'CARR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CARR' 데이터 수집 완료.
[1356/9399] 'CARS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CARS' 데이터 수집 완료.
[1357/9399] 'CART' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1358/9399] 'CARU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1359/9399] 'CARV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CARV' 데이터 수집 완료.
[1360/9399] 'CARY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1361/9399] 'CARZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1362/9399] 'CAS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1363/9399] 'CASH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CASH' 데이터 수집 완료.
[1364/9399] 'CASI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1365/9399] 'CASS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CASS' 데이터 수집 완료.
[1366/9399] 'CASY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CASY' 데이터 수집 완료.
[1367/9399] 'CAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CAT' 데이터 수집 완료.
[1368/9399] 'CATF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1369/9399] 'CATH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1370/9399] 'CATO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CATO' 데이터 수집 완료.
[1371/9399] 'CATX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CATX' 데이터 수집 완료.
[1372/9399] 'CATY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CATY' 데이터 수집 완료.
[1373/9399] 'CAVA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1374/9399] 'CB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CB' 데이터 수집 완료.
[1375/9399] 'CBAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBAN' 데이터 수집 완료.
[1376/9399] 'CBAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBAT' 데이터 수집 완료.
[1377/9399] 'CBFV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBFV' 데이터 수집 완료.
[1378/9399] 'CBIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1379/9399] 'CBL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBL' 데이터 수집 완료.
[1380/9399] 'CBLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1381/9399] 'CBLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1382/9399] 'CBNA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1383/9399] 'CBNK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBNK' 데이터 수집 완료.
[1384/9399] 'CBON' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1385/9399] 'CBRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBRE' 데이터 수집 완료.
[1386/9399] 'CBRL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBRL' 데이터 수집 완료.
[1387/9399] 'CBSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1388/9399] 'CBSH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBSH' 데이터 수집 완료.
[1389/9399] 'CBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBT' 데이터 수집 완료.
[1390/9399] 'CBU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBU' 데이터 수집 완료.
[1391/9399] 'CBUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBUS' 데이터 수집 완료.
[1392/9399] 'CBZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CBZ' 데이터 수집 완료.
[1393/9399] 'CC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CC' 데이터 수집 완료.
[1394/9399] 'CCAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCAP' 데이터 수집 완료.
[1395/9399] 'CCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCB' 데이터 수집 완료.
[1396/9399] 'CCBG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCBG' 데이터 수집 완료.
[1397/9399] 'CCCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCCC' 데이터 수집 완료.
[1398/9399] 'CCCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCCS' 데이터 수집 완료.
[1399/9399] 'CCCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1400/9399] 'CCD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1401/9399] 'CCEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCEC' 데이터 수집 완료.
[1402/9399] 'CCEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1403/9399] 'CCEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1404/9399] 'CCEP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCEP' 데이터 수집 완료.
[1405/9399] 'CCFE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1406/9399] 'CCG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1407/9399] 'CCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCI' 데이터 수집 완료.
[1408/9399] 'CCIF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1409/9399] 'CCII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1410/9399] 'CCIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1411/9399] 'CCJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCJ' 데이터 수집 완료.
[1412/9399] 'CCK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCK' 데이터 수집 완료.
[1413/9399] 'CCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCL' 데이터 수집 완료.
[1414/9399] 'CCLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCLD' 데이터 수집 완료.
[1415/9399] 'CCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCM' 데이터 수집 완료.
[1416/9399] 'CCMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1417/9399] 'CCNE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCNE' 데이터 수집 완료.
[1418/9399] 'CCNR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1419/9399] 'CCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1420/9399] 'CCOI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCOI' 데이터 수집 완료.
[1421/9399] 'CCOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1422/9399] 'CCRD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCRD' 데이터 수집 완료.
[1423/9399] 'CCRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCRN' 데이터 수집 완료.
[1424/9399] 'CCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCS' 데이터 수집 완료.
[1425/9399] 'CCSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1426/9399] 'CCSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1427/9399] 'CCSO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1428/9399] 'CCTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1429/9399] 'CCU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CCU' 데이터 수집 완료.
[1430/9399] 'CDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1431/9399] 'CDE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDE' 데이터 수집 완료.
[1432/9399] 'CDEI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1433/9399] 'CDIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1434/9399] 'CDIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDIO' 데이터 수집 완료.
[1435/9399] 'CDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1436/9399] 'CDLR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1437/9399] 'CDLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDLX' 데이터 수집 완료.
[1438/9399] 'CDNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDNA' 데이터 수집 완료.
[1439/9399] 'CDNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDNS' 데이터 수집 완료.
[1440/9399] 'CDP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDP' 데이터 수집 완료.
[1441/9399] 'CDRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDRE' 데이터 수집 완료.
[1442/9399] 'CDRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDRO' 데이터 수집 완료.
[1443/9399] 'CDT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1444/9399] 'CDTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1445/9399] 'CDTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDTX' 데이터 수집 완료.
[1446/9399] 'CDW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDW' 데이터 수집 완료.
[1447/9399] 'CDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1448/9399] 'CDXS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDXS' 데이터 수집 완료.
[1449/9399] 'CDZI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CDZI' 데이터 수집 완료.
[1450/9399] 'CE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CE' 데이터 수집 완료.
[1451/9399] 'CECO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CECO' 데이터 수집 완료.
[1452/9399] 'CEE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CEE' 데이터 수집 완료.
[1453/9399] 'CEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1454/9399] 'CEFA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1455/9399] 'CEFD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1456/9399] 'CEG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CEG' 데이터 수집 완료.
[1457/9399] 'CELC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CELC' 데이터 수집 완료.
[1458/9399] 'CELH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CELH' 데이터 수집 완료.
[1459/9399] 'CELU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CELU' 데이터 수집 완료.
[1460/9399] 'CELZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CELZ' 데이터 수집 완료.
[1461/9399] 'CENN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CENN' 데이터 수집 완료.
[1462/9399] 'CENT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CENT' 데이터 수집 완료.
[1463/9399] 'CENTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CENTA' 데이터 수집 완료.
[1464/9399] 'CENX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CENX' 데이터 수집 완료.
[1465/9399] 'CEP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1466/9399] 'CEPF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1467/9399] 'CEPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1468/9399] 'CEPO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1469/9399] 'CEPT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1470/9399] 'CEPU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CEPU' 데이터 수집 완료.
[1471/9399] 'CERO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1472/9399] 'CERS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CERS' 데이터 수집 완료.
[1473/9399] 'CERT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CERT' 데이터 수집 완료.
[1474/9399] 'CERY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1475/9399] 'CET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CET' 데이터 수집 완료.
[1476/9399] 'CETX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CETX' 데이터 수집 완료.
[1477/9399] 'CETY' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1478/9399] 'CEV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CEV' 데이터 수집 완료.
[1479/9399] 'CEVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CEVA' 데이터 수집 완료.
[1480/9399] 'CEW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1481/9399] 'CF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CF' 데이터 수집 완료.
[1482/9399] 'CFA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1483/9399] 'CFBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CFBK' 데이터 수집 완료.
[1484/9399] 'CFFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CFFI' 데이터 수집 완료.
[1485/9399] 'CFFN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CFFN' 데이터 수집 완료.
[1486/9399] 'CFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CFG' 데이터 수집 완료.
[1487/9399] 'CFLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CFLT' 데이터 수집 완료.
[1488/9399] 'CFND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1489/9399] 'CFO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1490/9399] 'CFR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CFR' 데이터 수집 완료.
[1491/9399] 'CFSB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CFSB' 데이터 수집 완료.
[1492/9399] 'CG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CG' 데이터 수집 완료.
[1493/9399] 'CGAU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CGAU' 데이터 수집 완료.
[1494/9399] 'CGBD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CGBD' 데이터 수집 완료.
[1495/9399] 'CGBL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1496/9399] 'CGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CGC' 데이터 수집 완료.
[1497/9399] 'CGCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1498/9399] 'CGCP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1499/9399] 'CGCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1500/9399] 'CGCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1501/9399] 'CGDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1502/9399] 'CGDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1503/9399] 'CGEM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CGEM' 데이터 수집 완료.
[1504/9399] 'CGEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CGEN' 데이터 수집 완료.
[1505/9399] 'CGGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1506/9399] 'CGGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1507/9399] 'CGGO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1508/9399] 'CGGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1509/9399] 'CGHM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1510/9399] 'CGHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1511/9399] 'CGIB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1512/9399] 'CGIC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1513/9399] 'CGIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1514/9399] 'CGMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1515/9399] 'CGMS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1516/9399] 'CGMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1517/9399] 'CGNG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1518/9399] 'CGNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CGNT' 데이터 수집 완료.
[1519/9399] 'CGNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CGNX' 데이터 수집 완료.
[1520/9399] 'CGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CGO' 데이터 수집 완료.
[1521/9399] 'CGON' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1522/9399] 'CGRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1523/9399] 'CGSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1524/9399] 'CGSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1525/9399] 'CGTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1526/9399] 'CGTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CGTX' 데이터 수집 완료.
[1527/9399] 'CGUI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1528/9399] 'CGUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1529/9399] 'CGV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1530/9399] 'CGVV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1531/9399] 'CGW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1532/9399] 'CGXU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1533/9399] 'CHA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1534/9399] 'CHAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1535/9399] 'CHAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1536/9399] 'CHAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1537/9399] 'CHAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1538/9399] 'CHCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHCI' 데이터 수집 완료.
[1539/9399] 'CHCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHCO' 데이터 수집 완료.
[1540/9399] 'CHCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHCT' 데이터 수집 완료.
[1541/9399] 'CHD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHD' 데이터 수집 완료.
[1542/9399] 'CHDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHDN' 데이터 수집 완료.
[1543/9399] 'CHE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHE' 데이터 수집 완료.
[1544/9399] 'CHECU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1545/9399] 'CHEF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHEF' 데이터 수집 완료.
[1546/9399] 'CHEK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHEK' 데이터 수집 완료.
[1547/9399] 'CHGG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHGG' 데이터 수집 완료.
[1548/9399] 'CHGX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1549/9399] 'CHH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1550/9399] 'CHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHI' 데이터 수집 완료.
[1551/9399] 'CHIQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1552/9399] 'CHKP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHKP' 데이터 수집 완료.
[1553/9399] 'CHMG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1554/9399] 'CHMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHMI' 데이터 수집 완료.
[1555/9399] 'CHN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHN' 데이터 수집 완료.
[1556/9399] 'CHNR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHNR' 데이터 수집 완료.
[1557/9399] 'CHOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1558/9399] 'CHPG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1559/9399] 'CHPS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1560/9399] 'CHPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHPT' 데이터 수집 완료.
[1561/9399] 'CHPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1562/9399] 'CHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHR' 데이터 수집 완료.
[1563/9399] 'CHRD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHRD' 데이터 수집 완료.
[1564/9399] 'CHRI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1565/9399] 'CHRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHRS' 데이터 수집 완료.
[1566/9399] 'CHRW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHRW' 데이터 수집 완료.
[1567/9399] 'CHSN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1568/9399] 'CHT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHT' 데이터 수집 완료.
[1569/9399] 'CHTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHTR' 데이터 수집 완료.
[1570/9399] 'CHW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHW' 데이터 수집 완료.
[1571/9399] 'CHWY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHWY' 데이터 수집 완료.
[1572/9399] 'CHY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CHY' 데이터 수집 완료.
[1573/9399] 'CHYM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1574/9399] 'CI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CI' 데이터 수집 완료.
[1575/9399] 'CIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIA' 데이터 수집 완료.
[1576/9399] 'CIB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIB' 데이터 수집 완료.
[1577/9399] 'CIBR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1578/9399] 'CIEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIEN' 데이터 수집 완료.
[1579/9399] 'CIF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIF' 데이터 수집 완료.
[1580/9399] 'CIFR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIFR' 데이터 수집 완료.
[1581/9399] 'CIG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIG' 데이터 수집 완료.
[1582/9399] 'CIGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIGI' 데이터 수집 완료.
[1583/9399] 'CIGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1584/9399] 'CII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CII' 데이터 수집 완료.
[1585/9399] 'CIIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIIT' 데이터 수집 완료.
[1586/9399] 'CIK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIK' 데이터 수집 완료.
[1587/9399] 'CIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1588/9399] 'CIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIM' 데이터 수집 완료.
[1589/9399] 'CINF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CINF' 데이터 수집 완료.
[1590/9399] 'CING' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CING' 데이터 수집 완료.
[1591/9399] 'CINT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CINT' 데이터 수집 완료.
[1592/9399] 'CIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIO' 데이터 수집 완료.
[1593/9399] 'CION' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CION' 데이터 수집 완료.
[1594/9399] 'CISO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CISO' 데이터 수집 완료.
[1595/9399] 'CISS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1596/9399] 'CIVB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIVB' 데이터 수집 완료.
[1597/9399] 'CIVI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIVI' 데이터 수집 완료.
[1598/9399] 'CIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CIX' 데이터 수집 완료.
[1599/9399] 'CJET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1600/9399] 'CJMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1601/9399] 'CKX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CKX' 데이터 수집 완료.
[1602/9399] 'CL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CL' 데이터 수집 완료.
[1603/9399] 'CLAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLAR' 데이터 수집 완료.
[1604/9399] 'CLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLB' 데이터 수집 완료.
[1605/9399] 'CLBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLBK' 데이터 수집 완료.
[1606/9399] 'CLBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLBT' 데이터 수집 완료.
[1607/9399] 'CLCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1608/9399] 'CLCO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1609/9399] 'CLCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1610/9399] 'CLDI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1611/9399] 'CLDT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLDT' 데이터 수집 완료.
[1612/9399] 'CLDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLDX' 데이터 수집 완료.
[1613/9399] 'CLF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLF' 데이터 수집 완료.
[1614/9399] 'CLFD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLFD' 데이터 수집 완료.
[1615/9399] 'CLGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLGN' 데이터 수집 완료.
[1616/9399] 'CLH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLH' 데이터 수집 완료.
[1617/9399] 'CLIK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1618/9399] 'CLIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1619/9399] 'CLIR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLIR' 데이터 수집 완료.
[1620/9399] 'CLIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1621/9399] 'CLLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLLS' 데이터 수집 완료.
[1622/9399] 'CLM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLM' 데이터 수집 완료.
[1623/9399] 'CLMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLMB' 데이터 수집 완료.
[1624/9399] 'CLMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1625/9399] 'CLNE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLNE' 데이터 수집 완료.
[1626/9399] 'CLNN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1627/9399] 'CLOA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1628/9399] 'CLOB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1629/9399] 'CLOD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1630/9399] 'CLOI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1631/9399] 'CLOU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1632/9399] 'CLOV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLOV' 데이터 수집 완료.
[1633/9399] 'CLOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1634/9399] 'CLOZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1635/9399] 'CLPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1636/9399] 'CLPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLPS' 데이터 수집 완료.
[1637/9399] 'CLPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLPT' 데이터 수집 완료.
[1638/9399] 'CLRB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLRB' 데이터 수집 완료.
[1639/9399] 'CLRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLRO' 데이터 수집 완료.
[1640/9399] 'CLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLS' 데이터 수집 완료.
[1641/9399] 'CLSD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1642/9399] 'CLSK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLSK' 데이터 수집 완료.
[1643/9399] 'CLSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1644/9399] 'CLST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLST' 데이터 수집 완료.
[1645/9399] 'CLVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLVT' 데이터 수집 완료.
[1646/9399] 'CLW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLW' 데이터 수집 완료.
[1647/9399] 'CLWT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLWT' 데이터 수집 완료.
[1648/9399] 'CLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLX' 데이터 수집 완료.
[1649/9399] 'CLYM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CLYM' 데이터 수집 완료.
[1650/9399] 'CM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CM' 데이터 수집 완료.
[1651/9399] 'CMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMA' 데이터 수집 완료.
[1652/9399] 'CMBM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMBM' 데이터 수집 완료.
[1653/9399] 'CMBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1654/9399] 'CMBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMBT' 데이터 수집 완료.
[1655/9399] 'CMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMC' 데이터 수집 완료.
[1656/9399] 'CMCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMCL' 데이터 수집 완료.
[1657/9399] 'CMCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMCM' 데이터 수집 완료.
[1658/9399] 'CMCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMCO' 데이터 수집 완료.
[1659/9399] 'CMCSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMCSA' 데이터 수집 완료.
[1660/9399] 'CMCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMCT' 데이터 수집 완료.
[1661/9399] 'CMDB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1662/9399] 'CMDT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1663/9399] 'CMDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1664/9399] 'CME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CME' 데이터 수집 완료.
[1665/9399] 'CMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1666/9399] 'CMG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMG' 데이터 수집 완료.
[1667/9399] 'CMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMI' 데이터 수집 완료.
[1668/9399] 'CMMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMMB' 데이터 수집 완료.
[1669/9399] 'CMND' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1670/9399] 'CMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMP' 데이터 수집 완료.
[1671/9399] 'CMPO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1672/9399] 'CMPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1673/9399] 'CMPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMPS' 데이터 수집 완료.
[1674/9399] 'CMPX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMPX' 데이터 수집 완료.
[1675/9399] 'CMRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMRC' 데이터 수집 완료.
[1676/9399] 'CMRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMRE' 데이터 수집 완료.
[1677/9399] 'CMS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMS' 데이터 수집 완료.
[1678/9399] 'CMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMT' 데이터 수집 완료.
[1679/9399] 'CMTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMTG' 데이터 수집 완료.
[1680/9399] 'CMTL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMTL' 데이터 수집 완료.
[1681/9399] 'CMU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CMU' 데이터 수집 완료.
[1682/9399] 'CNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNA' 데이터 수집 완료.
[1683/9399] 'CNBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1684/9399] 'CNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNC' 데이터 수집 완료.
[1685/9399] 'CNCK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNCK' 데이터 수집 완료.
[1686/9399] 'CNDT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNDT' 데이터 수집 완료.
[1687/9399] 'CNEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1688/9399] 'CNET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNET' 데이터 수집 완료.
[1689/9399] 'CNEY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNEY' 데이터 수집 완료.
[1690/9399] 'CNF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNF' 데이터 수집 완료.
[1691/9399] 'CNFR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNFR' 데이터 수집 완료.
[1692/9399] 'CNH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNH' 데이터 수집 완료.
[1693/9399] 'CNI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNI' 데이터 수집 완료.
[1694/9399] 'CNK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNK' 데이터 수집 완료.
[1695/9399] 'CNL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNL' 데이터 수집 완료.
[1696/9399] 'CNM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNM' 데이터 수집 완료.
[1697/9399] 'CNMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNMD' 데이터 수집 완료.
[1698/9399] 'CNNE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNNE' 데이터 수집 완료.
[1699/9399] 'CNO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNO' 데이터 수집 완료.
[1700/9399] 'CNOB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNOB' 데이터 수집 완료.
[1701/9399] 'CNP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNP' 데이터 수집 완료.
[1702/9399] 'CNQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNQ' 데이터 수집 완료.
[1703/9399] 'CNR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNR' 데이터 수집 완료.
[1704/9399] 'CNRG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1705/9399] 'CNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNS' 데이터 수집 완료.
[1706/9399] 'CNSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNSP' 데이터 수집 완료.
[1707/9399] 'CNTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNTA' 데이터 수집 완료.
[1708/9399] 'CNTB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNTB' 데이터 수집 완료.
[1709/9399] 'CNTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNTX' 데이터 수집 완료.
[1710/9399] 'CNTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNTY' 데이터 수집 완료.
[1711/9399] 'CNVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNVS' 데이터 수집 완료.
[1712/9399] 'CNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNX' 데이터 수집 완료.
[1713/9399] 'CNXC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNXC' 데이터 수집 완료.
[1714/9399] 'CNXN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CNXN' 데이터 수집 완료.
[1715/9399] 'CNXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1716/9399] 'COAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1717/9399] 'COCH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1718/9399] 'COCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COCO' 데이터 수집 완료.
[1719/9399] 'COCP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COCP' 데이터 수집 완료.
[1720/9399] 'CODA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CODA' 데이터 수집 완료.
[1721/9399] 'CODI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CODI' 데이터 수집 완료.
[1722/9399] 'CODX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CODX' 데이터 수집 완료.
[1723/9399] 'COE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1724/9399] 'COEP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COEP' 데이터 수집 완료.
[1725/9399] 'COF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COF' 데이터 수집 완료.
[1726/9399] 'COFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COFS' 데이터 수집 완료.
[1727/9399] 'COGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COGT' 데이터 수집 완료.
[1728/9399] 'COHN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COHN' 데이터 수집 완료.
[1729/9399] 'COHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COHR' 데이터 수집 완료.
[1730/9399] 'COHU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COHU' 데이터 수집 완료.
[1731/9399] 'COIA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1732/9399] 'COIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1733/9399] 'COIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COIN' 데이터 수집 완료.
[1734/9399] 'COKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COKE' 데이터 수집 완료.
[1735/9399] 'COLA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1736/9399] 'COLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COLB' 데이터 수집 완료.
[1737/9399] 'COLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COLD' 데이터 수집 완료.
[1738/9399] 'COLL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COLL' 데이터 수집 완료.
[1739/9399] 'COLM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COLM' 데이터 수집 완료.
[1740/9399] 'COLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1741/9399] 'COM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1742/9399] 'COMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1743/9399] 'COMM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1744/9399] 'COMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COMP' 데이터 수집 완료.
[1745/9399] 'COMT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1746/9399] 'CON' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1747/9399] 'CONI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1748/9399] 'CONL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1749/9399] 'CONY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1750/9399] 'COO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COO' 데이터 수집 완료.
[1751/9399] 'COOK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COOK' 데이터 수집 완료.
[1752/9399] 'COOP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COOP' 데이터 수집 완료.
[1753/9399] 'COOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1754/9399] 'COP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COP' 데이터 수집 완료.
[1755/9399] 'COPJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1756/9399] 'COPL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1757/9399] 'COPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1758/9399] 'COPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1759/9399] 'COPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1760/9399] 'COR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COR' 데이터 수집 완료.
[1761/9399] 'CORN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1762/9399] 'CORO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1763/9399] 'CORP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1764/9399] 'CORT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CORT' 데이터 수집 완료.
[1765/9399] 'CORZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1766/9399] 'COSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COSM' 데이터 수집 완료.
[1767/9399] 'COSO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1768/9399] 'COST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COST' 데이터 수집 완료.
[1769/9399] 'COTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1770/9399] 'COTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COTY' 데이터 수집 완료.
[1771/9399] 'COUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'COUR' 데이터 수집 완료.
[1772/9399] 'COWG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1773/9399] 'COWS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1774/9399] 'COYA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1775/9399] 'COYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1776/9399] 'CP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CP' 데이터 수집 완료.
[1777/9399] 'CPA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPA' 데이터 수집 완료.
[1778/9399] 'CPAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPAC' 데이터 수집 완료.
[1779/9399] 'CPAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1780/9399] 'CPAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1781/9399] 'CPAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPAY' 데이터 수집 완료.
[1782/9399] 'CPB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPB' 데이터 수집 완료.
[1783/9399] 'CPBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1784/9399] 'CPER' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1785/9399] 'CPF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPF' 데이터 수집 완료.
[1786/9399] 'CPHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPHC' 데이터 수집 완료.
[1787/9399] 'CPHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPHI' 데이터 수집 완료.
[1788/9399] 'CPHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1789/9399] 'CPII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1790/9399] 'CPIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPIX' 데이터 수집 완료.
[1791/9399] 'CPK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPK' 데이터 수집 완료.
[1792/9399] 'CPLB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1793/9399] 'CPLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1794/9399] 'CPNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPNG' 데이터 수집 완료.
[1795/9399] 'CPNJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1796/9399] 'CPNM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1797/9399] 'CPNQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1798/9399] 'CPNS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1799/9399] 'CPOP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPOP' 데이터 수집 완료.
[1800/9399] 'CPRA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1801/9399] 'CPRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPRI' 데이터 수집 완료.
[1802/9399] 'CPRJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1803/9399] 'CPRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1804/9399] 'CPRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPRT' 데이터 수집 완료.
[1805/9399] 'CPRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPRX' 데이터 수집 완료.
[1806/9399] 'CPRY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1807/9399] 'CPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1808/9399] 'CPSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1809/9399] 'CPSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1810/9399] 'CPSF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1811/9399] 'CPSH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPSH' 데이터 수집 완료.
[1812/9399] 'CPSJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1813/9399] 'CPSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1814/9399] 'CPSN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1815/9399] 'CPSO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1816/9399] 'CPSP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1817/9399] 'CPSR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1818/9399] 'CPSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPSS' 데이터 수집 완료.
[1819/9399] 'CPST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1820/9399] 'CPSU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1821/9399] 'CPSY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1822/9399] 'CPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CPT' 데이터 수집 완료.
[1823/9399] 'CPXR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1824/9399] 'CPZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1825/9399] 'CQP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1826/9399] 'CQQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1827/9399] 'CR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1828/9399] 'CRAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRAI' 데이터 수집 완료.
[1829/9399] 'CRAK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1830/9399] 'CRAQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1831/9399] 'CRBG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRBG' 데이터 수집 완료.
[1832/9399] 'CRBN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1833/9399] 'CRBP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRBP' 데이터 수집 완료.
[1834/9399] 'CRBU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRBU' 데이터 수집 완료.
[1835/9399] 'CRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRC' 데이터 수집 완료.
[1836/9399] 'CRCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1837/9399] 'CRCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1838/9399] 'CRCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1839/9399] 'CRCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRCT' 데이터 수집 완료.
[1840/9399] 'CRD-A' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRD-A' 데이터 수집 완료.
[1841/9399] 'CRD-B' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRD-B' 데이터 수집 완료.
[1842/9399] 'CRDF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRDF' 데이터 수집 완료.
[1843/9399] 'CRDL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRDL' 데이터 수집 완료.
[1844/9399] 'CRDO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRDO' 데이터 수집 완료.
[1845/9399] 'CRDT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1846/9399] 'CRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1847/9399] 'CRED' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1848/9399] 'CREG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CREG' 데이터 수집 완료.
[1849/9399] 'CRESY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRESY' 데이터 수집 완료.
[1850/9399] 'CREV' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1851/9399] 'CREX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CREX' 데이터 수집 완료.
[1852/9399] 'CRF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRF' 데이터 수집 완료.
[1853/9399] 'CRGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRGO' 데이터 수집 완료.
[1854/9399] 'CRGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1855/9399] 'CRGY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRGY' 데이터 수집 완료.
[1856/9399] 'CRH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRH' 데이터 수집 완료.
[1857/9399] 'CRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRI' 데이터 수집 완료.
[1858/9399] 'CRIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1859/9399] 'CRK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRK' 데이터 수집 완료.
[1860/9399] 'CRL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRL' 데이터 수집 완료.
[1861/9399] 'CRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRM' 데이터 수집 완료.
[1862/9399] 'CRMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRMD' 데이터 수집 완료.
[1863/9399] 'CRMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1864/9399] 'CRML' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRML' 데이터 수집 완료.
[1865/9399] 'CRMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRMT' 데이터 수집 완료.
[1866/9399] 'CRNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRNC' 데이터 수집 완료.
[1867/9399] 'CRNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRNT' 데이터 수집 완료.
[1868/9399] 'CRNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRNX' 데이터 수집 완료.
[1869/9399] 'CRON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRON' 데이터 수집 완료.
[1870/9399] 'CROX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CROX' 데이터 수집 완료.
[1871/9399] 'CRPT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1872/9399] 'CRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRS' 데이터 수집 완료.
[1873/9399] 'CRSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1874/9399] 'CRSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRSP' 데이터 수집 완료.
[1875/9399] 'CRSR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRSR' 데이터 수집 완료.
[1876/9399] 'CRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRT' 데이터 수집 완료.
[1877/9399] 'CRTC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1878/9399] 'CRTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRTO' 데이터 수집 완료.
[1879/9399] 'CRUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRUS' 데이터 수집 완료.
[1880/9399] 'CRVL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRVL' 데이터 수집 완료.
[1881/9399] 'CRVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRVO' 데이터 수집 완료.
[1882/9399] 'CRVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRVS' 데이터 수집 완료.
[1883/9399] 'CRWD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRWD' 데이터 수집 완료.
[1884/9399] 'CRWG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1885/9399] 'CRWL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1886/9399] 'CRWS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CRWS' 데이터 수집 완료.
[1887/9399] 'CRWV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1888/9399] 'CSAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1889/9399] 'CSAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSAN' 데이터 수집 완료.
[1890/9399] 'CSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1891/9399] 'CSBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSBR' 데이터 수집 완료.
[1892/9399] 'CSCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1893/9399] 'CSCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSCO' 데이터 수집 완료.
[1894/9399] 'CSCS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1895/9399] 'CSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1896/9399] 'CSGP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSGP' 데이터 수집 완료.
[1897/9399] 'CSGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSGS' 데이터 수집 완료.
[1898/9399] 'CSHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1899/9399] 'CSHP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1900/9399] 'CSIQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSIQ' 데이터 수집 완료.
[1901/9399] 'CSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSL' 데이터 수집 완료.
[1902/9399] 'CSMD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1903/9399] 'CSNR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1904/9399] 'CSPF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1905/9399] 'CSPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSPI' 데이터 수집 완료.
[1906/9399] 'CSQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSQ' 데이터 수집 완료.
[1907/9399] 'CSR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSR' 데이터 수집 완료.
[1908/9399] 'CSRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1909/9399] 'CSTE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSTE' 데이터 수집 완료.
[1910/9399] 'CSTL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSTL' 데이터 수집 완료.
[1911/9399] 'CSTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSTM' 데이터 수집 완료.
[1912/9399] 'CSV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSV' 데이터 수집 완료.
[1913/9399] 'CSW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSW' 데이터 수집 완료.
[1914/9399] 'CSWC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSWC' 데이터 수집 완료.
[1915/9399] 'CSX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CSX' 데이터 수집 완료.
[1916/9399] 'CTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1917/9399] 'CTAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTAS' 데이터 수집 완료.
[1918/9399] 'CTBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTBI' 데이터 수집 완료.
[1919/9399] 'CTEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1920/9399] 'CTEV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTEV' 데이터 수집 완료.
[1921/9399] 'CTEX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1922/9399] 'CTGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1923/9399] 'CTKB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTKB' 데이터 수집 완료.
[1924/9399] 'CTLP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTLP' 데이터 수집 완료.
[1925/9399] 'CTM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1926/9399] 'CTMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTMX' 데이터 수집 완료.
[1927/9399] 'CTNM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1928/9399] 'CTNT' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1929/9399] 'CTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTO' 데이터 수집 완료.
[1930/9399] 'CTOR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1931/9399] 'CTOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTOS' 데이터 수집 완료.
[1932/9399] 'CTRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTRA' 데이터 수집 완료.
[1933/9399] 'CTRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTRE' 데이터 수집 완료.
[1934/9399] 'CTRI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1935/9399] 'CTRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTRM' 데이터 수집 완료.
[1936/9399] 'CTRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTRN' 데이터 수집 완료.
[1937/9399] 'CTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTS' 데이터 수집 완료.
[1938/9399] 'CTSH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTSH' 데이터 수집 완료.
[1939/9399] 'CTSO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTSO' 데이터 수집 완료.
[1940/9399] 'CTVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTVA' 데이터 수집 완료.
[1941/9399] 'CTW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1942/9399] 'CTWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1943/9399] 'CTXR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CTXR' 데이터 수집 완료.
[1944/9399] 'CUB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1945/9399] 'CUBE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CUBE' 데이터 수집 완료.
[1946/9399] 'CUBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CUBI' 데이터 수집 완료.
[1947/9399] 'CUE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CUE' 데이터 수집 완료.
[1948/9399] 'CUK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CUK' 데이터 수집 완료.
[1949/9399] 'CULP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CULP' 데이터 수집 완료.
[1950/9399] 'CUPR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1951/9399] 'CURB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1952/9399] 'CURE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1953/9399] 'CURI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CURI' 데이터 수집 완료.
[1954/9399] 'CURR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1955/9399] 'CURV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[1956/9399] 'CURX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1957/9399] 'CUT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1958/9399] 'CUZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CUZ' 데이터 수집 완료.
[1959/9399] 'CV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1960/9399] 'CVAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVAC' 데이터 수집 완료.
[1961/9399] 'CVBF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVBF' 데이터 수집 완료.
[1962/9399] 'CVCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVCO' 데이터 수집 완료.
[1963/9399] 'CVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVE' 데이터 수집 완료.
[1964/9399] 'CVEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVEO' 데이터 수집 완료.
[1965/9399] 'CVGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVGI' 데이터 수집 완료.
[1966/9399] 'CVGW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVGW' 데이터 수집 완료.
[1967/9399] 'CVI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVI' 데이터 수집 완료.
[1968/9399] 'CVIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1969/9399] 'CVKD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1970/9399] 'CVLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1971/9399] 'CVLG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVLG' 데이터 수집 완료.
[1972/9399] 'CVLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVLT' 데이터 수집 완료.
[1973/9399] 'CVM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVM' 데이터 수집 완료.
[1974/9399] 'CVMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1975/9399] 'CVNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVNA' 데이터 수집 완료.
[1976/9399] 'CVNX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1977/9399] 'CVNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1978/9399] 'CVR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVR' 데이터 수집 완료.
[1979/9399] 'CVRD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1980/9399] 'CVRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1981/9399] 'CVRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVRX' 데이터 수집 완료.
[1982/9399] 'CVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVS' 데이터 수집 완료.
[1983/9399] 'CVSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1984/9399] 'CVSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1985/9399] 'CVU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVU' 데이터 수집 완료.
[1986/9399] 'CVV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVV' 데이터 수집 완료.
[1987/9399] 'CVX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CVX' 데이터 수집 완료.
[1988/9399] 'CVY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1989/9399] 'CW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CW' 데이터 수집 완료.
[1990/9399] 'CWAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CWAN' 데이터 수집 완료.
[1991/9399] 'CWB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1992/9399] 'CWBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CWBC' 데이터 수집 완료.
[1993/9399] 'CWCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CWCO' 데이터 수집 완료.
[1994/9399] 'CWD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[1995/9399] 'CWEB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[1996/9399] 'CWEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CWEN' 데이터 수집 완료.
[1997/9399] 'CWEN-A' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CWEN-A' 데이터 수집 완료.
[1998/9399] 'CWH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CWH' 데이터 수집 완료.
[1999/9399] 'CWI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2000/9399] 'CWK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CWK' 데이터 수집 완료.
[2001/9399] 'CWS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2002/9399] 'CWST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CWST' 데이터 수집 완료.
[2003/9399] 'CWT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CWT' 데이터 수집 완료.
[2004/9399] 'CX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CX' 데이터 수집 완료.
[2005/9399] 'CXAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CXAI' 데이터 수집 완료.
[2006/9399] 'CXDO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CXDO' 데이터 수집 완료.
[2007/9399] 'CXE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CXE' 데이터 수집 완료.
[2008/9399] 'CXH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CXH' 데이터 수집 완료.
[2009/9399] 'CXM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CXM' 데이터 수집 완료.
[2010/9399] 'CXRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2011/9399] 'CXSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2012/9399] 'CXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CXT' 데이터 수집 완료.
[2013/9399] 'CXW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CXW' 데이터 수집 완료.
[2014/9399] 'CYBN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CYBN' 데이터 수집 완료.
[2015/9399] 'CYBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CYBR' 데이터 수집 완료.
[2016/9399] 'CYCN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CYCN' 데이터 수집 완료.
[2017/9399] 'CYCU' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2018/9399] 'CYD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2019/9399] 'CYH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2020/9399] 'CYN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CYN' 데이터 수집 완료.
[2021/9399] 'CYRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CYRX' 데이터 수집 완료.
[2022/9399] 'CYTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2023/9399] 'CZA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2024/9399] 'CZAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2025/9399] 'CZFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CZFS' 데이터 수집 완료.
[2026/9399] 'CZNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CZNC' 데이터 수집 완료.
[2027/9399] 'CZR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CZR' 데이터 수집 완료.
[2028/9399] 'CZWI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'CZWI' 데이터 수집 완료.
[2029/9399] 'D' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'D' 데이터 수집 완료.
[2030/9399] 'DAAQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2031/9399] 'DABS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2032/9399] 'DAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAC' 데이터 수집 완료.
[2033/9399] 'DADS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2034/9399] 'DAIC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2035/9399] 'DAIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAIO' 데이터 수집 완료.
[2036/9399] 'DAK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2037/9399] 'DAKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAKT' 데이터 수집 완료.
[2038/9399] 'DAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAL' 데이터 수집 완료.
[2039/9399] 'DALI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2040/9399] 'DALN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DALN' 데이터 수집 완료.
[2041/9399] 'DAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAN' 데이터 수집 완료.
[2042/9399] 'DAO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2043/9399] 'DAPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2044/9399] 'DAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAR' 데이터 수집 완료.
[2045/9399] 'DARE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2046/9399] 'DARP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2047/9399] 'DASH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DASH' 데이터 수집 완료.
[2048/9399] 'DAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2049/9399] 'DAVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAVA' 데이터 수집 완료.
[2050/9399] 'DAVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAVE' 데이터 수집 완료.
[2051/9399] 'DAWN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAWN' 데이터 수집 완료.
[2052/9399] 'DAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2053/9399] 'DAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DAY' 데이터 수집 완료.
[2054/9399] 'DB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DB' 데이터 수집 완료.
[2055/9399] 'DBA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2056/9399] 'DBAW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2057/9399] 'DBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2058/9399] 'DBC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2059/9399] 'DBD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2060/9399] 'DBE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2061/9399] 'DBEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2062/9399] 'DBEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2063/9399] 'DBEU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2064/9399] 'DBEZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2065/9399] 'DBGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DBGI' 데이터 수집 완료.
[2066/9399] 'DBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DBI' 데이터 수집 완료.
[2067/9399] 'DBJP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2068/9399] 'DBL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2069/9399] 'DBMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2070/9399] 'DBND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2071/9399] 'DBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2072/9399] 'DBP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2073/9399] 'DBRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DBRG' 데이터 수집 완료.
[2074/9399] 'DBVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DBVT' 데이터 수집 완료.
[2075/9399] 'DBX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2076/9399] 'DC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DC' 데이터 수집 완료.
[2077/9399] 'DCBO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DCBO' 데이터 수집 완료.
[2078/9399] 'DCGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DCGO' 데이터 수집 완료.
[2079/9399] 'DCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DCI' 데이터 수집 완료.
[2080/9399] 'DCMT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2081/9399] 'DCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DCO' 데이터 수집 완료.
[2082/9399] 'DCOM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DCOM' 데이터 수집 완료.
[2083/9399] 'DCOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2084/9399] 'DCRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2085/9399] 'DCTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DCTH' 데이터 수집 완료.
[2086/9399] 'DD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DD' 데이터 수집 완료.
[2087/9399] 'DDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2088/9399] 'DDD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DDD' 데이터 수집 완료.
[2089/9399] 'DDI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DDI' 데이터 수집 완료.
[2090/9399] 'DDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2091/9399] 'DDL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DDL' 데이터 수집 완료.
[2092/9399] 'DDM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2093/9399] 'DDOG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DDOG' 데이터 수집 완료.
[2094/9399] 'DDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DDS' 데이터 수집 완료.
[2095/9399] 'DE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DE' 데이터 수집 완료.
[2096/9399] 'DEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DEA' 데이터 수집 완료.
[2097/9399] 'DEC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2098/9399] 'DECK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DECK' 데이터 수집 완료.
[2099/9399] 'DECO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2100/9399] 'DECT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2101/9399] 'DECW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2102/9399] 'DEED' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2103/9399] 'DEEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2104/9399] 'DEEP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2105/9399] 'DEFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2106/9399] 'DEFT' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2107/9399] 'DEHP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2108/9399] 'DEI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DEI' 데이터 수집 완료.
[2109/9399] 'DELL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2110/9399] 'DEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2111/9399] 'DEMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2112/9399] 'DENN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2113/9399] 'DEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DEO' 데이터 수집 완료.
[2114/9399] 'DERM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DERM' 데이터 수집 완료.
[2115/9399] 'DES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2116/9399] 'DESK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2117/9399] 'DEUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2118/9399] 'DEVS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2119/9399] 'DEW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2120/9399] 'DEXC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2121/9399] 'DFAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2122/9399] 'DFAE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2123/9399] 'DFAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2124/9399] 'DFAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2125/9399] 'DFAS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2126/9399] 'DFAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2127/9399] 'DFAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2128/9399] 'DFAW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2129/9399] 'DFAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2130/9399] 'DFCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2131/9399] 'DFCF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2132/9399] 'DFDV' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2133/9399] 'DFE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2134/9399] 'DFEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2135/9399] 'DFEN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2136/9399] 'DFEV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2137/9399] 'DFGP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2138/9399] 'DFGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2139/9399] 'DFGX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2140/9399] 'DFH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DFH' 데이터 수집 완료.
[2141/9399] 'DFII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2142/9399] 'DFIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DFIN' 데이터 수집 완료.
[2143/9399] 'DFIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2144/9399] 'DFIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2145/9399] 'DFJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2146/9399] 'DFLI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2147/9399] 'DFLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2148/9399] 'DFNM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2149/9399] 'DFP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2150/9399] 'DFSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2151/9399] 'DFSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DFSC' 데이터 수집 완료.
[2152/9399] 'DFSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2153/9399] 'DFSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2154/9399] 'DFSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2155/9399] 'DFSU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2156/9399] 'DFSV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2157/9399] 'DFUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2158/9399] 'DFUV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2159/9399] 'DFVE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2160/9399] 'DFVX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2161/9399] 'DG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DG' 데이터 수집 완료.
[2162/9399] 'DGCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2163/9399] 'DGICA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DGICA' 데이터 수집 완료.
[2164/9399] 'DGII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DGII' 데이터 수집 완료.
[2165/9399] 'DGIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2166/9399] 'DGLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2167/9399] 'DGLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DGLY' 데이터 수집 완료.
[2168/9399] 'DGNX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2169/9399] 'DGP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2170/9399] 'DGRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2171/9399] 'DGRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2172/9399] 'DGRS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2173/9399] 'DGRW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2174/9399] 'DGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2175/9399] 'DGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2176/9399] 'DGX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DGX' 데이터 수집 완료.
[2177/9399] 'DGXX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DGXX' 데이터 수집 완료.
[2178/9399] 'DGZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2179/9399] 'DH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DH' 데이터 수집 완료.
[2180/9399] 'DHAI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2181/9399] 'DHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DHC' 데이터 수집 완료.
[2182/9399] 'DHF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DHF' 데이터 수집 완료.
[2183/9399] 'DHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DHI' 데이터 수집 완료.
[2184/9399] 'DHIL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DHIL' 데이터 수집 완료.
[2185/9399] 'DHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DHR' 데이터 수집 완료.
[2186/9399] 'DHS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2187/9399] 'DHSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2188/9399] 'DHT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DHT' 데이터 수집 완료.
[2189/9399] 'DHX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DHX' 데이터 수집 완료.
[2190/9399] 'DHY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DHY' 데이터 수집 완료.
[2191/9399] 'DIA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2192/9399] 'DIAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2193/9399] 'DIAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DIAX' 데이터 수집 완료.
[2194/9399] 'DIBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DIBS' 데이터 수집 완료.
[2195/9399] 'DIEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2196/9399] 'DIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2197/9399] 'DIM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2198/9399] 'DIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2199/9399] 'DINO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DINO' 데이터 수집 완료.
[2200/9399] 'DIOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DIOD' 데이터 수집 완료.
[2201/9399] 'DIPS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2202/9399] 'DIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DIS' 데이터 수집 완료.
[2203/9399] 'DISO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2204/9399] 'DIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DIT' 데이터 수집 완료.
[2205/9399] 'DIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2206/9399] 'DIVD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2207/9399] 'DIVE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2208/9399] 'DIVG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2209/9399] 'DIVI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2210/9399] 'DIVL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2211/9399] 'DIVO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2212/9399] 'DIVP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2213/9399] 'DIVS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2214/9399] 'DIVY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2215/9399] 'DIVZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2216/9399] 'DJCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DJCO' 데이터 수집 완료.
[2217/9399] 'DJD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2218/9399] 'DJIA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2219/9399] 'DJP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2220/9399] 'DJT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DJT' 데이터 수집 완료.
[2221/9399] 'DK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DK' 데이터 수집 완료.
[2222/9399] 'DKI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2223/9399] 'DKL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2224/9399] 'DKNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DKNG' 데이터 수집 완료.
[2225/9399] 'DKNX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2226/9399] 'DKS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DKS' 데이터 수집 완료.
[2227/9399] 'DLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DLB' 데이터 수집 완료.
[2228/9399] 'DLHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DLHC' 데이터 수집 완료.
[2229/9399] 'DLLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2230/9399] 'DLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2231/9399] 'DLNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DLNG' 데이터 수집 완료.
[2232/9399] 'DLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DLO' 데이터 수집 완료.
[2233/9399] 'DLPN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DLPN' 데이터 수집 완료.
[2234/9399] 'DLR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DLR' 데이터 수집 완료.
[2235/9399] 'DLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2236/9399] 'DLTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DLTH' 데이터 수집 완료.
[2237/9399] 'DLTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DLTR' 데이터 수집 완료.
[2238/9399] 'DLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DLX' 데이터 수집 완료.
[2239/9399] 'DLXY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2240/9399] 'DLY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2241/9399] 'DMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2242/9399] 'DMAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2243/9399] 'DMAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DMAC' 데이터 수집 완료.
[2244/9399] 'DMAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2245/9399] 'DMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DMB' 데이터 수집 완료.
[2246/9399] 'DMBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2247/9399] 'DMCY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2248/9399] 'DMLP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DMLP' 데이터 수집 완료.
[2249/9399] 'DMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DMO' 데이터 수집 완료.
[2250/9399] 'DMRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DMRC' 데이터 수집 완료.
[2251/9399] 'DMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2252/9399] 'DMXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2253/9399] 'DMYY' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2254/9399] 'DNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DNA' 데이터 수집 완료.
[2255/9399] 'DNL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2256/9399] 'DNLI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DNLI' 데이터 수집 완료.
[2257/9399] 'DNN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DNN' 데이터 수집 완료.
[2258/9399] 'DNOW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DNOW' 데이터 수집 완료.
[2259/9399] 'DNP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DNP' 데이터 수집 완료.
[2260/9399] 'DNTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DNTH' 데이터 수집 완료.
[2261/9399] 'DNUT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DNUT' 데이터 수집 완료.
[2262/9399] 'DOC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOC' 데이터 수집 완료.
[2263/9399] 'DOCN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2264/9399] 'DOCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOCS' 데이터 수집 완료.
[2265/9399] 'DOCU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOCU' 데이터 수집 완료.
[2266/9399] 'DOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2267/9399] 'DOGZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOGZ' 데이터 수집 완료.
[2268/9399] 'DOJE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2269/9399] 'DOL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2270/9399] 'DOLE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOLE' 데이터 수집 완료.
[2271/9399] 'DOMH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOMH' 데이터 수집 완료.
[2272/9399] 'DOMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2273/9399] 'DON' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2274/9399] 'DOOO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOOO' 데이터 수집 완료.
[2275/9399] 'DORM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DORM' 데이터 수집 완료.
[2276/9399] 'DOUG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOUG' 데이터 수집 완료.
[2277/9399] 'DOV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOV' 데이터 수집 완료.
[2278/9399] 'DOW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOW' 데이터 수집 완료.
[2279/9399] 'DOX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOX' 데이터 수집 완료.
[2280/9399] 'DOYU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DOYU' 데이터 수집 완료.
[2281/9399] 'DPG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2282/9399] 'DPRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DPRO' 데이터 수집 완료.
[2283/9399] 'DPST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2284/9399] 'DPZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2285/9399] 'DQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DQ' 데이터 수집 완료.
[2286/9399] 'DRAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2287/9399] 'DRAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2288/9399] 'DRCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2289/9399] 'DRD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DRD' 데이터 수집 완료.
[2290/9399] 'DRDB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2291/9399] 'DRH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DRH' 데이터 수집 완료.
[2292/9399] 'DRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DRI' 데이터 수집 완료.
[2293/9399] 'DRIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DRIO' 데이터 수집 완료.
[2294/9399] 'DRIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2295/9399] 'DRIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2296/9399] 'DRLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2297/9399] 'DRMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DRMA' 데이터 수집 완료.
[2298/9399] 'DRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2299/9399] 'DRRX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2300/9399] 'DRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DRS' 데이터 수집 완료.
[2301/9399] 'DRTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DRTS' 데이터 수집 완료.
[2302/9399] 'DRUG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DRUG' 데이터 수집 완료.
[2303/9399] 'DRUP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2304/9399] 'DRV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2305/9399] 'DRVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DRVN' 데이터 수집 완료.
[2306/9399] 'DSGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DSGN' 데이터 수집 완료.
[2307/9399] 'DSGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DSGR' 데이터 수집 완료.
[2308/9399] 'DSGX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DSGX' 데이터 수집 완료.
[2309/9399] 'DSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2310/9399] 'DSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2311/9399] 'DSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DSM' 데이터 수집 완료.
[2312/9399] 'DSMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2313/9399] 'DSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DSP' 데이터 수집 완료.
[2314/9399] 'DSPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2315/9399] 'DSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DSS' 데이터 수집 완료.
[2316/9399] 'DSTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2317/9399] 'DSTX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2318/9399] 'DSU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DSU' 데이터 수집 완료.
[2319/9399] 'DSWL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DSWL' 데이터 수집 완료.
[2320/9399] 'DSX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DSX' 데이터 수집 완료.
[2321/9399] 'DSY' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2322/9399] 'DT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DT' 데이터 수집 완료.
[2323/9399] 'DTAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2324/9399] 'DTCK' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2325/9399] 'DTCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2326/9399] 'DTD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2327/9399] 'DTE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DTE' 데이터 수집 완료.
[2328/9399] 'DTEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2329/9399] 'DTF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DTF' 데이터 수집 완료.
[2330/9399] 'DTH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2331/9399] 'DTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DTI' 데이터 수집 완료.
[2332/9399] 'DTIL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DTIL' 데이터 수집 완료.
[2333/9399] 'DTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DTM' 데이터 수집 완료.
[2334/9399] 'DTRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2335/9399] 'DTSQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2336/9399] 'DTSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DTSS' 데이터 수집 완료.
[2337/9399] 'DTST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DTST' 데이터 수집 완료.
[2338/9399] 'DUG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2339/9399] 'DUHP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2340/9399] 'DUK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DUK' 데이터 수집 완료.
[2341/9399] 'DUKH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2342/9399] 'DUKQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2343/9399] 'DUKX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2344/9399] 'DUKZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2345/9399] 'DULL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2346/9399] 'DUNK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2347/9399] 'DUO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2348/9399] 'DUOL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DUOL' 데이터 수집 완료.
[2349/9399] 'DUOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DUOT' 데이터 수집 완료.
[2350/9399] 'DUSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2351/9399] 'DUSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2352/9399] 'DUST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2353/9399] 'DV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DV' 데이터 수집 완료.
[2354/9399] 'DVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DVA' 데이터 수집 완료.
[2355/9399] 'DVAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2356/9399] 'DVAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DVAX' 데이터 수집 완료.
[2357/9399] 'DVDN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2358/9399] 'DVIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2359/9399] 'DVLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DVLT' 데이터 수집 완료.
[2360/9399] 'DVLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2361/9399] 'DVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DVN' 데이터 수집 완료.
[2362/9399] 'DVND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2363/9399] 'DVOL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2364/9399] 'DVQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2365/9399] 'DVRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2366/9399] 'DVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DVS' 데이터 수집 완료.
[2367/9399] 'DVSP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2368/9399] 'DVUT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2369/9399] 'DVXC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2370/9399] 'DVXE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2371/9399] 'DVXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2372/9399] 'DVXK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2373/9399] 'DVXP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2374/9399] 'DVXV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2375/9399] 'DVY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2376/9399] 'DVYA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2377/9399] 'DVYE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2378/9399] 'DWAS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2379/9399] 'DWAW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2380/9399] 'DWM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2381/9399] 'DWMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2382/9399] 'DWSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2383/9399] 'DWSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DWSN' 데이터 수집 완료.
[2384/9399] 'DWTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DWTX' 데이터 수집 완료.
[2385/9399] 'DWUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2386/9399] 'DWX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2387/9399] 'DX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DX' 데이터 수집 완료.
[2388/9399] 'DXC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DXC' 데이터 수집 완료.
[2389/9399] 'DXCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DXCM' 데이터 수집 완료.
[2390/9399] 'DXD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2391/9399] 'DXF' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2392/9399] 'DXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2393/9399] 'DXIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2394/9399] 'DXJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2395/9399] 'DXLG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DXLG' 데이터 수집 완료.
[2396/9399] 'DXPE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DXPE' 데이터 수집 완료.
[2397/9399] 'DXR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DXR' 데이터 수집 완료.
[2398/9399] 'DXST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2399/9399] 'DXUV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2400/9399] 'DXYZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2401/9399] 'DY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DY' 데이터 수집 완료.
[2402/9399] 'DYAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DYAI' 데이터 수집 완료.
[2403/9399] 'DYCQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2404/9399] 'DYFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2405/9399] 'DYLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2406/9399] 'DYLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2407/9399] 'DYN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'DYN' 데이터 수집 완료.
[2408/9399] 'DYNB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2409/9399] 'DYNF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2410/9399] 'DYTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2411/9399] 'DZZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2412/9399] 'E' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'E' 데이터 수집 완료.
[2413/9399] 'EA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EA' 데이터 수집 완료.
[2414/9399] 'EAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EAD' 데이터 수집 완료.
[2415/9399] 'EAF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2416/9399] 'EAFG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2417/9399] 'EAGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2418/9399] 'EAGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2419/9399] 'EAPR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2420/9399] 'EARN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EARN' 데이터 수집 완료.
[2421/9399] 'EASG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2422/9399] 'EAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EAT' 데이터 수집 완료.
[2423/9399] 'EATZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2424/9399] 'EB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EB' 데이터 수집 완료.
[2425/9399] 'EBAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EBAY' 데이터 수집 완료.
[2426/9399] 'EBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EBC' 데이터 수집 완료.
[2427/9399] 'EBF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EBF' 데이터 수집 완료.
[2428/9399] 'EBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2429/9399] 'EBIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2430/9399] 'EBIZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2431/9399] 'EBMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EBMT' 데이터 수집 완료.
[2432/9399] 'EBND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2433/9399] 'EBON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EBON' 데이터 수집 완료.
[2434/9399] 'EBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EBR' 데이터 수집 완료.
[2435/9399] 'EBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EBS' 데이터 수집 완료.
[2436/9399] 'EBUF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2437/9399] 'EC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EC' 데이터 수집 완료.
[2438/9399] 'ECAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2439/9399] 'ECBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ECBK' 데이터 수집 완료.
[2440/9399] 'ECC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ECC' 데이터 수집 완료.
[2441/9399] 'ECDA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2442/9399] 'ECF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ECF' 데이터 수집 완료.
[2443/9399] 'ECG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2444/9399] 'ECL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ECL' 데이터 수집 완료.
[2445/9399] 'ECML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2446/9399] 'ECNS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2447/9399] 'ECO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2448/9399] 'ECON' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2449/9399] 'ECOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ECOR' 데이터 수집 완료.
[2450/9399] 'ECOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2451/9399] 'ECPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ECPG' 데이터 수집 완료.
[2452/9399] 'ECVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ECVT' 데이터 수집 완료.
[2453/9399] 'ECX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2454/9399] 'ED' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ED' 데이터 수집 완료.
[2455/9399] 'EDAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EDAP' 데이터 수집 완료.
[2456/9399] 'EDBL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EDBL' 데이터 수집 완료.
[2457/9399] 'EDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2458/9399] 'EDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2459/9399] 'EDF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2460/9399] 'EDGF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2461/9399] 'EDGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2462/9399] 'EDGI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2463/9399] 'EDGU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2464/9399] 'EDHL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2465/9399] 'EDIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EDIT' 데이터 수집 완료.
[2466/9399] 'EDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2467/9399] 'EDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EDN' 데이터 수집 완료.
[2468/9399] 'EDOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2469/9399] 'EDOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2470/9399] 'EDRY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EDRY' 데이터 수집 완료.
[2471/9399] 'EDSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EDSA' 데이터 수집 완료.
[2472/9399] 'EDTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EDTK' 데이터 수집 완료.
[2473/9399] 'EDU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EDU' 데이터 수집 완료.
[2474/9399] 'EDUC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EDUC' 데이터 수집 완료.
[2475/9399] 'EDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2476/9399] 'EDZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2477/9399] 'EE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EE' 데이터 수집 완료.
[2478/9399] 'EEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EEA' 데이터 수집 완료.
[2479/9399] 'EEFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EEFT' 데이터 수집 완료.
[2480/9399] 'EEIQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EEIQ' 데이터 수집 완료.
[2481/9399] 'EELV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2482/9399] 'EEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2483/9399] 'EEMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2484/9399] 'EEMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2485/9399] 'EEMS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2486/9399] 'EEMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2487/9399] 'EES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2488/9399] 'EET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2489/9399] 'EETH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2490/9399] 'EEV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2491/9399] 'EEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EEX' 데이터 수집 완료.
[2492/9399] 'EFA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2493/9399] 'EFAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2494/9399] 'EFAS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2495/9399] 'EFAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2496/9399] 'EFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EFC' 데이터 수집 완료.
[2497/9399] 'EFFE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2498/9399] 'EFFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2499/9399] 'EFIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2500/9399] 'EFO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2501/9399] 'EFOI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EFOI' 데이터 수집 완료.
[2502/9399] 'EFR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2503/9399] 'EFRA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2504/9399] 'EFSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EFSC' 데이터 수집 완료.
[2505/9399] 'EFSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EFSI' 데이터 수집 완료.
[2506/9399] 'EFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EFT' 데이터 수집 완료.
[2507/9399] 'EFTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2508/9399] 'EFU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2509/9399] 'EFX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EFX' 데이터 수집 완료.
[2510/9399] 'EFXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EFXT' 데이터 수집 완료.
[2511/9399] 'EFZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2512/9399] 'EG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EG' 데이터 수집 완료.
[2513/9399] 'EGAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EGAN' 데이터 수집 완료.
[2514/9399] 'EGBN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EGBN' 데이터 수집 완료.
[2515/9399] 'EGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2516/9399] 'EGGQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2517/9399] 'EGGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2518/9399] 'EGGY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2519/9399] 'EGHA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2520/9399] 'EGHT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EGHT' 데이터 수집 완료.
[2521/9399] 'EGLE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2522/9399] 'EGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EGO' 데이터 수집 완료.
[2523/9399] 'EGP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EGP' 데이터 수집 완료.
[2524/9399] 'EGY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EGY' 데이터 수집 완료.
[2525/9399] 'EH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EH' 데이터 수집 완료.
[2526/9399] 'EHAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EHAB' 데이터 수집 완료.
[2527/9399] 'EHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EHC' 데이터 수집 완료.
[2528/9399] 'EHGO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2529/9399] 'EHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EHI' 데이터 수집 완료.
[2530/9399] 'EHLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2531/9399] 'EHLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2532/9399] 'EHTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EHTH' 데이터 수집 완료.
[2533/9399] 'EIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EIC' 데이터 수집 완료.
[2534/9399] 'EIDO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2535/9399] 'EIG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EIG' 데이터 수집 완료.
[2536/9399] 'EIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EIM' 데이터 수집 완료.
[2537/9399] 'EINC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2538/9399] 'EIPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2539/9399] 'EIPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2540/9399] 'EIRL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2541/9399] 'EIS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2542/9399] 'EIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EIX' 데이터 수집 완료.
[2543/9399] 'EJAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2544/9399] 'EJH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EJH' 데이터 수집 완료.
[2545/9399] 'EJUL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2546/9399] 'EKG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2547/9399] 'EKSO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EKSO' 데이터 수집 완료.
[2548/9399] 'EL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EL' 데이터 수집 완료.
[2549/9399] 'ELA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELA' 데이터 수집 완료.
[2550/9399] 'ELAB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2551/9399] 'ELAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELAN' 데이터 수집 완료.
[2552/9399] 'ELBM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELBM' 데이터 수집 완료.
[2553/9399] 'ELCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2554/9399] 'ELD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2555/9399] 'ELDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELDN' 데이터 수집 완료.
[2556/9399] 'ELF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELF' 데이터 수집 완료.
[2557/9399] 'ELFY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2558/9399] 'ELIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2559/9399] 'ELIS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2560/9399] 'ELLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELLO' 데이터 수집 완료.
[2561/9399] 'ELM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2562/9399] 'ELMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELMD' 데이터 수집 완료.
[2563/9399] 'ELME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELME' 데이터 수집 완료.
[2564/9399] 'ELOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2565/9399] 'ELON' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2566/9399] 'ELP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELP' 데이터 수집 완료.
[2567/9399] 'ELPW' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2568/9399] 'ELS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELS' 데이터 수집 완료.
[2569/9399] 'ELSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELSE' 데이터 수집 완료.
[2570/9399] 'ELTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELTK' 데이터 수집 완료.
[2571/9399] 'ELTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELTX' 데이터 수집 완료.
[2572/9399] 'ELUT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2573/9399] 'ELV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELV' 데이터 수집 완료.
[2574/9399] 'ELVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELVA' 데이터 수집 완료.
[2575/9399] 'ELVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ELVN' 데이터 수집 완료.
[2576/9399] 'ELVR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2577/9399] 'ELWS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2578/9399] 'EM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EM' 데이터 수집 완료.
[2579/9399] 'EMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EMA' 데이터 수집 완료.
[2580/9399] 'EMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2581/9399] 'EMBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2582/9399] 'EMBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2583/9399] 'EMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2584/9399] 'EMCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2585/9399] 'EMCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2586/9399] 'EMCS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2587/9399] 'EMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EMD' 데이터 수집 완료.
[2588/9399] 'EMDM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2589/9399] 'EME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EME' 데이터 수집 완료.
[2590/9399] 'EMEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2591/9399] 'EMES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2592/9399] 'EMF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2593/9399] 'EMHC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2594/9399] 'EMIF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2595/9399] 'EMISU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2596/9399] 'EML' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EML' 데이터 수집 완료.
[2597/9399] 'EMLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2598/9399] 'EMLP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2599/9399] 'EMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2600/9399] 'EMMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2601/9399] 'EMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EMN' 데이터 수집 완료.
[2602/9399] 'EMNT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2603/9399] 'EMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2604/9399] 'EMOP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2605/9399] 'EMOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2606/9399] 'EMPB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2607/9399] 'EMPD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EMPD' 데이터 수집 완료.
[2608/9399] 'EMPG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2609/9399] 'EMQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2610/9399] 'EMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EMR' 데이터 수집 완료.
[2611/9399] 'EMSF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2612/9399] 'EMTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2613/9399] 'EMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EMX' 데이터 수집 완료.
[2614/9399] 'EMXC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2615/9399] 'EMXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2616/9399] 'ENB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENB' 데이터 수집 완료.
[2617/9399] 'ENDW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2618/9399] 'ENFR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2619/9399] 'ENFY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENFY' 데이터 수집 완료.
[2620/9399] 'ENGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENGN' 데이터 수집 완료.
[2621/9399] 'ENGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2622/9399] 'ENIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENIC' 데이터 수집 완료.
[2623/9399] 'ENLT' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2624/9399] 'ENLV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENLV' 데이터 수집 완료.
[2625/9399] 'ENOV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENOV' 데이터 수집 완료.
[2626/9399] 'ENPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENPH' 데이터 수집 완료.
[2627/9399] 'ENR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENR' 데이터 수집 완료.
[2628/9399] 'ENS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENS' 데이터 수집 완료.
[2629/9399] 'ENSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENSC' 데이터 수집 완료.
[2630/9399] 'ENSG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENSG' 데이터 수집 완료.
[2631/9399] 'ENTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENTA' 데이터 수집 완료.
[2632/9399] 'ENTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENTG' 데이터 수집 완료.
[2633/9399] 'ENTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENTO' 데이터 수집 완료.
[2634/9399] 'ENTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENTX' 데이터 수집 완료.
[2635/9399] 'ENVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENVA' 데이터 수집 완료.
[2636/9399] 'ENVB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENVB' 데이터 수집 완료.
[2637/9399] 'ENVX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENVX' 데이터 수집 완료.
[2638/9399] 'ENX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ENX' 데이터 수집 완료.
[2639/9399] 'ENZL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2640/9399] 'EOCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2641/9399] 'EOD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2642/9399] 'EOG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EOG' 데이터 수집 완료.
[2643/9399] 'EOI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EOI' 데이터 수집 완료.
[2644/9399] 'EOLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EOLS' 데이터 수집 완료.
[2645/9399] 'EONR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EONR' 데이터 수집 완료.
[2646/9399] 'EOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EOS' 데이터 수집 완료.
[2647/9399] 'EOSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2648/9399] 'EOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2649/9399] 'EP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EP' 데이터 수집 완료.
[2650/9399] 'EPAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPAC' 데이터 수집 완료.
[2651/9399] 'EPAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPAM' 데이터 수집 완료.
[2652/9399] 'EPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPC' 데이터 수집 완료.
[2653/9399] 'EPD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPD' 데이터 수집 완료.
[2654/9399] 'EPEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2655/9399] 'EPHE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2656/9399] 'EPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2657/9399] 'EPIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2658/9399] 'EPIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPIX' 데이터 수집 완료.
[2659/9399] 'EPM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPM' 데이터 수집 완료.
[2660/9399] 'EPMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2661/9399] 'EPMV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2662/9399] 'EPOL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2663/9399] 'EPOW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPOW' 데이터 수집 완료.
[2664/9399] 'EPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2665/9399] 'EPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPR' 데이터 수집 완료.
[2666/9399] 'EPRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPRT' 데이터 수집 완료.
[2667/9399] 'EPRX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2668/9399] 'EPS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2669/9399] 'EPSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2670/9399] 'EPSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2671/9399] 'EPSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EPSN' 데이터 수집 완료.
[2672/9399] 'EPSV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2673/9399] 'EPU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2674/9399] 'EPV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2675/9399] 'EPWK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2676/9399] 'EQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EQ' 데이터 수집 완료.
[2677/9399] 'EQAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2678/9399] 'EQBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EQBK' 데이터 수집 완료.
[2679/9399] 'EQH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EQH' 데이터 수집 완료.
[2680/9399] 'EQIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2681/9399] 'EQIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EQIX' 데이터 수집 완료.
[2682/9399] 'EQL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2683/9399] 'EQNR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EQNR' 데이터 수집 완료.
[2684/9399] 'EQR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EQR' 데이터 수집 완료.
[2685/9399] 'EQRR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2686/9399] 'EQS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EQS' 데이터 수집 완료.
[2687/9399] 'EQT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EQT' 데이터 수집 완료.
[2688/9399] 'EQTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2689/9399] 'EQV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2690/9399] 'EQWL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2691/9399] 'EQX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EQX' 데이터 수집 완료.
[2692/9399] 'ERAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ERAS' 데이터 수집 완료.
[2693/9399] 'ERC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ERC' 데이터 수집 완료.
[2694/9399] 'ERET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2695/9399] 'ERH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2696/9399] 'ERIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ERIC' 데이터 수집 완료.
[2697/9399] 'ERIE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ERIE' 데이터 수집 완료.
[2698/9399] 'ERII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ERII' 데이터 수집 완료.
[2699/9399] 'ERJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ERJ' 데이터 수집 완료.
[2700/9399] 'ERNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2701/9399] 'ERNZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2702/9399] 'ERO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ERO' 데이터 수집 완료.
[2703/9399] 'ERTH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2704/9399] 'ERX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2705/9399] 'ERY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2706/9399] 'ES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ES' 데이터 수집 완료.
[2707/9399] 'ESAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESAB' 데이터 수집 완료.
[2708/9399] 'ESBA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESBA' 데이터 수집 완료.
[2709/9399] 'ESCA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESCA' 데이터 수집 완료.
[2710/9399] 'ESE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESE' 데이터 수집 완료.
[2711/9399] 'ESEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESEA' 데이터 수집 완료.
[2712/9399] 'ESGD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2713/9399] 'ESGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2714/9399] 'ESGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESGL' 데이터 수집 완료.
[2715/9399] 'ESGU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2716/9399] 'ESHA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2717/9399] 'ESI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESI' 데이터 수집 완료.
[2718/9399] 'ESIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2719/9399] 'ESLA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2720/9399] 'ESLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESLT' 데이터 수집 완료.
[2721/9399] 'ESMV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2722/9399] 'ESN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2723/9399] 'ESNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESNT' 데이터 수집 완료.
[2724/9399] 'ESOA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESOA' 데이터 수집 완료.
[2725/9399] 'ESP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESP' 데이터 수집 완료.
[2726/9399] 'ESPO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2727/9399] 'ESPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2728/9399] 'ESQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESQ' 데이터 수집 완료.
[2729/9399] 'ESRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESRT' 데이터 수집 완료.
[2730/9399] 'ESS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESS' 데이터 수집 완료.
[2731/9399] 'ESTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESTA' 데이터 수집 완료.
[2732/9399] 'ESTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ESTC' 데이터 수집 완료.
[2733/9399] 'ESUM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2734/9399] 'ET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ET' 데이터 수집 완료.
[2735/9399] 'ETB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETB' 데이터 수집 완료.
[2736/9399] 'ETCO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2737/9399] 'ETD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETD' 데이터 수집 완료.
[2738/9399] 'ETEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2739/9399] 'ETG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETG' 데이터 수집 완료.
[2740/9399] 'ETH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2741/9399] 'ETHA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2742/9399] 'ETHD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2743/9399] 'ETHE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2744/9399] 'ETHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2745/9399] 'ETHM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2746/9399] 'ETHO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2747/9399] 'ETHT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2748/9399] 'ETHW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2749/9399] 'ETHZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETHZ' 데이터 수집 완료.
[2750/9399] 'ETJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2751/9399] 'ETN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETN' 데이터 수집 완료.
[2752/9399] 'ETNB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETNB' 데이터 수집 완료.
[2753/9399] 'ETO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETO' 데이터 수집 완료.
[2754/9399] 'ETON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETON' 데이터 수집 완료.
[2755/9399] 'ETOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2756/9399] 'ETR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETR' 데이터 수집 완료.
[2757/9399] 'ETRL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2758/9399] 'ETS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2759/9399] 'ETSY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2760/9399] 'ETV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETV' 데이터 수집 완료.
[2761/9399] 'ETW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETW' 데이터 수집 완료.
[2762/9399] 'ETX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2763/9399] 'ETY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ETY' 데이터 수집 완료.
[2764/9399] 'EU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EU' 데이터 수집 완료.
[2765/9399] 'EUDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2766/9399] 'EUDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2767/9399] 'EUFN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2768/9399] 'EUM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2769/9399] 'EUO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2770/9399] 'EURK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2771/9399] 'EURL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2772/9399] 'EUSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2773/9399] 'EUSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2774/9399] 'EVAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2775/9399] 'EVAV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2776/9399] 'EVAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVAX' 데이터 수집 완료.
[2777/9399] 'EVC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVC' 데이터 수집 완료.
[2778/9399] 'EVCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVCM' 데이터 수집 완료.
[2779/9399] 'EVER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVER' 데이터 수집 완료.
[2780/9399] 'EVEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVEX' 데이터 수집 완료.
[2781/9399] 'EVF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVF' 데이터 수집 완료.
[2782/9399] 'EVG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVG' 데이터 수집 완료.
[2783/9399] 'EVGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVGN' 데이터 수집 완료.
[2784/9399] 'EVGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVGO' 데이터 수집 완료.
[2785/9399] 'EVH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVH' 데이터 수집 완료.
[2786/9399] 'EVHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2787/9399] 'EVI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVI' 데이터 수집 완료.
[2788/9399] 'EVIM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2789/9399] 'EVLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2790/9399] 'EVLV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVLV' 데이터 수집 완료.
[2791/9399] 'EVM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVM' 데이터 수집 완료.
[2792/9399] 'EVMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2793/9399] 'EVMT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2794/9399] 'EVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVN' 데이터 수집 완료.
[2795/9399] 'EVNT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2796/9399] 'EVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVO' 데이터 수집 완료.
[2797/9399] 'EVOK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVOK' 데이터 수집 완료.
[2798/9399] 'EVR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVR' 데이터 수집 완료.
[2799/9399] 'EVRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVRG' 데이터 수집 완료.
[2800/9399] 'EVSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2801/9399] 'EVSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2802/9399] 'EVSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2803/9399] 'EVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVT' 데이터 수집 완료.
[2804/9399] 'EVTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVTC' 데이터 수집 완료.
[2805/9399] 'EVTL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2806/9399] 'EVTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2807/9399] 'EVTV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVTV' 데이터 수집 완료.
[2808/9399] 'EVV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EVV' 데이터 수집 완료.
[2809/9399] 'EVX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2810/9399] 'EVYM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2811/9399] 'EW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EW' 데이터 수집 완료.
[2812/9399] 'EWA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2813/9399] 'EWBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EWBC' 데이터 수집 완료.
[2814/9399] 'EWC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2815/9399] 'EWCZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EWCZ' 데이터 수집 완료.
[2816/9399] 'EWD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2817/9399] 'EWG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2818/9399] 'EWH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2819/9399] 'EWI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2820/9399] 'EWJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2821/9399] 'EWJV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2822/9399] 'EWK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2823/9399] 'EWL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2824/9399] 'EWM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2825/9399] 'EWN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2826/9399] 'EWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2827/9399] 'EWP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2828/9399] 'EWQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2829/9399] 'EWS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2830/9399] 'EWT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2831/9399] 'EWTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EWTX' 데이터 수집 완료.
[2832/9399] 'EWU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2833/9399] 'EWV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2834/9399] 'EWW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2835/9399] 'EWX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2836/9399] 'EWY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2837/9399] 'EWZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2838/9399] 'EWZS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2839/9399] 'EXAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXAS' 데이터 수집 완료.
[2840/9399] 'EXC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXC' 데이터 수집 완료.
[2841/9399] 'EXE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXE' 데이터 수집 완료.
[2842/9399] 'EXEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXEL' 데이터 수집 완료.
[2843/9399] 'EXFY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXFY' 데이터 수집 완료.
[2844/9399] 'EXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2845/9399] 'EXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2846/9399] 'EXK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXK' 데이터 수집 완료.
[2847/9399] 'EXLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXLS' 데이터 수집 완료.
[2848/9399] 'EXOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXOD' 데이터 수집 완료.
[2849/9399] 'EXOZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2850/9399] 'EXP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXP' 데이터 수집 완료.
[2851/9399] 'EXPD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXPD' 데이터 수집 완료.
[2852/9399] 'EXPE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXPE' 데이터 수집 완료.
[2853/9399] 'EXPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXPI' 데이터 수집 완료.
[2854/9399] 'EXPO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXPO' 데이터 수집 완료.
[2855/9399] 'EXR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXR' 데이터 수집 완료.
[2856/9399] 'EXTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EXTR' 데이터 수집 완료.
[2857/9399] 'EXUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2858/9399] 'EYE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EYE' 데이터 수집 완료.
[2859/9399] 'EYEG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2860/9399] 'EYPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EYPT' 데이터 수집 완료.
[2861/9399] 'EZA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2862/9399] 'EZGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EZGO' 데이터 수집 완료.
[2863/9399] 'EZJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2864/9399] 'EZM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2865/9399] 'EZPW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'EZPW' 데이터 수집 완료.
[2866/9399] 'F' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'F' 데이터 수집 완료.
[2867/9399] 'FA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FA' 데이터 수집 완료.
[2868/9399] 'FAAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2869/9399] 'FAAS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2870/9399] 'FAB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2871/9399] 'FACT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2872/9399] 'FAD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2873/9399] 'FAF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FAF' 데이터 수집 완료.
[2874/9399] 'FAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2875/9399] 'FALN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2876/9399] 'FAMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FAMI' 데이터 수집 완료.
[2877/9399] 'FAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2878/9399] 'FANG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FANG' 데이터 수집 완료.
[2879/9399] 'FARM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FARM' 데이터 수집 완료.
[2880/9399] 'FARX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2881/9399] 'FAS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2882/9399] 'FAST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FAST' 데이터 수집 완료.
[2883/9399] 'FAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2884/9399] 'FATE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FATE' 데이터 수집 완료.
[2885/9399] 'FATN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2886/9399] 'FAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FAX' 데이터 수집 완료.
[2887/9399] 'FAZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2888/9399] 'FBDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2889/9399] 'FBGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2890/9399] 'FBIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FBIN' 데이터 수집 완료.
[2891/9399] 'FBIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FBIO' 데이터 수집 완료.
[2892/9399] 'FBIZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FBIZ' 데이터 수집 완료.
[2893/9399] 'FBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FBK' 데이터 수집 완료.
[2894/9399] 'FBL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2895/9399] 'FBLA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2896/9399] 'FBLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2897/9399] 'FBNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FBNC' 데이터 수집 완료.
[2898/9399] 'FBND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2899/9399] 'FBOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2900/9399] 'FBP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FBP' 데이터 수집 완료.
[2901/9399] 'FBRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FBRT' 데이터 수집 완료.
[2902/9399] 'FBRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FBRX' 데이터 수집 완료.
[2903/9399] 'FBT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2904/9399] 'FBY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2905/9399] 'FBYD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[2906/9399] 'FC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FC' 데이터 수집 완료.
[2907/9399] 'FCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2908/9399] 'FCAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2909/9399] 'FCAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCAP' 데이터 수집 완료.
[2910/9399] 'FCBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCBC' 데이터 수집 완료.
[2911/9399] 'FCBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2912/9399] 'FCCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCCO' 데이터 수집 완료.
[2913/9399] 'FCEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2914/9399] 'FCEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCEL' 데이터 수집 완료.
[2915/9399] 'FCF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCF' 데이터 수집 완료.
[2916/9399] 'FCFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCFS' 데이터 수집 완료.
[2917/9399] 'FCFY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2918/9399] 'FCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2919/9399] 'FCHL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2920/9399] 'FCN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCN' 데이터 수집 완료.
[2921/9399] 'FCNCA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCNCA' 데이터 수집 완료.
[2922/9399] 'FCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCO' 데이터 수집 완료.
[2923/9399] 'FCOM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2924/9399] 'FCOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2925/9399] 'FCPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCPT' 데이터 수집 완료.
[2926/9399] 'FCSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2927/9399] 'FCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCT' 데이터 수집 완료.
[2928/9399] 'FCTE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2929/9399] 'FCUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2930/9399] 'FCUV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCUV' 데이터 수집 완료.
[2931/9399] 'FCVT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2932/9399] 'FCX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FCX' 데이터 수집 완료.
[2933/9399] 'FDAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2934/9399] 'FDBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FDBC' 데이터 수집 완료.
[2935/9399] 'FDCF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2936/9399] 'FDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2937/9399] 'FDFF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2938/9399] 'FDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2939/9399] 'FDHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2940/9399] 'FDIF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2941/9399] 'FDIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2942/9399] 'FDIS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2943/9399] 'FDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2944/9399] 'FDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2945/9399] 'FDLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2946/9399] 'FDLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2947/9399] 'FDM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2948/9399] 'FDMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2949/9399] 'FDMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FDMT' 데이터 수집 완료.
[2950/9399] 'FDN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2951/9399] 'FDNI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2952/9399] 'FDP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FDP' 데이터 수집 완료.
[2953/9399] 'FDRR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2954/9399] 'FDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FDS' 데이터 수집 완료.
[2955/9399] 'FDSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2956/9399] 'FDT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2957/9399] 'FDTS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2958/9399] 'FDTX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2959/9399] 'FDUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FDUS' 데이터 수집 완료.
[2960/9399] 'FDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2961/9399] 'FDVV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2962/9399] 'FDWM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2963/9399] 'FDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FDX' 데이터 수집 완료.
[2964/9399] 'FE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FE' 데이터 수집 완료.
[2965/9399] 'FEAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2966/9399] 'FEAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FEAM' 데이터 수집 완료.
[2967/9399] 'FEAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2968/9399] 'FEBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2969/9399] 'FEBT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2970/9399] 'FEBW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2971/9399] 'FEDM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2972/9399] 'FEDU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FEDU' 데이터 수집 완료.
[2973/9399] 'FEGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2974/9399] 'FEIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2975/9399] 'FEIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FEIM' 데이터 수집 완료.
[2976/9399] 'FELC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2977/9399] 'FELE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FELE' 데이터 수집 완료.
[2978/9399] 'FELG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2979/9399] 'FELV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2980/9399] 'FEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2981/9399] 'FEMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2982/9399] 'FEMR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2983/9399] 'FEMS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2984/9399] 'FEMY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FEMY' 데이터 수집 완료.
[2985/9399] 'FENC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[2986/9399] 'FENG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FENG' 데이터 수집 완료.
[2987/9399] 'FENI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2988/9399] 'FENY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2989/9399] 'FEOE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2990/9399] 'FEP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2991/9399] 'FEPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2992/9399] 'FER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FER' 데이터 수집 완료.
[2993/9399] 'FERA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2994/9399] 'FERG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2995/9399] 'FESM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2996/9399] 'FET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FET' 데이터 수집 완료.
[2997/9399] 'FEUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2998/9399] 'FEUZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[2999/9399] 'FEX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3000/9399] 'FEZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3001/9399] 'FF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FF' 데이터 수집 완료.
[3002/9399] 'FFA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FFA' 데이터 수집 완료.
[3003/9399] 'FFAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FFAI' 데이터 수집 완료.
[3004/9399] 'FFBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FFBC' 데이터 수집 완료.
[3005/9399] 'FFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FFC' 데이터 수집 완료.
[3006/9399] 'FFFZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3007/9399] 'FFIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FFIC' 데이터 수집 완료.
[3008/9399] 'FFIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FFIN' 데이터 수집 완료.
[3009/9399] 'FFIU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3010/9399] 'FFIV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FFIV' 데이터 수집 완료.
[3011/9399] 'FFLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3012/9399] 'FFND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3013/9399] 'FFOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3014/9399] 'FFTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3015/9399] 'FFUT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3016/9399] 'FFWM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FFWM' 데이터 수집 완료.
[3017/9399] 'FG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3018/9399] 'FGBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FGBI' 데이터 수집 완료.
[3019/9399] 'FGD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3020/9399] 'FGDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3021/9399] 'FGEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3022/9399] 'FGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FGI' 데이터 수집 완료.
[3023/9399] 'FGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3024/9399] 'FGM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3025/9399] 'FGMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3026/9399] 'FGNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FGNX' 데이터 수집 완료.
[3027/9399] 'FGO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3028/9399] 'FGSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3029/9399] 'FGSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3030/9399] 'FGXCU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3031/9399] 'FHB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FHB' 데이터 수집 완료.
[3032/9399] 'FHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FHI' 데이터 수집 완료.
[3033/9399] 'FHLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3034/9399] 'FHN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FHN' 데이터 수집 완료.
[3035/9399] 'FHTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3036/9399] 'FHYS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3037/9399] 'FI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FI' 데이터 수집 완료.
[3038/9399] 'FIAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3039/9399] 'FIAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3040/9399] 'FIBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FIBK' 데이터 수집 완료.
[3041/9399] 'FICO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3042/9399] 'FICS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3043/9399] 'FID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3044/9399] 'FIDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3045/9399] 'FIDU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3046/9399] 'FIEE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FIEE' 데이터 수집 완료.
[3047/9399] 'FIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3048/9399] 'FIGB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3049/9399] 'FIGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3050/9399] 'FIGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FIGS' 데이터 수집 완료.
[3051/9399] 'FIGX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3052/9399] 'FIHL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3053/9399] 'FIIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3054/9399] 'FILL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3055/9399] 'FINE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3056/9399] 'FINS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FINS' 데이터 수집 완료.
[3057/9399] 'FINT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3058/9399] 'FINV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FINV' 데이터 수집 완료.
[3059/9399] 'FINW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FINW' 데이터 수집 완료.
[3060/9399] 'FINX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3061/9399] 'FIP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FIP' 데이터 수집 완료.
[3062/9399] 'FIRI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3063/9399] 'FIRS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3064/9399] 'FIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FIS' 데이터 수집 완료.
[3065/9399] 'FISI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FISI' 데이터 수집 완료.
[3066/9399] 'FISR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3067/9399] 'FITB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FITB' 데이터 수집 완료.
[3068/9399] 'FITE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3069/9399] 'FIVA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3070/9399] 'FIVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FIVE' 데이터 수집 완료.
[3071/9399] 'FIVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FIVN' 데이터 수집 완료.
[3072/9399] 'FIVY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3073/9399] 'FIW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3074/9399] 'FIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FIX' 데이터 수집 완료.
[3075/9399] 'FIXD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3076/9399] 'FIXP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3077/9399] 'FIXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3078/9399] 'FIZZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FIZZ' 데이터 수집 완료.
[3079/9399] 'FJP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3080/9399] 'FKU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3081/9399] 'FKWL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FKWL' 데이터 수집 완료.
[3082/9399] 'FLAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3083/9399] 'FLAO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3084/9399] 'FLAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3085/9399] 'FLAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3086/9399] 'FLBR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3087/9399] 'FLC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLC' 데이터 수집 완료.
[3088/9399] 'FLCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3089/9399] 'FLCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3090/9399] 'FLCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3091/9399] 'FLCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3092/9399] 'FLCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3093/9399] 'FLCH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3094/9399] 'FLCO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3095/9399] 'FLCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3096/9399] 'FLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLD' 데이터 수집 완료.
[3097/9399] 'FLDB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3098/9399] 'FLEE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3099/9399] 'FLEU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3100/9399] 'FLEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLEX' 데이터 수집 완료.
[3101/9399] 'FLG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLG' 데이터 수집 완료.
[3102/9399] 'FLGB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3103/9399] 'FLGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLGC' 데이터 수집 완료.
[3104/9399] 'FLGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3105/9399] 'FLGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLGT' 데이터 수집 완료.
[3106/9399] 'FLGV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3107/9399] 'FLIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3108/9399] 'FLJH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3109/9399] 'FLJJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3110/9399] 'FLJP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3111/9399] 'FLKR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3112/9399] 'FLL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLL' 데이터 수집 완료.
[3113/9399] 'FLLA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3114/9399] 'FLMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3115/9399] 'FLMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3116/9399] 'FLMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3117/9399] 'FLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3118/9399] 'FLNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLNC' 데이터 수집 완료.
[3119/9399] 'FLNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLNG' 데이터 수집 완료.
[3120/9399] 'FLNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLNT' 데이터 수집 완료.
[3121/9399] 'FLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLO' 데이터 수집 완료.
[3122/9399] 'FLOC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3123/9399] 'FLOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3124/9399] 'FLR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLR' 데이터 수집 완료.
[3125/9399] 'FLRG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3126/9399] 'FLRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3127/9399] 'FLRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3128/9399] 'FLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLS' 데이터 수집 완료.
[3129/9399] 'FLSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3130/9399] 'FLSP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3131/9399] 'FLSW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3132/9399] 'FLTB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3133/9399] 'FLTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3134/9399] 'FLTW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3135/9399] 'FLUD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3136/9399] 'FLUT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLUT' 데이터 수집 완료.
[3137/9399] 'FLUX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3138/9399] 'FLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3139/9399] 'FLWS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLWS' 데이터 수집 완료.
[3140/9399] 'FLX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3141/9399] 'FLXR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3142/9399] 'FLXS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLXS' 데이터 수집 완료.
[3143/9399] 'FLY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3144/9399] 'FLYD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3145/9399] 'FLYE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3146/9399] 'FLYU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3147/9399] 'FLYW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FLYW' 데이터 수집 완료.
[3148/9399] 'FLYX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3149/9399] 'FMAO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FMAO' 데이터 수집 완료.
[3150/9399] 'FMAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3151/9399] 'FMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3152/9399] 'FMBH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FMBH' 데이터 수집 완료.
[3153/9399] 'FMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FMC' 데이터 수집 완료.
[3154/9399] 'FMCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3155/9399] 'FMCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3156/9399] 'FMDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3157/9399] 'FMED' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3158/9399] 'FMET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3159/9399] 'FMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3160/9399] 'FMFC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3161/9399] 'FMHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3162/9399] 'FMKT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3163/9399] 'FMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FMN' 데이터 수집 완료.
[3164/9399] 'FMNB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FMNB' 데이터 수집 완료.
[3165/9399] 'FMNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3166/9399] 'FMQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3167/9399] 'FMS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FMS' 데이터 수집 완료.
[3168/9399] 'FMST' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3169/9399] 'FMTM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3170/9399] 'FMUB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3171/9399] 'FMUN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3172/9399] 'FMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FMX' 데이터 수집 완료.
[3173/9399] 'FMY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FMY' 데이터 수집 완료.
[3174/9399] 'FN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FN' 데이터 수집 완료.
[3175/9399] 'FNB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FNB' 데이터 수집 완료.
[3176/9399] 'FNCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3177/9399] 'FND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FND' 데이터 수집 완료.
[3178/9399] 'FNDA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3179/9399] 'FNDB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3180/9399] 'FNDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3181/9399] 'FNDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3182/9399] 'FNDF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3183/9399] 'FNDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3184/9399] 'FNF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FNF' 데이터 수집 완료.
[3185/9399] 'FNGD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3186/9399] 'FNGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3187/9399] 'FNGO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3188/9399] 'FNGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FNGR' 데이터 수집 완료.
[3189/9399] 'FNGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3190/9399] 'FNGU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3191/9399] 'FNK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3192/9399] 'FNKO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FNKO' 데이터 수집 완료.
[3193/9399] 'FNLC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FNLC' 데이터 수집 완료.
[3194/9399] 'FNV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FNV' 데이터 수집 완료.
[3195/9399] 'FNWB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FNWB' 데이터 수집 완료.
[3196/9399] 'FNWD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FNWD' 데이터 수집 완료.
[3197/9399] 'FNX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3198/9399] 'FNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3199/9399] 'FOA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FOA' 데이터 수집 완료.
[3200/9399] 'FOF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3201/9399] 'FOFO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3202/9399] 'FOLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FOLD' 데이터 수집 완료.
[3203/9399] 'FONR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FONR' 데이터 수집 완료.
[3204/9399] 'FOPC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3205/9399] 'FOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FOR' 데이터 수집 완료.
[3206/9399] 'FORA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FORA' 데이터 수집 완료.
[3207/9399] 'FORD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FORD' 데이터 수집 완료.
[3208/9399] 'FORH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3209/9399] 'FORL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3210/9399] 'FORM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FORM' 데이터 수집 완료.
[3211/9399] 'FORR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FORR' 데이터 수집 완료.
[3212/9399] 'FORTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FORTY' 데이터 수집 완료.
[3213/9399] 'FOSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FOSL' 데이터 수집 완료.
[3214/9399] 'FOUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FOUR' 데이터 수집 완료.
[3215/9399] 'FOX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FOX' 데이터 수집 완료.
[3216/9399] 'FOXA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FOXA' 데이터 수집 완료.
[3217/9399] 'FOXF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FOXF' 데이터 수집 완료.
[3218/9399] 'FOXX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3219/9399] 'FOXY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3220/9399] 'FPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3221/9399] 'FPAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FPAY' 데이터 수집 완료.
[3222/9399] 'FPE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3223/9399] 'FPEI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3224/9399] 'FPF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3225/9399] 'FPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FPH' 데이터 수집 완료.
[3226/9399] 'FPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FPI' 데이터 수집 완료.
[3227/9399] 'FPWR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3228/9399] 'FPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3229/9399] 'FPXE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3230/9399] 'FPXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3231/9399] 'FQAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3232/9399] 'FR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FR' 데이터 수집 완료.
[3233/9399] 'FRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRA' 데이터 수집 완료.
[3234/9399] 'FRAF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRAF' 데이터 수집 완료.
[3235/9399] 'FRBA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRBA' 데이터 수집 완료.
[3236/9399] 'FRD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRD' 데이터 수집 완료.
[3237/9399] 'FRDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3238/9399] 'FRDU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3239/9399] 'FREL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3240/9399] 'FRGE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRGE' 데이터 수집 완료.
[3241/9399] 'FRGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRGT' 데이터 수집 완료.
[3242/9399] 'FRHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRHC' 데이터 수집 완료.
[3243/9399] 'FRI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3244/9399] 'FRIZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3245/9399] 'FRME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRME' 데이터 수집 완료.
[3246/9399] 'FRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRO' 데이터 수집 완료.
[3247/9399] 'FROG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FROG' 데이터 수집 완료.
[3248/9399] 'FRPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRPH' 데이터 수집 완료.
[3249/9399] 'FRPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRPT' 데이터 수집 완료.
[3250/9399] 'FRSH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRSH' 데이터 수집 완료.
[3251/9399] 'FRST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRST' 데이터 수집 완료.
[3252/9399] 'FRSX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRSX' 데이터 수집 완료.
[3253/9399] 'FRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FRT' 데이터 수집 완료.
[3254/9399] 'FRTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3255/9399] 'FSBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSBC' 데이터 수집 완료.
[3256/9399] 'FSBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3257/9399] 'FSBW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSBW' 데이터 수집 완료.
[3258/9399] 'FSCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3259/9399] 'FSCO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3260/9399] 'FSCS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3261/9399] 'FSEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSEA' 데이터 수집 완료.
[3262/9399] 'FSEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3263/9399] 'FSFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSFG' 데이터 수집 완료.
[3264/9399] 'FSGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3265/9399] 'FSHP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3266/9399] 'FSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSI' 데이터 수집 완료.
[3267/9399] 'FSIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3268/9399] 'FSK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSK' 데이터 수집 완료.
[3269/9399] 'FSLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3270/9399] 'FSLR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSLR' 데이터 수집 완료.
[3271/9399] 'FSLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSLY' 데이터 수집 완료.
[3272/9399] 'FSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSM' 데이터 수집 완료.
[3273/9399] 'FSMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3274/9399] 'FSMD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3275/9399] 'FSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSP' 데이터 수집 완료.
[3276/9399] 'FSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSS' 데이터 수집 완료.
[3277/9399] 'FSST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3278/9399] 'FSTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3279/9399] 'FSTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSTR' 데이터 수집 완료.
[3280/9399] 'FSUN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSUN' 데이터 수집 완료.
[3281/9399] 'FSV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FSV' 데이터 수집 완료.
[3282/9399] 'FSYD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3283/9399] 'FSZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3284/9399] 'FT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FT' 데이터 수집 완료.
[3285/9399] 'FTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3286/9399] 'FTAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3287/9399] 'FTAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTAI' 데이터 수집 완료.
[3288/9399] 'FTBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3289/9399] 'FTBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3290/9399] 'FTC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3291/9399] 'FTCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3292/9399] 'FTCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3293/9399] 'FTCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTCI' 데이터 수집 완료.
[3294/9399] 'FTCS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3295/9399] 'FTDR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTDR' 데이터 수집 완료.
[3296/9399] 'FTDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3297/9399] 'FTEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3298/9399] 'FTEK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTEK' 데이터 수집 완료.
[3299/9399] 'FTEL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3300/9399] 'FTF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTF' 데이터 수집 완료.
[3301/9399] 'FTFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTFT' 데이터 수집 완료.
[3302/9399] 'FTGC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3303/9399] 'FTGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3304/9399] 'FTHF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3305/9399] 'FTHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3306/9399] 'FTHM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTHM' 데이터 수집 완료.
[3307/9399] 'FTHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3308/9399] 'FTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTI' 데이터 수집 완료.
[3309/9399] 'FTIF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3310/9399] 'FTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTK' 데이터 수집 완료.
[3311/9399] 'FTKI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3312/9399] 'FTLF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTLF' 데이터 수집 완료.
[3313/9399] 'FTLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3314/9399] 'FTNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTNT' 데이터 수집 완료.
[3315/9399] 'FTQI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3316/9399] 'FTRB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3317/9399] 'FTRE' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3318/9399] 'FTRI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3319/9399] 'FTRK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3320/9399] 'FTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTS' 데이터 수집 완료.
[3321/9399] 'FTSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3322/9399] 'FTSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3323/9399] 'FTSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3324/9399] 'FTV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FTV' 데이터 수집 완료.
[3325/9399] 'FTWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3326/9399] 'FTXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3327/9399] 'FTXH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3328/9399] 'FTXL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3329/9399] 'FTXN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3330/9399] 'FTXO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3331/9399] 'FTXR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3332/9399] 'FUBO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FUBO' 데이터 수집 완료.
[3333/9399] 'FUFU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FUFU' 데이터 수집 완료.
[3334/9399] 'FUL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FUL' 데이터 수집 완료.
[3335/9399] 'FULC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FULC' 데이터 수집 완료.
[3336/9399] 'FULT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FULT' 데이터 수집 완료.
[3337/9399] 'FUMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3338/9399] 'FUN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FUN' 데이터 수집 완료.
[3339/9399] 'FUNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FUNC' 데이터 수집 완료.
[3340/9399] 'FUND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FUND' 데이터 수집 완료.
[3341/9399] 'FURY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FURY' 데이터 수집 완료.
[3342/9399] 'FUSB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FUSB' 데이터 수집 완료.
[3343/9399] 'FUSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3344/9399] 'FUTU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FUTU' 데이터 수집 완료.
[3345/9399] 'FUTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3346/9399] 'FV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3347/9399] 'FVAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3348/9399] 'FVC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3349/9399] 'FVCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FVCB' 데이터 수집 완료.
[3350/9399] 'FVD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3351/9399] 'FVN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3352/9399] 'FVR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3353/9399] 'FVRR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FVRR' 데이터 수집 완료.
[3354/9399] 'FWD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3355/9399] 'FWONA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FWONA' 데이터 수집 완료.
[3356/9399] 'FWONK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FWONK' 데이터 수집 완료.
[3357/9399] 'FWRD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FWRD' 데이터 수집 완료.
[3358/9399] 'FWRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FWRG' 데이터 수집 완료.
[3359/9399] 'FXA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3360/9399] 'FXB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3361/9399] 'FXC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3362/9399] 'FXD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3363/9399] 'FXE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3364/9399] 'FXED' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3365/9399] 'FXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3366/9399] 'FXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3367/9399] 'FXH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3368/9399] 'FXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3369/9399] 'FXL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3370/9399] 'FXN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3371/9399] 'FXNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FXNC' 데이터 수집 완료.
[3372/9399] 'FXO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3373/9399] 'FXP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3374/9399] 'FXR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3375/9399] 'FXU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3376/9399] 'FXY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3377/9399] 'FXZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3378/9399] 'FYBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'FYBR' 데이터 수집 완료.
[3379/9399] 'FYC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3380/9399] 'FYT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3381/9399] 'FYX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3382/9399] 'G' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'G' 데이터 수집 완료.
[3383/9399] 'GAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GAB' 데이터 수집 완료.
[3384/9399] 'GABC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GABC' 데이터 수집 완료.
[3385/9399] 'GABF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3386/9399] 'GAEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3387/9399] 'GAIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GAIA' 데이터 수집 완료.
[3388/9399] 'GAIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GAIN' 데이터 수집 완료.
[3389/9399] 'GAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3390/9399] 'GALT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3391/9399] 'GAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GAM' 데이터 수집 완료.
[3392/9399] 'GAMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GAMB' 데이터 수집 완료.
[3393/9399] 'GAME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GAME' 데이터 수집 완료.
[3394/9399] 'GAMR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3395/9399] 'GANX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GANX' 데이터 수집 완료.
[3396/9399] 'GAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GAP' 데이터 수집 완료.
[3397/9399] 'GASS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GASS' 데이터 수집 완료.
[3398/9399] 'GAST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3399/9399] 'GATX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GATX' 데이터 수집 완료.
[3400/9399] 'GAU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GAU' 데이터 수집 완료.
[3401/9399] 'GAUZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3402/9399] 'GBAB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3403/9399] 'GBCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GBCI' 데이터 수집 완료.
[3404/9399] 'GBDC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GBDC' 데이터 수집 완료.
[3405/9399] 'GBF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3406/9399] 'GBFH' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3407/9399] 'GBIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3408/9399] 'GBIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GBIO' 데이터 수집 완료.
[3409/9399] 'GBLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3410/9399] 'GBLI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GBLI' 데이터 수집 완료.
[3411/9399] 'GBND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3412/9399] 'GBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GBR' 데이터 수집 완료.
[3413/9399] 'GBTC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3414/9399] 'GBTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GBTG' 데이터 수집 완료.
[3415/9399] 'GBUG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3416/9399] 'GBX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GBX' 데이터 수집 완료.
[3417/9399] 'GCAD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3418/9399] 'GCAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3419/9399] 'GCBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GCBC' 데이터 수집 완료.
[3420/9399] 'GCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3421/9399] 'GCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GCI' 데이터 수집 완료.
[3422/9399] 'GCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GCL' 데이터 수집 완료.
[3423/9399] 'GCMG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3424/9399] 'GCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GCO' 데이터 수집 완료.
[3425/9399] 'GCOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3426/9399] 'GCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GCT' 데이터 수집 완료.
[3427/9399] 'GCTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GCTK' 데이터 수집 완료.
[3428/9399] 'GCTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3429/9399] 'GCV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3430/9399] 'GD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GD' 데이터 수집 완료.
[3431/9399] 'GDC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GDC' 데이터 수집 완료.
[3432/9399] 'GDDY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GDDY' 데이터 수집 완료.
[3433/9399] 'GDEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GDEN' 데이터 수집 완료.
[3434/9399] 'GDEV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3435/9399] 'GDHG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3436/9399] 'GDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3437/9399] 'GDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3438/9399] 'GDLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3439/9399] 'GDO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3440/9399] 'GDOC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3441/9399] 'GDOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GDOT' 데이터 수집 완료.
[3442/9399] 'GDRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GDRX' 데이터 수집 완료.
[3443/9399] 'GDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GDS' 데이터 수집 완료.
[3444/9399] 'GDTC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3445/9399] 'GDV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GDV' 데이터 수집 완료.
[3446/9399] 'GDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3447/9399] 'GDXD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3448/9399] 'GDXJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3449/9399] 'GDXU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3450/9399] 'GDXY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3451/9399] 'GDYN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GDYN' 데이터 수집 완료.
[3452/9399] 'GE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GE' 데이터 수집 완료.
[3453/9399] 'GECC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GECC' 데이터 수집 완료.
[3454/9399] 'GEF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GEF' 데이터 수집 완료.
[3455/9399] 'GEG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GEG' 데이터 수집 완료.
[3456/9399] 'GEHC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3457/9399] 'GEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GEL' 데이터 수집 완료.
[3458/9399] 'GELS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3459/9399] 'GEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3460/9399] 'GEME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3461/9399] 'GEMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3462/9399] 'GEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GEN' 데이터 수집 완료.
[3463/9399] 'GENC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GENC' 데이터 수집 완료.
[3464/9399] 'GEND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3465/9399] 'GENI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GENI' 데이터 수집 완료.
[3466/9399] 'GENK' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3467/9399] 'GENM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3468/9399] 'GENT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3469/9399] 'GENW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3470/9399] 'GEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GEO' 데이터 수집 완료.
[3471/9399] 'GEOA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3472/9399] 'GEOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GEOS' 데이터 수집 완료.
[3473/9399] 'GERN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GERN' 데이터 수집 완료.
[3474/9399] 'GES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GES' 데이터 수집 완료.
[3475/9399] 'GETY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GETY' 데이터 수집 완료.
[3476/9399] 'GEV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3477/9399] 'GEVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GEVO' 데이터 수집 완료.
[3478/9399] 'GF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GF' 데이터 수집 완료.
[3479/9399] 'GFAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GFAI' 데이터 수집 완료.
[3480/9399] 'GFF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GFF' 데이터 수집 완료.
[3481/9399] 'GFGF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3482/9399] 'GFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GFI' 데이터 수집 완료.
[3483/9399] 'GFL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GFL' 데이터 수집 완료.
[3484/9399] 'GFLW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3485/9399] 'GFR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GFR' 데이터 수집 완료.
[3486/9399] 'GFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GFS' 데이터 수집 완료.
[3487/9399] 'GGAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GGAL' 데이터 수집 완료.
[3488/9399] 'GGB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GGB' 데이터 수집 완료.
[3489/9399] 'GGG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GGG' 데이터 수집 완료.
[3490/9399] 'GGLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3491/9399] 'GGLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3492/9399] 'GGM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3493/9399] 'GGME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3494/9399] 'GGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GGN' 데이터 수집 완료.
[3495/9399] 'GGOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3496/9399] 'GGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GGR' 데이터 수집 완료.
[3497/9399] 'GGRW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3498/9399] 'GGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GGT' 데이터 수집 완료.
[3499/9399] 'GGUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3500/9399] 'GGZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3501/9399] 'GH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3502/9399] 'GHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GHC' 데이터 수집 완료.
[3503/9399] 'GHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GHG' 데이터 수집 완료.
[3504/9399] 'GHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GHI' 데이터 수집 완료.
[3505/9399] 'GHLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GHLD' 데이터 수집 완료.
[3506/9399] 'GHM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GHM' 데이터 수집 완료.
[3507/9399] 'GHRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GHRS' 데이터 수집 완료.
[3508/9399] 'GHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3509/9399] 'GHYB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3510/9399] 'GIAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3511/9399] 'GIB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GIB' 데이터 수집 완료.
[3512/9399] 'GIBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3513/9399] 'GIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GIC' 데이터 수집 완료.
[3514/9399] 'GIFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GIFI' 데이터 수집 완료.
[3515/9399] 'GIFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GIFT' 데이터 수집 완료.
[3516/9399] 'GIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3517/9399] 'GIGB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3518/9399] 'GIGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3519/9399] 'GIGM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GIGM' 데이터 수집 완료.
[3520/9399] 'GII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3521/9399] 'GIII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GIII' 데이터 수집 완료.
[3522/9399] 'GIL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GIL' 데이터 수집 완료.
[3523/9399] 'GILD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GILD' 데이터 수집 완료.
[3524/9399] 'GILT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GILT' 데이터 수집 완료.
[3525/9399] 'GIND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3526/9399] 'GINN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3527/9399] 'GINX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3528/9399] 'GIPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GIPR' 데이터 수집 완료.
[3529/9399] 'GIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GIS' 데이터 수집 완료.
[3530/9399] 'GITS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3531/9399] 'GK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3532/9399] 'GKAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3533/9399] 'GKOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GKOS' 데이터 수집 완료.
[3534/9399] 'GL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GL' 데이터 수집 완료.
[3535/9399] 'GLAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLAD' 데이터 수집 완료.
[3536/9399] 'GLBE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLBE' 데이터 수집 완료.
[3537/9399] 'GLBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3538/9399] 'GLBZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLBZ' 데이터 수집 완료.
[3539/9399] 'GLCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3540/9399] 'GLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3541/9399] 'GLDD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLDD' 데이터 수집 완료.
[3542/9399] 'GLDG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLDG' 데이터 수집 완료.
[3543/9399] 'GLDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3544/9399] 'GLDM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3545/9399] 'GLDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3546/9399] 'GLE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3547/9399] 'GLGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3548/9399] 'GLIBA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3549/9399] 'GLIBK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3550/9399] 'GLIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3551/9399] 'GLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3552/9399] 'GLMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLMD' 데이터 수집 완료.
[3553/9399] 'GLNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLNG' 데이터 수집 완료.
[3554/9399] 'GLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLO' 데이터 수집 완료.
[3555/9399] 'GLOB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLOB' 데이터 수집 완료.
[3556/9399] 'GLOF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3557/9399] 'GLOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3558/9399] 'GLP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLP' 데이터 수집 완료.
[3559/9399] 'GLPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLPG' 데이터 수집 완료.
[3560/9399] 'GLPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLPI' 데이터 수집 완료.
[3561/9399] 'GLQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLQ' 데이터 수집 완료.
[3562/9399] 'GLRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLRE' 데이터 수집 완료.
[3563/9399] 'GLRY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3564/9399] 'GLSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLSI' 데이터 수집 완료.
[3565/9399] 'GLTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLTO' 데이터 수집 완료.
[3566/9399] 'GLTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3567/9399] 'GLU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLU' 데이터 수집 완료.
[3568/9399] 'GLUE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLUE' 데이터 수집 완료.
[3569/9399] 'GLV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLV' 데이터 수집 완료.
[3570/9399] 'GLW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GLW' 데이터 수집 완료.
[3571/9399] 'GLXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3572/9399] 'GLXY' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3573/9399] 'GM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GM' 데이터 수집 완료.
[3574/9399] 'GMAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GMAB' 데이터 수집 완료.
[3575/9399] 'GME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GME' 데이터 수집 완료.
[3576/9399] 'GMED' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GMED' 데이터 수집 완료.
[3577/9399] 'GMET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3578/9399] 'GMEY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3579/9399] 'GMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3580/9399] 'GMGI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3581/9399] 'GMHS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3582/9399] 'GMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3583/9399] 'GMMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3584/9399] 'GMMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3585/9399] 'GMNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3586/9399] 'GMOI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3587/9399] 'GMOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3588/9399] 'GMRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GMRE' 데이터 수집 완료.
[3589/9399] 'GMUB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3590/9399] 'GMUN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3591/9399] 'GNE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNE' 데이터 수집 완료.
[3592/9399] 'GNFT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3593/9399] 'GNK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNK' 데이터 수집 완료.
[3594/9399] 'GNL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNL' 데이터 수집 완료.
[3595/9399] 'GNLN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNLN' 데이터 수집 완료.
[3596/9399] 'GNLX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3597/9399] 'GNMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3598/9399] 'GNOM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3599/9399] 'GNPX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNPX' 데이터 수집 완료.
[3600/9399] 'GNR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3601/9399] 'GNRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNRC' 데이터 수집 완료.
[3602/9399] 'GNS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3603/9399] 'GNSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNSS' 데이터 수집 완료.
[3604/9399] 'GNT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3605/9399] 'GNTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNTA' 데이터 수집 완료.
[3606/9399] 'GNTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNTX' 데이터 수집 완료.
[3607/9399] 'GNTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNTY' 데이터 수집 완료.
[3608/9399] 'GNW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GNW' 데이터 수집 완료.
[3609/9399] 'GO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GO' 데이터 수집 완료.
[3610/9399] 'GOAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3611/9399] 'GOCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOCO' 데이터 수집 완료.
[3612/9399] 'GOEX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3613/9399] 'GOF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3614/9399] 'GOGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOGO' 데이터 수집 완료.
[3615/9399] 'GOLF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOLF' 데이터 수집 완료.
[3616/9399] 'GOOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOOD' 데이터 수집 완료.
[3617/9399] 'GOOG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOOG' 데이터 수집 완료.
[3618/9399] 'GOOGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOOGL' 데이터 수집 완료.
[3619/9399] 'GOOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOOS' 데이터 수집 완료.
[3620/9399] 'GOOY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3621/9399] 'GORO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GORO' 데이터 수집 완료.
[3622/9399] 'GORV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GORV' 데이터 수집 완료.
[3623/9399] 'GOSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOSS' 데이터 수집 완료.
[3624/9399] 'GOTU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOTU' 데이터 수집 완료.
[3625/9399] 'GOVI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3626/9399] 'GOVX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GOVX' 데이터 수집 완료.
[3627/9399] 'GP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GP' 데이터 수집 완료.
[3628/9399] 'GPAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3629/9399] 'GPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPC' 데이터 수집 완료.
[3630/9399] 'GPCR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3631/9399] 'GPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPI' 데이터 수집 완료.
[3632/9399] 'GPIQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3633/9399] 'GPIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3634/9399] 'GPK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPK' 데이터 수집 완료.
[3635/9399] 'GPMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPMT' 데이터 수집 완료.
[3636/9399] 'GPN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPN' 데이터 수집 완료.
[3637/9399] 'GPOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPOR' 데이터 수집 완료.
[3638/9399] 'GPRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPRE' 데이터 수집 완료.
[3639/9399] 'GPRF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3640/9399] 'GPRK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPRK' 데이터 수집 완료.
[3641/9399] 'GPRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPRO' 데이터 수집 완료.
[3642/9399] 'GPTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3643/9399] 'GPUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GPUS' 데이터 수집 완료.
[3644/9399] 'GPZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3645/9399] 'GQGU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3646/9399] 'GQI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3647/9399] 'GQQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3648/9399] 'GQRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3649/9399] 'GRAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRAB' 데이터 수집 완료.
[3650/9399] 'GRAF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3651/9399] 'GRAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3652/9399] 'GRAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3653/9399] 'GRBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRBK' 데이터 수집 완료.
[3654/9399] 'GRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRC' 데이터 수집 완료.
[3655/9399] 'GRCE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRCE' 데이터 수집 완료.
[3656/9399] 'GRDN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3657/9399] 'GREE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3658/9399] 'GREK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3659/9399] 'GRF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRF' 데이터 수집 완료.
[3660/9399] 'GRFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRFS' 데이터 수집 완료.
[3661/9399] 'GRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRI' 데이터 수집 완료.
[3662/9399] 'GRID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3663/9399] 'GRIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3664/9399] 'GRMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRMN' 데이터 수집 완료.
[3665/9399] 'GRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3666/9399] 'GRNB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3667/9399] 'GRND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRND' 데이터 수집 완료.
[3668/9399] 'GRNQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRNQ' 데이터 수집 완료.
[3669/9399] 'GRNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRNT' 데이터 수집 완료.
[3670/9399] 'GRNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3671/9399] 'GRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3672/9399] 'GROV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GROV' 데이터 수집 완료.
[3673/9399] 'GROW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GROW' 데이터 수집 완료.
[3674/9399] 'GROY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GROY' 데이터 수집 완료.
[3675/9399] 'GRPM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3676/9399] 'GRPN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRPN' 데이터 수집 완료.
[3677/9399] 'GRPZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3678/9399] 'GRRR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRRR' 데이터 수집 완료.
[3679/9399] 'GRVY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRVY' 데이터 수집 완료.
[3680/9399] 'GRW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3681/9399] 'GRWG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GRWG' 데이터 수집 완료.
[3682/9399] 'GRX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3683/9399] 'GS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GS' 데이터 수집 완료.
[3684/9399] 'GSAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GSAT' 데이터 수집 완료.
[3685/9399] 'GSBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GSBC' 데이터 수집 완료.
[3686/9399] 'GSBD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GSBD' 데이터 수집 완료.
[3687/9399] 'GSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3688/9399] 'GSEU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3689/9399] 'GSG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3690/9399] 'GSHD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3691/9399] 'GSHR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3692/9399] 'GSIB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3693/9399] 'GSIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3694/9399] 'GSIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3695/9399] 'GSIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GSIT' 데이터 수집 완료.
[3696/9399] 'GSIW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3697/9399] 'GSJY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3698/9399] 'GSK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GSK' 데이터 수집 완료.
[3699/9399] 'GSKH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3700/9399] 'GSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GSL' 데이터 수집 완료.
[3701/9399] 'GSLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3702/9399] 'GSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GSM' 데이터 수집 완료.
[3703/9399] 'GSPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3704/9399] 'GSRFU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3705/9399] 'GSRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3706/9399] 'GSSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3707/9399] 'GSUN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3708/9399] 'GSY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3709/9399] 'GT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GT' 데이터 수집 완료.
[3710/9399] 'GTBP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTBP' 데이터 수집 완료.
[3711/9399] 'GTE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTE' 데이터 수집 완료.
[3712/9399] 'GTEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTEC' 데이터 수집 완료.
[3713/9399] 'GTEK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3714/9399] 'GTEN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3715/9399] 'GTERA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3716/9399] 'GTERU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3717/9399] 'GTES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTES' 데이터 수집 완료.
[3718/9399] 'GTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3719/9399] 'GTIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTIM' 데이터 수집 완료.
[3720/9399] 'GTLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTLB' 데이터 수집 완료.
[3721/9399] 'GTLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTLS' 데이터 수집 완료.
[3722/9399] 'GTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTM' 데이터 수집 완료.
[3723/9399] 'GTN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTN' 데이터 수집 완료.
[3724/9399] 'GTO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3725/9399] 'GTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3726/9399] 'GTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3727/9399] 'GTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GTY' 데이터 수집 완료.
[3728/9399] 'GUG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3729/9399] 'GUMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3730/9399] 'GUNR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3731/9399] 'GURE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GURE' 데이터 수집 완료.
[3732/9399] 'GURU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3733/9399] 'GUSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3734/9399] 'GUSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3735/9399] 'GUT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GUT' 데이터 수집 완료.
[3736/9399] 'GUTS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3737/9399] 'GV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GV' 데이터 수집 완료.
[3738/9399] 'GVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GVA' 데이터 수집 완료.
[3739/9399] 'GVH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3740/9399] 'GVIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3741/9399] 'GVLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3742/9399] 'GVUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3743/9399] 'GWAV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GWAV' 데이터 수집 완료.
[3744/9399] 'GWH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GWH' 데이터 수집 완료.
[3745/9399] 'GWRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GWRE' 데이터 수집 완료.
[3746/9399] 'GWRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GWRS' 데이터 수집 완료.
[3747/9399] 'GWW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GWW' 데이터 수집 완료.
[3748/9399] 'GWX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3749/9399] 'GXAI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3750/9399] 'GXC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3751/9399] 'GXDW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3752/9399] 'GXIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3753/9399] 'GXLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3754/9399] 'GXO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'GXO' 데이터 수집 완료.
[3755/9399] 'GXPC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3756/9399] 'GXPD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3757/9399] 'GXPE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3758/9399] 'GXPS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3759/9399] 'GXPT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3760/9399] 'GXUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3761/9399] 'GYLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3762/9399] 'GYRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3763/9399] 'GYRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3764/9399] 'H' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'H' 데이터 수집 완료.
[3765/9399] 'HACK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3766/9399] 'HAE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HAE' 데이터 수집 완료.
[3767/9399] 'HAFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HAFC' 데이터 수집 완료.
[3768/9399] 'HAFN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3769/9399] 'HAIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3770/9399] 'HAIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HAIN' 데이터 수집 완료.
[3771/9399] 'HAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HAL' 데이터 수집 완료.
[3772/9399] 'HALO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HALO' 데이터 수집 완료.
[3773/9399] 'HAO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3774/9399] 'HAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3775/9399] 'HAPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3776/9399] 'HAPS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3777/9399] 'HAPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3778/9399] 'HARD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3779/9399] 'HAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HAS' 데이터 수집 완료.
[3780/9399] 'HASI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HASI' 데이터 수집 완료.
[3781/9399] 'HAUZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3782/9399] 'HAWX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3783/9399] 'HAYW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HAYW' 데이터 수집 완료.
[3784/9399] 'HBAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HBAN' 데이터 수집 완료.
[3785/9399] 'HBB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HBB' 데이터 수집 완료.
[3786/9399] 'HBCP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HBCP' 데이터 수집 완료.
[3787/9399] 'HBDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3788/9399] 'HBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HBI' 데이터 수집 완료.
[3789/9399] 'HBIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HBIO' 데이터 수집 완료.
[3790/9399] 'HBM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HBM' 데이터 수집 완료.
[3791/9399] 'HBNB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3792/9399] 'HBNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HBNC' 데이터 수집 완료.
[3793/9399] 'HBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HBT' 데이터 수집 완료.
[3794/9399] 'HBTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3795/9399] 'HCA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HCA' 데이터 수집 완료.
[3796/9399] 'HCAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3797/9399] 'HCAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HCAT' 데이터 수집 완료.
[3798/9399] 'HCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HCC' 데이터 수집 완료.
[3799/9399] 'HCHL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3800/9399] 'HCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HCI' 데이터 수집 완료.
[3801/9399] 'HCKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HCKT' 데이터 수집 완료.
[3802/9399] 'HCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HCM' 데이터 수집 완료.
[3803/9399] 'HCMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3804/9399] 'HCMAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3805/9399] 'HCMT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3806/9399] 'HCOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3807/9399] 'HCSG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HCSG' 데이터 수집 완료.
[3808/9399] 'HCTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HCTI' 데이터 수집 완료.
[3809/9399] 'HCWB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3810/9399] 'HCWC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3811/9399] 'HD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HD' 데이터 수집 완료.
[3812/9399] 'HDB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HDB' 데이터 수집 완료.
[3813/9399] 'HDEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3814/9399] 'HDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3815/9399] 'HDGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3816/9399] 'HDL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3817/9399] 'HDLB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3818/9399] 'HDMV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3819/9399] 'HDSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HDSN' 데이터 수집 완료.
[3820/9399] 'HDUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3821/9399] 'HDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3822/9399] 'HE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HE' 데이터 수집 완료.
[3823/9399] 'HEAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3824/9399] 'HECA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3825/9399] 'HECO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3826/9399] 'HEDJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3827/9399] 'HEI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HEI' 데이터 수집 완료.
[3828/9399] 'HEI-A' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HEI-A' 데이터 수집 완료.
[3829/9399] 'HEJD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3830/9399] 'HELE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HELE' 데이터 수집 완료.
[3831/9399] 'HELO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3832/9399] 'HEPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HEPS' 데이터 수집 완료.
[3833/9399] 'HEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3834/9399] 'HEQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3835/9399] 'HEQT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3836/9399] 'HERD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3837/9399] 'HERO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3838/9399] 'HERZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3839/9399] 'HESM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HESM' 데이터 수집 완료.
[3840/9399] 'HEWJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3841/9399] 'HEZU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3842/9399] 'HF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3843/9399] 'HFBL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HFBL' 데이터 수집 완료.
[3844/9399] 'HFEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3845/9399] 'HFFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HFFG' 데이터 수집 완료.
[3846/9399] 'HFGM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3847/9399] 'HFMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3848/9399] 'HFND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3849/9399] 'HFRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3850/9399] 'HFSP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3851/9399] 'HFWA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HFWA' 데이터 수집 완료.
[3852/9399] 'HFXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3853/9399] 'HG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3854/9399] 'HGBL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HGBL' 데이터 수집 완료.
[3855/9399] 'HGER' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3856/9399] 'HGLB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3857/9399] 'HGRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3858/9399] 'HGTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HGTY' 데이터 수집 완료.
[3859/9399] 'HGV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HGV' 데이터 수집 완료.
[3860/9399] 'HHH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HHH' 데이터 수집 완료.
[3861/9399] 'HHS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HHS' 데이터 수집 완료.
[3862/9399] 'HI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HI' 데이터 수집 완료.
[3863/9399] 'HIBL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3864/9399] 'HIBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3865/9399] 'HIDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3866/9399] 'HIDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3867/9399] 'HIFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIFS' 데이터 수집 완료.
[3868/9399] 'HIG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIG' 데이터 수집 완료.
[3869/9399] 'HIGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3870/9399] 'HIHO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIHO' 데이터 수집 완료.
[3871/9399] 'HII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HII' 데이터 수집 완료.
[3872/9399] 'HIMS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIMS' 데이터 수집 완료.
[3873/9399] 'HIMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIMX' 데이터 수집 완료.
[3874/9399] 'HIMY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3875/9399] 'HIMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3876/9399] 'HIND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3877/9399] 'HIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIO' 데이터 수집 완료.
[3878/9399] 'HIPO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIPO' 데이터 수집 완료.
[3879/9399] 'HIPS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3880/9399] 'HISF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3881/9399] 'HIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3882/9399] 'HITI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HITI' 데이터 수집 완료.
[3883/9399] 'HIVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIVE' 데이터 수집 완료.
[3884/9399] 'HIW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIW' 데이터 수집 완료.
[3885/9399] 'HIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HIX' 데이터 수집 완료.
[3886/9399] 'HKD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HKD' 데이터 수집 완료.
[3887/9399] 'HKIT' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3888/9399] 'HKND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3889/9399] 'HKPD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3890/9399] 'HL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HL' 데이터 수집 완료.
[3891/9399] 'HLAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3892/9399] 'HLF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3893/9399] 'HLI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HLI' 데이터 수집 완료.
[3894/9399] 'HLIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HLIO' 데이터 수집 완료.
[3895/9399] 'HLIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HLIT' 데이터 수집 완료.
[3896/9399] 'HLLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HLLY' 데이터 수집 완료.
[3897/9399] 'HLMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HLMN' 데이터 수집 완료.
[3898/9399] 'HLN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HLN' 데이터 수집 완료.
[3899/9399] 'HLNE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HLNE' 데이터 수집 완료.
[3900/9399] 'HLP' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3901/9399] 'HLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3902/9399] 'HLVX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3903/9399] 'HLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HLX' 데이터 수집 완료.
[3904/9399] 'HMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HMC' 데이터 수집 완료.
[3905/9399] 'HMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HMN' 데이터 수집 완료.
[3906/9399] 'HMOP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3907/9399] 'HMR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3908/9399] 'HMY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HMY' 데이터 수집 완료.
[3909/9399] 'HNDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3910/9399] 'HNGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3911/9399] 'HNI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HNI' 데이터 수집 완료.
[3912/9399] 'HNNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HNNA' 데이터 수집 완료.
[3913/9399] 'HNRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HNRG' 데이터 수집 완료.
[3914/9399] 'HNST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HNST' 데이터 수집 완료.
[3915/9399] 'HNVR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HNVR' 데이터 수집 완료.
[3916/9399] 'HNW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HNW' 데이터 수집 완료.
[3917/9399] 'HOFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOFT' 데이터 수집 완료.
[3918/9399] 'HOG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOG' 데이터 수집 완료.
[3919/9399] 'HOLA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3920/9399] 'HOLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3921/9399] 'HOLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOLO' 데이터 수집 완료.
[3922/9399] 'HOLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOLX' 데이터 수집 완료.
[3923/9399] 'HOMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOMB' 데이터 수집 완료.
[3924/9399] 'HOMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3925/9399] 'HON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HON' 데이터 수집 완료.
[3926/9399] 'HOND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3927/9399] 'HONE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HONE' 데이터 수집 완료.
[3928/9399] 'HOOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOOD' 데이터 수집 완료.
[3929/9399] 'HOOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3930/9399] 'HOOI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3931/9399] 'HOOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3932/9399] 'HOOY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3933/9399] 'HOPE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOPE' 데이터 수집 완료.
[3934/9399] 'HOTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOTH' 데이터 수집 완료.
[3935/9399] 'HOUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOUR' 데이터 수집 완료.
[3936/9399] 'HOUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOUS' 데이터 수집 완료.
[3937/9399] 'HOV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOV' 데이터 수집 완료.
[3938/9399] 'HOVR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3939/9399] 'HOWL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HOWL' 데이터 수집 완료.
[3940/9399] 'HP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HP' 데이터 수집 완료.
[3941/9399] 'HPAI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3942/9399] 'HPE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HPE' 데이터 수집 완료.
[3943/9399] 'HPF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HPF' 데이터 수집 완료.
[3944/9399] 'HPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HPI' 데이터 수집 완료.
[3945/9399] 'HPK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HPK' 데이터 수집 완료.
[3946/9399] 'HPP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HPP' 데이터 수집 완료.
[3947/9399] 'HPQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3948/9399] 'HPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HPS' 데이터 수집 완료.
[3949/9399] 'HQGO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3950/9399] 'HQH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HQH' 데이터 수집 완료.
[3951/9399] 'HQI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HQI' 데이터 수집 완료.
[3952/9399] 'HQL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3953/9399] 'HQY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HQY' 데이터 수집 완료.
[3954/9399] 'HR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HR' 데이터 수집 완료.
[3955/9399] 'HRB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HRB' 데이터 수집 완료.
[3956/9399] 'HRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HRI' 데이터 수집 완료.
[3957/9399] 'HRL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HRL' 데이터 수집 완료.
[3958/9399] 'HRMY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HRMY' 데이터 수집 완료.
[3959/9399] 'HROW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HROW' 데이터 수집 완료.
[3960/9399] 'HRTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HRTG' 데이터 수집 완료.
[3961/9399] 'HRTS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3962/9399] 'HRTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3963/9399] 'HRZN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HRZN' 데이터 수집 완료.
[3964/9399] 'HSAI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3965/9399] 'HSBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HSBC' 데이터 수집 완료.
[3966/9399] 'HSBH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3967/9399] 'HSCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HSCS' 데이터 수집 완료.
[3968/9399] 'HSCZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3969/9399] 'HSDT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HSDT' 데이터 수집 완료.
[3970/9399] 'HSHP' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3971/9399] 'HSIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HSIC' 데이터 수집 완료.
[3972/9399] 'HSII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HSII' 데이터 수집 완료.
[3973/9399] 'HSMV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3974/9399] 'HSPO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[3975/9399] 'HSPT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3976/9399] 'HST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HST' 데이터 수집 완료.
[3977/9399] 'HSTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HSTM' 데이터 수집 완료.
[3978/9399] 'HSY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HSY' 데이터 수집 완료.
[3979/9399] 'HTAB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3980/9399] 'HTAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3981/9399] 'HTB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTB' 데이터 수집 완료.
[3982/9399] 'HTBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTBK' 데이터 수집 완료.
[3983/9399] 'HTCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTCO' 데이터 수집 완료.
[3984/9399] 'HTCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTCR' 데이터 수집 완료.
[3985/9399] 'HTD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTD' 데이터 수집 완료.
[3986/9399] 'HTEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3987/9399] 'HTFL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3988/9399] 'HTGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTGC' 데이터 수집 완료.
[3989/9399] 'HTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTH' 데이터 수집 완료.
[3990/9399] 'HTHT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTHT' 데이터 수집 완료.
[3991/9399] 'HTLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTLD' 데이터 수집 완료.
[3992/9399] 'HTLM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3993/9399] 'HTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTO' 데이터 수집 완료.
[3994/9399] 'HTOO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTOO' 데이터 수집 완료.
[3995/9399] 'HTRB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[3996/9399] 'HTZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HTZ' 데이터 수집 완료.
[3997/9399] 'HUBB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HUBB' 데이터 수집 완료.
[3998/9399] 'HUBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[3999/9399] 'HUBG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HUBG' 데이터 수집 완료.
[4000/9399] 'HUBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HUBS' 데이터 수집 완료.
[4001/9399] 'HUDI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HUDI' 데이터 수집 완료.
[4002/9399] 'HUHU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4003/9399] 'HUIZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HUIZ' 데이터 수집 완료.
[4004/9399] 'HUM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HUM' 데이터 수집 완료.
[4005/9399] 'HUMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4006/9399] 'HUN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HUN' 데이터 수집 완료.
[4007/9399] 'HURA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4008/9399] 'HURC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HURC' 데이터 수집 완료.
[4009/9399] 'HURN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HURN' 데이터 수집 완료.
[4010/9399] 'HUSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4011/9399] 'HUSV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4012/9399] 'HUT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4013/9399] 'HUYA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HUYA' 데이터 수집 완료.
[4014/9399] 'HVAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4015/9399] 'HVII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4016/9399] 'HVMCU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4017/9399] 'HVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HVT' 데이터 수집 완료.
[4018/9399] 'HWAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4019/9399] 'HWBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HWBK' 데이터 수집 완료.
[4020/9399] 'HWC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HWC' 데이터 수집 완료.
[4021/9399] 'HWEP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4022/9399] 'HWH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4023/9399] 'HWKN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HWKN' 데이터 수집 완료.
[4024/9399] 'HWM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HWM' 데이터 수집 완료.
[4025/9399] 'HWSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4026/9399] 'HXHX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4027/9399] 'HXL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HXL' 데이터 수집 완료.
[4028/9399] 'HY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HY' 데이터 수집 완료.
[4029/9399] 'HYAC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4030/9399] 'HYBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4031/9399] 'HYBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4032/9399] 'HYBX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4033/9399] 'HYDR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4034/9399] 'HYDW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4035/9399] 'HYEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4036/9399] 'HYFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4037/9399] 'HYFM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HYFM' 데이터 수집 완료.
[4038/9399] 'HYFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HYFT' 데이터 수집 완료.
[4039/9399] 'HYG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4040/9399] 'HYGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4041/9399] 'HYGV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4042/9399] 'HYI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4043/9399] 'HYLB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4044/9399] 'HYLN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HYLN' 데이터 수집 완료.
[4045/9399] 'HYLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4046/9399] 'HYMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4047/9399] 'HYMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4048/9399] 'HYP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4049/9399] 'HYPD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HYPD' 데이터 수집 완료.
[4050/9399] 'HYPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HYPR' 데이터 수집 완료.
[4051/9399] 'HYRM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4052/9399] 'HYS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4053/9399] 'HYSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4054/9399] 'HYSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4055/9399] 'HYT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HYT' 데이터 수집 완료.
[4056/9399] 'HYTI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4057/9399] 'HYTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4058/9399] 'HYUP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4059/9399] 'HYXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4060/9399] 'HYZD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4061/9399] 'HZO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'HZO' 데이터 수집 완료.
[4062/9399] 'IAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IAC' 데이터 수집 완료.
[4063/9399] 'IAE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4064/9399] 'IAF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IAF' 데이터 수집 완료.
[4065/9399] 'IAG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IAG' 데이터 수집 완료.
[4066/9399] 'IAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4067/9399] 'IAK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4068/9399] 'IAPR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4069/9399] 'IART' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IART' 데이터 수집 완료.
[4070/9399] 'IAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IAS' 데이터 수집 완료.
[4071/9399] 'IAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4072/9399] 'IAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4073/9399] 'IAUG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4074/9399] 'IAUM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4075/9399] 'IAUX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IAUX' 데이터 수집 완료.
[4076/9399] 'IBAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4077/9399] 'IBAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4078/9399] 'IBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4079/9399] 'IBBQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4080/9399] 'IBCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4081/9399] 'IBCP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IBCP' 데이터 수집 완료.
[4082/9399] 'IBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4083/9399] 'IBDQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4084/9399] 'IBDR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4085/9399] 'IBDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4086/9399] 'IBDT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4087/9399] 'IBDU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4088/9399] 'IBDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4089/9399] 'IBDW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4090/9399] 'IBDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4091/9399] 'IBDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4092/9399] 'IBDZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4093/9399] 'IBEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IBEX' 데이터 수집 완료.
[4094/9399] 'IBG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4095/9399] 'IBGA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4096/9399] 'IBGB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4097/9399] 'IBGK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4098/9399] 'IBGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4099/9399] 'IBIB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4100/9399] 'IBIC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4101/9399] 'IBID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4102/9399] 'IBIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4103/9399] 'IBIF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4104/9399] 'IBIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4105/9399] 'IBIH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4106/9399] 'IBII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4107/9399] 'IBIJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4108/9399] 'IBIK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4109/9399] 'IBIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4110/9399] 'IBIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IBIO' 데이터 수집 완료.
[4111/9399] 'IBIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4112/9399] 'IBKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IBKR' 데이터 수집 완료.
[4113/9399] 'IBLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4114/9399] 'IBM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IBM' 데이터 수집 완료.
[4115/9399] 'IBN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IBN' 데이터 수집 완료.
[4116/9399] 'IBND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4117/9399] 'IBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4118/9399] 'IBOC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IBOC' 데이터 수집 완료.
[4119/9399] 'IBOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4120/9399] 'IBP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IBP' 데이터 수집 완료.
[4121/9399] 'IBRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4122/9399] 'IBRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4123/9399] 'IBTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4124/9399] 'IBTF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4125/9399] 'IBTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4126/9399] 'IBTH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4127/9399] 'IBTI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4128/9399] 'IBTJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4129/9399] 'IBTK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4130/9399] 'IBTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4131/9399] 'IBTM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4132/9399] 'IBTO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4133/9399] 'IBTP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4134/9399] 'IBTQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4135/9399] 'IBUF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4136/9399] 'IBUY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4137/9399] 'ICAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4138/9399] 'ICCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ICCC' 데이터 수집 완료.
[4139/9399] 'ICCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ICCM' 데이터 수집 완료.
[4140/9399] 'ICE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ICE' 데이터 수집 완료.
[4141/9399] 'ICFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ICFI' 데이터 수집 완료.
[4142/9399] 'ICG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4143/9399] 'ICHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ICHR' 데이터 수집 완료.
[4144/9399] 'ICL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ICL' 데이터 수집 완료.
[4145/9399] 'ICLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4146/9399] 'ICLR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ICLR' 데이터 수집 완료.
[4147/9399] 'ICMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4148/9399] 'ICOI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4149/9399] 'ICON' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4150/9399] 'ICOP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4151/9399] 'ICPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4152/9399] 'ICU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4153/9399] 'ICUI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ICUI' 데이터 수집 완료.
[4154/9399] 'IDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IDA' 데이터 수집 완료.
[4155/9399] 'IDAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IDAI' 데이터 수집 완료.
[4156/9399] 'IDCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IDCC' 데이터 수집 완료.
[4157/9399] 'IDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4158/9399] 'IDEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4159/9399] 'IDEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4160/9399] 'IDEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4161/9399] 'IDEV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4162/9399] 'IDGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4163/9399] 'IDHQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4164/9399] 'IDLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4165/9399] 'IDMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4166/9399] 'IDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IDN' 데이터 수집 완료.
[4167/9399] 'IDNA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4168/9399] 'IDOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4169/9399] 'IDR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IDR' 데이터 수집 완료.
[4170/9399] 'IDRV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4171/9399] 'IDT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IDT' 데이터 수집 완료.
[4172/9399] 'IDU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4173/9399] 'IDVO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4174/9399] 'IDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4175/9399] 'IDXX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IDXX' 데이터 수집 완료.
[4176/9399] 'IDYA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IDYA' 데이터 수집 완료.
[4177/9399] 'IDYN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4178/9399] 'IE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IE' 데이터 수집 완료.
[4179/9399] 'IEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4180/9399] 'IEI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4181/9399] 'IEMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4182/9399] 'IEP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IEP' 데이터 수집 완료.
[4183/9399] 'IESC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IESC' 데이터 수집 완료.
[4184/9399] 'IEUR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4185/9399] 'IEUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4186/9399] 'IEV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4187/9399] 'IEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IEX' 데이터 수집 완료.
[4188/9399] 'IEZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4189/9399] 'IFBD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IFBD' 데이터 수집 완료.
[4190/9399] 'IFEB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4191/9399] 'IFED' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4192/9399] 'IFF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IFF' 데이터 수집 완료.
[4193/9399] 'IFGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4194/9399] 'IFLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4195/9399] 'IFN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IFN' 데이터 수집 완료.
[4196/9399] 'IFRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IFRX' 데이터 수집 완료.
[4197/9399] 'IFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IFS' 데이터 수집 완료.
[4198/9399] 'IFV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4199/9399] 'IG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4200/9399] 'IGA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IGA' 데이터 수집 완료.
[4201/9399] 'IGBH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4202/9399] 'IGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IGC' 데이터 수집 완료.
[4203/9399] 'IGCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4204/9399] 'IGD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IGD' 데이터 수집 완료.
[4205/9399] 'IGF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4206/9399] 'IGGY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4207/9399] 'IGI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4208/9399] 'IGIB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4209/9399] 'IGIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IGIC' 데이터 수집 완료.
[4210/9399] 'IGLB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4211/9399] 'IGM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4212/9399] 'IGME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4213/9399] 'IGOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4214/9399] 'IGPT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4215/9399] 'IGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IGR' 데이터 수집 완료.
[4216/9399] 'IGSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4217/9399] 'IGTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4218/9399] 'IH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IH' 데이터 수집 완료.
[4219/9399] 'IHAK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4220/9399] 'IHD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4221/9399] 'IHDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4222/9399] 'IHE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4223/9399] 'IHF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4224/9399] 'IHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4225/9399] 'IHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4226/9399] 'IHRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4227/9399] 'IHS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4228/9399] 'IHT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IHT' 데이터 수집 완료.
[4229/9399] 'IHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4230/9399] 'IHYF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4231/9399] 'IIF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IIF' 데이터 수집 완료.
[4232/9399] 'IIGD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4233/9399] 'III' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'III' 데이터 수집 완료.
[4234/9399] 'IIIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IIIN' 데이터 수집 완료.
[4235/9399] 'IIIV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IIIV' 데이터 수집 완료.
[4236/9399] 'IIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IIM' 데이터 수집 완료.
[4237/9399] 'IINN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IINN' 데이터 수집 완료.
[4238/9399] 'IIPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IIPR' 데이터 수집 완료.
[4239/9399] 'IJAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4240/9399] 'IJH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4241/9399] 'IJJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4242/9399] 'IJK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4243/9399] 'IJR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4244/9399] 'IJS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4245/9399] 'IJT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4246/9399] 'IJUL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4247/9399] 'IJUN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4248/9399] 'IKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IKT' 데이터 수집 완료.
[4249/9399] 'ILAG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ILAG' 데이터 수집 완료.
[4250/9399] 'ILCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4251/9399] 'ILCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4252/9399] 'ILCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4253/9399] 'ILDR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4254/9399] 'ILF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4255/9399] 'ILIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4256/9399] 'ILLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4257/9399] 'ILMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ILMN' 데이터 수집 완료.
[4258/9399] 'ILOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4259/9399] 'ILPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ILPT' 데이터 수집 완료.
[4260/9399] 'ILS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4261/9399] 'ILTB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4262/9399] 'IMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4263/9399] 'IMAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMAB' 데이터 수집 완료.
[4264/9399] 'IMAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4265/9399] 'IMAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMAX' 데이터 수집 완료.
[4266/9399] 'IMAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4267/9399] 'IMCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4268/9399] 'IMCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMCC' 데이터 수집 완료.
[4269/9399] 'IMCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4270/9399] 'IMCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMCR' 데이터 수집 완료.
[4271/9399] 'IMCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4272/9399] 'IMDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMDX' 데이터 수집 완료.
[4273/9399] 'IMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4274/9399] 'IMKTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMKTA' 데이터 수집 완료.
[4275/9399] 'IMMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMMP' 데이터 수집 완료.
[4276/9399] 'IMMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMMR' 데이터 수집 완료.
[4277/9399] 'IMMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMMX' 데이터 수집 완료.
[4278/9399] 'IMNM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMNM' 데이터 수집 완료.
[4279/9399] 'IMNN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMNN' 데이터 수집 완료.
[4280/9399] 'IMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMO' 데이터 수집 완료.
[4281/9399] 'IMOM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4282/9399] 'IMOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMOS' 데이터 수집 완료.
[4283/9399] 'IMPP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMPP' 데이터 수집 완료.
[4284/9399] 'IMRA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4285/9399] 'IMRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMRN' 데이터 수집 완료.
[4286/9399] 'IMRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMRX' 데이터 수집 완료.
[4287/9399] 'IMST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4288/9399] 'IMTB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4289/9399] 'IMTE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMTE' 데이터 수집 완료.
[4290/9399] 'IMTM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4291/9399] 'IMTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMTX' 데이터 수집 완료.
[4292/9399] 'IMUX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMUX' 데이터 수집 완료.
[4293/9399] 'IMVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMVT' 데이터 수집 완료.
[4294/9399] 'IMXI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IMXI' 데이터 수집 완료.
[4295/9399] 'INAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INAB' 데이터 수집 완료.
[4296/9399] 'INAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4297/9399] 'INBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INBK' 데이터 수집 완료.
[4298/9399] 'INBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INBS' 데이터 수집 완료.
[4299/9399] 'INBX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4300/9399] 'INCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4301/9399] 'INCM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4302/9399] 'INCO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4303/9399] 'INCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INCR' 데이터 수집 완료.
[4304/9399] 'INCY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INCY' 데이터 수집 완료.
[4305/9399] 'INDB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INDB' 데이터 수집 완료.
[4306/9399] 'INDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4307/9399] 'INDH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4308/9399] 'INDI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INDI' 데이터 수집 완료.
[4309/9399] 'INDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4310/9399] 'INDO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INDO' 데이터 수집 완료.
[4311/9399] 'INDP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INDP' 데이터 수집 완료.
[4312/9399] 'INDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4313/9399] 'INDV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4314/9399] 'INDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4315/9399] 'INEO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4316/9399] 'INEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4317/9399] 'INFA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INFA' 데이터 수집 완료.
[4318/9399] 'INFL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4319/9399] 'INFO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4320/9399] 'INFR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4321/9399] 'INFU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INFU' 데이터 수집 완료.
[4322/9399] 'INFY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INFY' 데이터 수집 완료.
[4323/9399] 'ING' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4324/9399] 'INGM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4325/9399] 'INGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INGN' 데이터 수집 완료.
[4326/9399] 'INGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INGR' 데이터 수집 완료.
[4327/9399] 'INHD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4328/9399] 'INKM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4329/9399] 'INKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4330/9399] 'INLF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4331/9399] 'INLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INLX' 데이터 수집 완료.
[4332/9399] 'INM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INM' 데이터 수집 완료.
[4333/9399] 'INMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INMB' 데이터 수집 완료.
[4334/9399] 'INMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INMD' 데이터 수집 완료.
[4335/9399] 'INMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4336/9399] 'INN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INN' 데이터 수집 완료.
[4337/9399] 'INNV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INNV' 데이터 수집 완료.
[4338/9399] 'INO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INO' 데이터 수집 완료.
[4339/9399] 'INOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INOD' 데이터 수집 완료.
[4340/9399] 'INOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4341/9399] 'INQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4342/9399] 'INR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4343/9399] 'INRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4344/9399] 'INSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4345/9399] 'INSG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4346/9399] 'INSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INSM' 데이터 수집 완료.
[4347/9399] 'INSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INSP' 데이터 수집 완료.
[4348/9399] 'INSW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INSW' 데이터 수집 완료.
[4349/9399] 'INTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INTA' 데이터 수집 완료.
[4350/9399] 'INTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INTC' 데이터 수집 완료.
[4351/9399] 'INTF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4352/9399] 'INTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4353/9399] 'INTJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4354/9399] 'INTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INTR' 데이터 수집 완료.
[4355/9399] 'INTS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4356/9399] 'INTT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INTT' 데이터 수집 완료.
[4357/9399] 'INTU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INTU' 데이터 수집 완료.
[4358/9399] 'INTW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4359/9399] 'INTZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INTZ' 데이터 수집 완료.
[4360/9399] 'INUV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INUV' 데이터 수집 완료.
[4361/9399] 'INV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INV' 데이터 수집 완료.
[4362/9399] 'INVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INVA' 데이터 수집 완료.
[4363/9399] 'INVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INVE' 데이터 수집 완료.
[4364/9399] 'INVG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4365/9399] 'INVH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INVH' 데이터 수집 완료.
[4366/9399] 'INVN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4367/9399] 'INVX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4368/9399] 'INVZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'INVZ' 데이터 수집 완료.
[4369/9399] 'IOBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IOBT' 데이터 수집 완료.
[4370/9399] 'IOCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4371/9399] 'ION' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4372/9399] 'IONL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4373/9399] 'IONQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IONQ' 데이터 수집 완료.
[4374/9399] 'IONR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IONR' 데이터 수집 완료.
[4375/9399] 'IONS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IONS' 데이터 수집 완료.
[4376/9399] 'IONX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4377/9399] 'IONZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4378/9399] 'IOO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4379/9399] 'IOPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4380/9399] 'IOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IOR' 데이터 수집 완료.
[4381/9399] 'IOSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IOSP' 데이터 수집 완료.
[4382/9399] 'IOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IOT' 데이터 수집 완료.
[4383/9399] 'IOTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4384/9399] 'IOVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IOVA' 데이터 수집 완료.
[4385/9399] 'IP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IP' 데이터 수집 완료.
[4386/9399] 'IPAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4387/9399] 'IPAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPAR' 데이터 수집 완료.
[4388/9399] 'IPAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4389/9399] 'IPCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4390/9399] 'IPDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPDN' 데이터 수집 완료.
[4391/9399] 'IPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPG' 데이터 수집 완료.
[4392/9399] 'IPGP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPGP' 데이터 수집 완료.
[4393/9399] 'IPHA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPHA' 데이터 수집 완료.
[4394/9399] 'IPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPI' 데이터 수집 완료.
[4395/9399] 'IPKW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4396/9399] 'IPM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPM' 데이터 수집 완료.
[4397/9399] 'IPO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4398/9399] 'IPOD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4399/9399] 'IPOS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4400/9399] 'IPSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPSC' 데이터 수집 완료.
[4401/9399] 'IPST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4402/9399] 'IPW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPW' 데이터 수집 완료.
[4403/9399] 'IPWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPWR' 데이터 수집 완료.
[4404/9399] 'IPX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IPX' 데이터 수집 완료.
[4405/9399] 'IQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IQ' 데이터 수집 완료.
[4406/9399] 'IQDF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4407/9399] 'IQDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4408/9399] 'IQHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4409/9399] 'IQI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IQI' 데이터 수집 완료.
[4410/9399] 'IQLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4411/9399] 'IQQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4412/9399] 'IQRA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4413/9399] 'IQSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4414/9399] 'IQSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4415/9399] 'IQST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IQST' 데이터 수집 완료.
[4416/9399] 'IQSU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4417/9399] 'IQSZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4418/9399] 'IQV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IQV' 데이터 수집 완료.
[4419/9399] 'IR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IR' 데이터 수집 완료.
[4420/9399] 'IRBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IRBT' 데이터 수집 완료.
[4421/9399] 'IRD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IRD' 데이터 수집 완료.
[4422/9399] 'IRDM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IRDM' 데이터 수집 완료.
[4423/9399] 'IREN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IREN' 데이터 수집 완료.
[4424/9399] 'IRET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4425/9399] 'IRHOU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4426/9399] 'IRIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IRIX' 데이터 수집 완료.
[4427/9399] 'IRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4428/9399] 'IRMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IRMD' 데이터 수집 완료.
[4429/9399] 'IROH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4430/9399] 'IRON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IRON' 데이터 수집 완료.
[4431/9399] 'IROQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IROQ' 데이터 수집 완료.
[4432/9399] 'IRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IRS' 데이터 수집 완료.
[4433/9399] 'IRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IRT' 데이터 수집 완료.
[4434/9399] 'IRTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IRTC' 데이터 수집 완료.
[4435/9399] 'IRTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4436/9399] 'IRVH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4437/9399] 'IRWD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4438/9399] 'ISBA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ISBA' 데이터 수집 완료.
[4439/9399] 'ISCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4440/9399] 'ISCF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4441/9399] 'ISCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4442/9399] 'ISCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4443/9399] 'ISD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4444/9399] 'ISEP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4445/9399] 'ISHG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4446/9399] 'ISHP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4447/9399] 'ISMD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4448/9399] 'ISOU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ISOU' 데이터 수집 완료.
[4449/9399] 'ISPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ISPC' 데이터 수집 완료.
[4450/9399] 'ISPO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4451/9399] 'ISPR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4452/9399] 'ISRA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4453/9399] 'ISRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ISRG' 데이터 수집 완료.
[4454/9399] 'ISRL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4455/9399] 'ISSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ISSC' 데이터 수집 완료.
[4456/9399] 'ISTB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4457/9399] 'ISTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ISTR' 데이터 수집 완료.
[4458/9399] 'ISWN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4459/9399] 'IT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IT' 데이터 수집 완료.
[4460/9399] 'ITAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4461/9399] 'ITDB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4462/9399] 'ITDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4463/9399] 'ITDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4464/9399] 'ITDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4465/9399] 'ITDF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4466/9399] 'ITDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4467/9399] 'ITDH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4468/9399] 'ITDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4469/9399] 'ITDJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4470/9399] 'ITEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4471/9399] 'ITGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ITGR' 데이터 수집 완료.
[4472/9399] 'ITIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ITIC' 데이터 수집 완료.
[4473/9399] 'ITOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4474/9399] 'ITP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ITP' 데이터 수집 완료.
[4475/9399] 'ITRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ITRG' 데이터 수집 완료.
[4476/9399] 'ITRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ITRI' 데이터 수집 완료.
[4477/9399] 'ITRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4478/9399] 'ITRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ITRN' 데이터 수집 완료.
[4479/9399] 'ITT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ITT' 데이터 수집 완료.
[4480/9399] 'ITUB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ITUB' 데이터 수집 완료.
[4481/9399] 'ITW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ITW' 데이터 수집 완료.
[4482/9399] 'IUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4483/9399] 'IUSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4484/9399] 'IUSG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4485/9399] 'IUSV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4486/9399] 'IVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4487/9399] 'IVAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4488/9399] 'IVDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IVDA' 데이터 수집 완료.
[4489/9399] 'IVE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4490/9399] 'IVES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4491/9399] 'IVF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4492/9399] 'IVLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4493/9399] 'IVOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4494/9399] 'IVOL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4495/9399] 'IVOO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4496/9399] 'IVOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4497/9399] 'IVP' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4498/9399] 'IVR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IVR' 데이터 수집 완료.
[4499/9399] 'IVRS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4500/9399] 'IVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IVT' 데이터 수집 완료.
[4501/9399] 'IVV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4502/9399] 'IVVD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IVVD' 데이터 수집 완료.
[4503/9399] 'IVW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4504/9399] 'IVZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IVZ' 데이터 수집 완료.
[4505/9399] 'IWB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4506/9399] 'IWC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4507/9399] 'IWD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4508/9399] 'IWDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4509/9399] 'IWF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4510/9399] 'IWFG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4511/9399] 'IWFL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4512/9399] 'IWL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4513/9399] 'IWLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4514/9399] 'IWM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4515/9399] 'IWML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4516/9399] 'IWMY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4517/9399] 'IWN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4518/9399] 'IWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4519/9399] 'IWP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4520/9399] 'IWR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4521/9399] 'IWS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4522/9399] 'IWV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4523/9399] 'IWX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4524/9399] 'IWY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4525/9399] 'IX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IX' 데이터 수집 완료.
[4526/9399] 'IXC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4527/9399] 'IXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4528/9399] 'IXHL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IXHL' 데이터 수집 완료.
[4529/9399] 'IXJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4530/9399] 'IXN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4531/9399] 'IXP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4532/9399] 'IXUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4533/9399] 'IYC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4534/9399] 'IYE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4535/9399] 'IYF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4536/9399] 'IYG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4537/9399] 'IYH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4538/9399] 'IYK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4539/9399] 'IYM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4540/9399] 'IYR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4541/9399] 'IYW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4542/9399] 'IYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4543/9399] 'IZEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'IZEA' 데이터 수집 완료.
[4544/9399] 'IZM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4545/9399] 'J' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'J' 데이터 수집 완료.
[4546/9399] 'JAAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4547/9399] 'JABS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4548/9399] 'JACK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4549/9399] 'JACS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4550/9399] 'JADE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4551/9399] 'JAGX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JAGX' 데이터 수집 완료.
[4552/9399] 'JAKK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JAKK' 데이터 수집 완료.
[4553/9399] 'JAMF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JAMF' 데이터 수집 완료.
[4554/9399] 'JANT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4555/9399] 'JANW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4556/9399] 'JANX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JANX' 데이터 수집 완료.
[4557/9399] 'JAPN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4558/9399] 'JAVA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4559/9399] 'JAZZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JAZZ' 데이터 수집 완료.
[4560/9399] 'JBDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4561/9399] 'JBGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JBGS' 데이터 수집 완료.
[4562/9399] 'JBHT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JBHT' 데이터 수집 완료.
[4563/9399] 'JBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JBI' 데이터 수집 완료.
[4564/9399] 'JBIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4565/9399] 'JBL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JBL' 데이터 수집 완료.
[4566/9399] 'JBLU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JBLU' 데이터 수집 완료.
[4567/9399] 'JBND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4568/9399] 'JBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4569/9399] 'JBSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JBSS' 데이터 수집 완료.
[4570/9399] 'JBTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JBTM' 데이터 수집 완료.
[4571/9399] 'JCAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4572/9399] 'JCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4573/9399] 'JCHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4574/9399] 'JCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JCI' 데이터 수집 완료.
[4575/9399] 'JCSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JCSE' 데이터 수집 완료.
[4576/9399] 'JCTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JCTC' 데이터 수집 완료.
[4577/9399] 'JCTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4578/9399] 'JD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JD' 데이터 수집 완료.
[4579/9399] 'JDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4580/9399] 'JDOC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4581/9399] 'JDST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4582/9399] 'JDVI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4583/9399] 'JDVL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4584/9399] 'JDZG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4585/9399] 'JEF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JEF' 데이터 수집 완료.
[4586/9399] 'JELD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JELD' 데이터 수집 완료.
[4587/9399] 'JEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4588/9399] 'JEMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4589/9399] 'JENA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4590/9399] 'JEPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4591/9399] 'JEPQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4592/9399] 'JEQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JEQ' 데이터 수집 완료.
[4593/9399] 'JETD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4594/9399] 'JETS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4595/9399] 'JETU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4596/9399] 'JFB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4597/9399] 'JFBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JFBR' 데이터 수집 완료.
[4598/9399] 'JFIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JFIN' 데이터 수집 완료.
[4599/9399] 'JFLI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4600/9399] 'JFR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4601/9399] 'JFU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JFU' 데이터 수집 완료.
[4602/9399] 'JG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JG' 데이터 수집 완료.
[4603/9399] 'JGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4604/9399] 'JGLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4605/9399] 'JGRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4606/9399] 'JGRW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4607/9399] 'JHAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4608/9399] 'JHAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4609/9399] 'JHCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4610/9399] 'JHCP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4611/9399] 'JHCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4612/9399] 'JHDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4613/9399] 'JHEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4614/9399] 'JHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JHG' 데이터 수집 완료.
[4615/9399] 'JHHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4616/9399] 'JHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JHI' 데이터 수집 완료.
[4617/9399] 'JHID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4618/9399] 'JHLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4619/9399] 'JHMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4620/9399] 'JHMD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4621/9399] 'JHML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4622/9399] 'JHMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4623/9399] 'JHMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4624/9399] 'JHPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4625/9399] 'JHS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JHS' 데이터 수집 완료.
[4626/9399] 'JHSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4627/9399] 'JHX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JHX' 데이터 수집 완료.
[4628/9399] 'JIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4629/9399] 'JIII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4630/9399] 'JILL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JILL' 데이터 수집 완료.
[4631/9399] 'JIRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4632/9399] 'JIVE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4633/9399] 'JJSF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JJSF' 데이터 수집 완료.
[4634/9399] 'JKHY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JKHY' 데이터 수집 완료.
[4635/9399] 'JKS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JKS' 데이터 수집 완료.
[4636/9399] 'JL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4637/9399] 'JLHL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4638/9399] 'JLL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JLL' 데이터 수집 완료.
[4639/9399] 'JLQD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4640/9399] 'JLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4641/9399] 'JMBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4642/9399] 'JMEE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4643/9399] 'JMHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4644/9399] 'JMIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JMIA' 데이터 수집 완료.
[4645/9399] 'JMID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4646/9399] 'JMM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JMM' 데이터 수집 완료.
[4647/9399] 'JMOM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4648/9399] 'JMSB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JMSB' 데이터 수집 완료.
[4649/9399] 'JMSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4650/9399] 'JMTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4651/9399] 'JNJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JNJ' 데이터 수집 완료.
[4652/9399] 'JNK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4653/9399] 'JNUG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4654/9399] 'JOB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JOB' 데이터 수집 완료.
[4655/9399] 'JOBY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JOBY' 데이터 수집 완료.
[4656/9399] 'JOE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JOE' 데이터 수집 완료.
[4657/9399] 'JOET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4658/9399] 'JOF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JOF' 데이터 수집 완료.
[4659/9399] 'JOJO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4660/9399] 'JOUT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JOUT' 데이터 수집 완료.
[4661/9399] 'JOYY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JOYY' 데이터 수집 완료.
[4662/9399] 'JPAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4663/9399] 'JPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JPC' 데이터 수집 완료.
[4664/9399] 'JPEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4665/9399] 'JPEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4666/9399] 'JPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4667/9399] 'JPIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4668/9399] 'JPIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4669/9399] 'JPM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JPM' 데이터 수집 완료.
[4670/9399] 'JPMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4671/9399] 'JPME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4672/9399] 'JPMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4673/9399] 'JPRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4674/9399] 'JPSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4675/9399] 'JPST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4676/9399] 'JPSV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4677/9399] 'JPUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4678/9399] 'JPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4679/9399] 'JPXN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4680/9399] 'JPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4681/9399] 'JQC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JQC' 데이터 수집 완료.
[4682/9399] 'JQUA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4683/9399] 'JRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4684/9399] 'JRI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4685/9399] 'JRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JRS' 데이터 수집 완료.
[4686/9399] 'JRSH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JRSH' 데이터 수집 완료.
[4687/9399] 'JRVR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JRVR' 데이터 수집 완료.
[4688/9399] 'JSCP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4689/9399] 'JSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4690/9399] 'JSMD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4691/9399] 'JSML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4692/9399] 'JSPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JSPR' 데이터 수집 완료.
[4693/9399] 'JSTC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4694/9399] 'JTAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JTAI' 데이터 수집 완료.
[4695/9399] 'JTEK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4696/9399] 'JULT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4697/9399] 'JULW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4698/9399] 'JUNS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4699/9399] 'JUNT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4700/9399] 'JUNW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4701/9399] 'JUSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4702/9399] 'JUST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4703/9399] 'JVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JVA' 데이터 수집 완료.
[4704/9399] 'JVAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4705/9399] 'JWEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JWEL' 데이터 수집 완료.
[4706/9399] 'JXG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JXG' 데이터 수집 완료.
[4707/9399] 'JXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4708/9399] 'JXN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JXN' 데이터 수집 완료.
[4709/9399] 'JYD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4710/9399] 'JYNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JYNT' 데이터 수집 완료.
[4711/9399] 'JZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JZ' 데이터 수집 완료.
[4712/9399] 'JZXN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'JZXN' 데이터 수집 완료.
[4713/9399] 'K' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'K' 데이터 수집 완료.
[4714/9399] 'KAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KAI' 데이터 수집 완료.
[4715/9399] 'KALA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KALA' 데이터 수집 완료.
[4716/9399] 'KALU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KALU' 데이터 수집 완료.
[4717/9399] 'KALV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KALV' 데이터 수집 완료.
[4718/9399] 'KAPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4719/9399] 'KAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KAR' 데이터 수집 완료.
[4720/9399] 'KARO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KARO' 데이터 수집 완료.
[4721/9399] 'KARS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4722/9399] 'KAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4723/9399] 'KAVL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KAVL' 데이터 수집 완료.
[4724/9399] 'KB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KB' 데이터 수집 완료.
[4725/9399] 'KBA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4726/9399] 'KBAB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4727/9399] 'KBDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4728/9399] 'KBE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4729/9399] 'KBH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KBH' 데이터 수집 완료.
[4730/9399] 'KBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KBR' 데이터 수집 완료.
[4731/9399] 'KBSX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KBSX' 데이터 수집 완료.
[4732/9399] 'KBUF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4733/9399] 'KBWB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4734/9399] 'KBWD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4735/9399] 'KBWP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4736/9399] 'KBWR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4737/9399] 'KBWY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4738/9399] 'KC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KC' 데이터 수집 완료.
[4739/9399] 'KCAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4740/9399] 'KCCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4741/9399] 'KCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4742/9399] 'KCHV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4743/9399] 'KCSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4744/9399] 'KD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KD' 데이터 수집 완료.
[4745/9399] 'KDEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4746/9399] 'KDP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KDP' 데이터 수집 완료.
[4747/9399] 'KDRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4748/9399] 'KE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KE' 데이터 수집 완료.
[4749/9399] 'KEAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4750/9399] 'KELYA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KELYA' 데이터 수집 완료.
[4751/9399] 'KEMQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4752/9399] 'KEMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4753/9399] 'KEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KEN' 데이터 수집 완료.
[4754/9399] 'KEP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KEP' 데이터 수집 완료.
[4755/9399] 'KEQU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KEQU' 데이터 수집 완료.
[4756/9399] 'KEUA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4757/9399] 'KEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KEX' 데이터 수집 완료.
[4758/9399] 'KEY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KEY' 데이터 수집 완료.
[4759/9399] 'KEYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KEYS' 데이터 수집 완료.
[4760/9399] 'KF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KF' 데이터 수집 완료.
[4761/9399] 'KFFB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4762/9399] 'KFII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4763/9399] 'KFRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KFRC' 데이터 수집 완료.
[4764/9399] 'KFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KFS' 데이터 수집 완료.
[4765/9399] 'KFY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KFY' 데이터 수집 완료.
[4766/9399] 'KG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4767/9399] 'KGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KGC' 데이터 수집 완료.
[4768/9399] 'KGEI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KGEI' 데이터 수집 완료.
[4769/9399] 'KGRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4770/9399] 'KGS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4771/9399] 'KHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KHC' 데이터 수집 완료.
[4772/9399] 'KHYB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4773/9399] 'KIDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KIDS' 데이터 수집 완료.
[4774/9399] 'KIDZ' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4775/9399] 'KIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4776/9399] 'KIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KIM' 데이터 수집 완료.
[4777/9399] 'KINS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KINS' 데이터 수집 완료.
[4778/9399] 'KIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4779/9399] 'KITT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4780/9399] 'KKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KKR' 데이터 수집 완료.
[4781/9399] 'KLAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KLAC' 데이터 수집 완료.
[4782/9399] 'KLAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4783/9399] 'KLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4784/9399] 'KLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4785/9399] 'KLIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KLIC' 데이터 수집 완료.
[4786/9399] 'KLIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4787/9399] 'KLMN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4788/9399] 'KLMT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4789/9399] 'KLRS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4790/9399] 'KLTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KLTO' 데이터 수집 완료.
[4791/9399] 'KLTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KLTR' 데이터 수집 완료.
[4792/9399] 'KLXE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4793/9399] 'KLXY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4794/9399] 'KMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KMB' 데이터 수집 완료.
[4795/9399] 'KMDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KMDA' 데이터 수집 완료.
[4796/9399] 'KMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KMI' 데이터 수집 완료.
[4797/9399] 'KMID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4798/9399] 'KMLI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4799/9399] 'KMLM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4800/9399] 'KMPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KMPR' 데이터 수집 완료.
[4801/9399] 'KMRK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4802/9399] 'KMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KMT' 데이터 수집 완료.
[4803/9399] 'KMTS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4804/9399] 'KMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KMX' 데이터 수집 완료.
[4805/9399] 'KN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KN' 데이터 수집 완료.
[4806/9399] 'KNCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4807/9399] 'KNDI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KNDI' 데이터 수집 완료.
[4808/9399] 'KNF' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4809/9399] 'KNGZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4810/9399] 'KNO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4811/9399] 'KNOP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KNOP' 데이터 수집 완료.
[4812/9399] 'KNRG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4813/9399] 'KNSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KNSA' 데이터 수집 완료.
[4814/9399] 'KNSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KNSL' 데이터 수집 완료.
[4815/9399] 'KNTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KNTK' 데이터 수집 완료.
[4816/9399] 'KNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KNX' 데이터 수집 완료.
[4817/9399] 'KO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KO' 데이터 수집 완료.
[4818/9399] 'KOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KOD' 데이터 수집 완료.
[4819/9399] 'KODK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KODK' 데이터 수집 완료.
[4820/9399] 'KOF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KOF' 데이터 수집 완료.
[4821/9399] 'KOID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4822/9399] 'KOKU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4823/9399] 'KOLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4824/9399] 'KOMP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4825/9399] 'KONG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4826/9399] 'KOOL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4827/9399] 'KOP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KOP' 데이터 수집 완료.
[4828/9399] 'KOPN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KOPN' 데이터 수집 완료.
[4829/9399] 'KORE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4830/9399] 'KORP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4831/9399] 'KORU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4832/9399] 'KOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KOS' 데이터 수집 완료.
[4833/9399] 'KOSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KOSS' 데이터 수집 완료.
[4834/9399] 'KOYN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4835/9399] 'KOYNU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4836/9399] 'KPDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4837/9399] 'KPLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4838/9399] 'KPRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4839/9399] 'KPRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KPRX' 데이터 수집 완료.
[4840/9399] 'KPTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4841/9399] 'KQQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4842/9399] 'KR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KR' 데이터 수집 완료.
[4843/9399] 'KRBN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4844/9399] 'KRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRC' 데이터 수집 완료.
[4845/9399] 'KRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4846/9399] 'KREF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KREF' 데이터 수집 완료.
[4847/9399] 'KRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRG' 데이터 수집 완료.
[4848/9399] 'KRKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRKR' 데이터 수집 완료.
[4849/9399] 'KRMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4850/9399] 'KRMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRMD' 데이터 수집 완료.
[4851/9399] 'KRMN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4852/9399] 'KRNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRNT' 데이터 수집 완료.
[4853/9399] 'KRNY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRNY' 데이터 수집 완료.
[4854/9399] 'KRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRO' 데이터 수집 완료.
[4855/9399] 'KROP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4856/9399] 'KROS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KROS' 데이터 수집 완료.
[4857/9399] 'KRP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRP' 데이터 수집 완료.
[4858/9399] 'KRRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4859/9399] 'KRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRT' 데이터 수집 완료.
[4860/9399] 'KRUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRUS' 데이터 수집 완료.
[4861/9399] 'KRYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KRYS' 데이터 수집 완료.
[4862/9399] 'KSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4863/9399] 'KSCP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KSCP' 데이터 수집 완료.
[4864/9399] 'KSPI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4865/9399] 'KSPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4866/9399] 'KSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KSS' 데이터 수집 완료.
[4867/9399] 'KSTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4868/9399] 'KT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KT' 데이터 수집 완료.
[4869/9399] 'KTB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KTB' 데이터 수집 완료.
[4870/9399] 'KTCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KTCC' 데이터 수집 완료.
[4871/9399] 'KTEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4872/9399] 'KTF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KTF' 데이터 수집 완료.
[4873/9399] 'KTOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KTOS' 데이터 수집 완료.
[4874/9399] 'KTTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KTTA' 데이터 수집 완료.
[4875/9399] 'KUKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KUKE' 데이터 수집 완료.
[4876/9399] 'KULR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KULR' 데이터 수집 완료.
[4877/9399] 'KURA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KURA' 데이터 수집 완료.
[4878/9399] 'KURE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4879/9399] 'KVAC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4880/9399] 'KVHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KVHI' 데이터 수집 완료.
[4881/9399] 'KVLE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4882/9399] 'KVUE' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4883/9399] 'KVYO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4884/9399] 'KW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KW' 데이터 수집 완료.
[4885/9399] 'KWEB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4886/9399] 'KWM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4887/9399] 'KWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KWR' 데이터 수집 완료.
[4888/9399] 'KXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4889/9399] 'KXIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KXIN' 데이터 수집 완료.
[4890/9399] 'KYIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4891/9399] 'KYMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KYMR' 데이터 수집 완료.
[4892/9399] 'KYN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KYN' 데이터 수집 완료.
[4893/9399] 'KYTX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4894/9399] 'KZIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KZIA' 데이터 수집 완료.
[4895/9399] 'KZR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'KZR' 데이터 수집 완료.
[4896/9399] 'L' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'L' 데이터 수집 완료.
[4897/9399] 'LAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LAB' 데이터 수집 완료.
[4898/9399] 'LABD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4899/9399] 'LABU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4900/9399] 'LAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4901/9399] 'LAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LAD' 데이터 수집 완료.
[4902/9399] 'LADR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LADR' 데이터 수집 완료.
[4903/9399] 'LAES' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4904/9399] 'LAKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LAKE' 데이터 수집 완료.
[4905/9399] 'LALT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4906/9399] 'LAMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LAMR' 데이터 수집 완료.
[4907/9399] 'LAND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LAND' 데이터 수집 완료.
[4908/9399] 'LANV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4909/9399] 'LAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LAR' 데이터 수집 완료.
[4910/9399] 'LARK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LARK' 데이터 수집 완료.
[4911/9399] 'LASE' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[4912/9399] 'LASR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LASR' 데이터 수집 완료.
[4913/9399] 'LATAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4914/9399] 'LAUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LAUR' 데이터 수집 완료.
[4915/9399] 'LAW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LAW' 데이터 수집 완료.
[4916/9399] 'LAWR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4917/9399] 'LAYS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4918/9399] 'LAZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LAZ' 데이터 수집 완료.
[4919/9399] 'LAZR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4920/9399] 'LB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4921/9399] 'LBAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4922/9399] 'LBGJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4923/9399] 'LBRDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LBRDA' 데이터 수집 완료.
[4924/9399] 'LBRDK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LBRDK' 데이터 수집 완료.
[4925/9399] 'LBRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LBRT' 데이터 수집 완료.
[4926/9399] 'LBRX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4927/9399] 'LBTYA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LBTYA' 데이터 수집 완료.
[4928/9399] 'LBTYK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LBTYK' 데이터 수집 완료.
[4929/9399] 'LC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LC' 데이터 수집 완료.
[4930/9399] 'LCCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4931/9399] 'LCDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4932/9399] 'LCDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4933/9399] 'LCFY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LCFY' 데이터 수집 완료.
[4934/9399] 'LCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4935/9399] 'LCID' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LCID' 데이터 수집 완료.
[4936/9399] 'LCII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LCII' 데이터 수집 완료.
[4937/9399] 'LCLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4938/9399] 'LCNB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LCNB' 데이터 수집 완료.
[4939/9399] 'LCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4940/9399] 'LCTD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4941/9399] 'LCTU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4942/9399] 'LCTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LCTX' 데이터 수집 완료.
[4943/9399] 'LCUT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LCUT' 데이터 수집 완료.
[4944/9399] 'LDEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4945/9399] 'LDI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LDI' 데이터 수집 완료.
[4946/9399] 'LDOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LDOS' 데이터 수집 완료.
[4947/9399] 'LDP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4948/9399] 'LDRC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4949/9399] 'LDRH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4950/9399] 'LDRI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4951/9399] 'LDRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4952/9399] 'LDRX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4953/9399] 'LDSF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4954/9399] 'LDUR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4955/9399] 'LDWY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4956/9399] 'LE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LE' 데이터 수집 완료.
[4957/9399] 'LEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LEA' 데이터 수집 완료.
[4958/9399] 'LECO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LECO' 데이터 수집 완료.
[4959/9399] 'LEDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LEDS' 데이터 수집 완료.
[4960/9399] 'LEE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4961/9399] 'LEG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LEG' 데이터 수집 완료.
[4962/9399] 'LEGH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LEGH' 데이터 수집 완료.
[4963/9399] 'LEGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LEGN' 데이터 수집 완료.
[4964/9399] 'LEGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4965/9399] 'LEGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4966/9399] 'LEMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4967/9399] 'LEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LEN' 데이터 수집 완료.
[4968/9399] 'LENZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4969/9399] 'LEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4970/9399] 'LESL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4971/9399] 'LEU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LEU' 데이터 수집 완료.
[4972/9399] 'LEVI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LEVI' 데이터 수집 완료.
[4973/9399] 'LEXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4974/9399] 'LEXX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LEXX' 데이터 수집 완료.
[4975/9399] 'LFCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LFCR' 데이터 수집 완료.
[4976/9399] 'LFEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4977/9399] 'LFGY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4978/9399] 'LFMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[4979/9399] 'LFSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4980/9399] 'LFST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LFST' 데이터 수집 완료.
[4981/9399] 'LFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LFT' 데이터 수집 완료.
[4982/9399] 'LFUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LFUS' 데이터 수집 완료.
[4983/9399] 'LFVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LFVN' 데이터 수집 완료.
[4984/9399] 'LFWD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LFWD' 데이터 수집 완료.
[4985/9399] 'LGCB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4986/9399] 'LGCF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4987/9399] 'LGCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4988/9399] 'LGCY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4989/9399] 'LGDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4990/9399] 'LGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4991/9399] 'LGHL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LGHL' 데이터 수집 완료.
[4992/9399] 'LGHT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4993/9399] 'LGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LGI' 데이터 수집 완료.
[4994/9399] 'LGIH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LGIH' 데이터 수집 완료.
[4995/9399] 'LGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LGL' 데이터 수집 완료.
[4996/9399] 'LGLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4997/9399] 'LGN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[4998/9399] 'LGND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LGND' 데이터 수집 완료.
[4999/9399] 'LGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LGO' 데이터 수집 완료.
[5000/9399] 'LGOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5001/9399] 'LGPS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5002/9399] 'LGRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5003/9399] 'LGVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LGVN' 데이터 수집 완료.
[5004/9399] 'LH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LH' 데이터 수집 완료.
[5005/9399] 'LHAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5006/9399] 'LHSW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5007/9399] 'LHX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LHX' 데이터 수집 완료.
[5008/9399] 'LI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LI' 데이터 수집 완료.
[5009/9399] 'LICN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5010/9399] 'LIDR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LIDR' 데이터 수집 완료.
[5011/9399] 'LIEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LIEN' 데이터 수집 완료.
[5012/9399] 'LIF' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5013/9399] 'LII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LII' 데이터 수집 완료.
[5014/9399] 'LILA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LILA' 데이터 수집 완료.
[5015/9399] 'LILAK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LILAK' 데이터 수집 완료.
[5016/9399] 'LIMN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5017/9399] 'LIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LIN' 데이터 수집 완료.
[5018/9399] 'LINC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LINC' 데이터 수집 완료.
[5019/9399] 'LIND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5020/9399] 'LINE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5021/9399] 'LINK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LINK' 데이터 수집 완료.
[5022/9399] 'LION' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5023/9399] 'LIQT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LIQT' 데이터 수집 완료.
[5024/9399] 'LIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5025/9399] 'LITB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5026/9399] 'LITE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LITE' 데이터 수집 완료.
[5027/9399] 'LITL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5028/9399] 'LITM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LITM' 데이터 수집 완료.
[5029/9399] 'LITP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5030/9399] 'LITS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LITS' 데이터 수집 완료.
[5031/9399] 'LIVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LIVE' 데이터 수집 완료.
[5032/9399] 'LIVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LIVN' 데이터 수집 완료.
[5033/9399] 'LIVR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5034/9399] 'LIXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LIXT' 데이터 수집 완료.
[5035/9399] 'LKFN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LKFN' 데이터 수집 완료.
[5036/9399] 'LKQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LKQ' 데이터 수집 완료.
[5037/9399] 'LLDR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5038/9399] 'LLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LLY' 데이터 수집 완료.
[5039/9399] 'LLYVA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5040/9399] 'LLYVK' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5041/9399] 'LLYX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5042/9399] 'LLYZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5043/9399] 'LMAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LMAT' 데이터 수집 완료.
[5044/9399] 'LMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LMB' 데이터 수집 완료.
[5045/9399] 'LMBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5046/9399] 'LMBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5047/9399] 'LMFA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LMFA' 데이터 수집 완료.
[5048/9399] 'LMND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LMND' 데이터 수집 완료.
[5049/9399] 'LMNR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LMNR' 데이터 수집 완료.
[5050/9399] 'LMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LMT' 데이터 수집 완료.
[5051/9399] 'LMTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5052/9399] 'LMTS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5053/9399] 'LMUB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5054/9399] 'LNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LNC' 데이터 수집 완료.
[5055/9399] 'LND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LND' 데이터 수집 완료.
[5056/9399] 'LNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LNG' 데이터 수집 완료.
[5057/9399] 'LNKB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LNKB' 데이터 수집 완료.
[5058/9399] 'LNKS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5059/9399] 'LNN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LNN' 데이터 수집 완료.
[5060/9399] 'LNSR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LNSR' 데이터 수집 완료.
[5061/9399] 'LNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LNT' 데이터 수집 완료.
[5062/9399] 'LNTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LNTH' 데이터 수집 완료.
[5063/9399] 'LNW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LNW' 데이터 수집 완료.
[5064/9399] 'LNZA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LNZA' 데이터 수집 완료.
[5065/9399] 'LOAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LOAN' 데이터 수집 완료.
[5066/9399] 'LOAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5067/9399] 'LOB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LOB' 데이터 수집 완료.
[5068/9399] 'LOBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5069/9399] 'LOCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5070/9399] 'LOCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LOCO' 데이터 수집 완료.
[5071/9399] 'LODE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LODE' 데이터 수집 완료.
[5072/9399] 'LODI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5073/9399] 'LOGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LOGI' 데이터 수집 완료.
[5074/9399] 'LOGO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5075/9399] 'LOKV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5076/9399] 'LOMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LOMA' 데이터 수집 완료.
[5077/9399] 'LONZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5078/9399] 'LOOP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LOOP' 데이터 수집 완료.
[5079/9399] 'LOPE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LOPE' 데이터 수집 완료.
[5080/9399] 'LOPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5081/9399] 'LOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5082/9399] 'LOUP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5083/9399] 'LOVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LOVE' 데이터 수집 완료.
[5084/9399] 'LOW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5085/9399] 'LOWV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5086/9399] 'LPA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5087/9399] 'LPAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5088/9399] 'LPBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5089/9399] 'LPCN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LPCN' 데이터 수집 완료.
[5090/9399] 'LPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LPG' 데이터 수집 완료.
[5091/9399] 'LPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LPL' 데이터 수집 완료.
[5092/9399] 'LPLA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LPLA' 데이터 수집 완료.
[5093/9399] 'LPRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5094/9399] 'LPRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LPRO' 데이터 수집 완료.
[5095/9399] 'LPSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5096/9399] 'LPTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LPTH' 데이터 수집 완료.
[5097/9399] 'LPTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LPTX' 데이터 수집 완료.
[5098/9399] 'LPX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LPX' 데이터 수집 완료.
[5099/9399] 'LQAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5100/9399] 'LQD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5101/9399] 'LQDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LQDA' 데이터 수집 완료.
[5102/9399] 'LQDB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5103/9399] 'LQDH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5104/9399] 'LQDT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LQDT' 데이터 수집 완료.
[5105/9399] 'LQIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5106/9399] 'LQPE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5107/9399] 'LQTI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5108/9399] 'LRCX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LRCX' 데이터 수집 완료.
[5109/9399] 'LRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5110/9399] 'LRGC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5111/9399] 'LRGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5112/9399] 'LRGF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5113/9399] 'LRGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5114/9399] 'LRHC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5115/9399] 'LRMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LRMR' 데이터 수집 완료.
[5116/9399] 'LRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LRN' 데이터 수집 완료.
[5117/9399] 'LRND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5118/9399] 'LRNZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5119/9399] 'LSAF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5120/9399] 'LSAK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LSAK' 데이터 수집 완료.
[5121/9399] 'LSAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5122/9399] 'LSB' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5123/9399] 'LSBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LSBK' 데이터 수집 완료.
[5124/9399] 'LSCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LSCC' 데이터 수집 완료.
[5125/9399] 'LSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5126/9399] 'LSEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5127/9399] 'LSF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LSF' 데이터 수집 완료.
[5128/9399] 'LSGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5129/9399] 'LSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5130/9399] 'LSPD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LSPD' 데이터 수집 완료.
[5131/9399] 'LST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5132/9399] 'LSTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LSTA' 데이터 수집 완료.
[5133/9399] 'LSTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LSTR' 데이터 수집 완료.
[5134/9399] 'LSVD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5135/9399] 'LTBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LTBR' 데이터 수집 완료.
[5136/9399] 'LTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LTC' 데이터 수집 완료.
[5137/9399] 'LTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LTH' 데이터 수집 완료.
[5138/9399] 'LTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5139/9399] 'LTM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5140/9399] 'LTPZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5141/9399] 'LTRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LTRN' 데이터 수집 완료.
[5142/9399] 'LTRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LTRX' 데이터 수집 완료.
[5143/9399] 'LTTI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5144/9399] 'LU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LU' 데이터 수집 완료.
[5145/9399] 'LUCD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LUCD' 데이터 수집 완료.
[5146/9399] 'LUCK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5147/9399] 'LUCY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LUCY' 데이터 수집 완료.
[5148/9399] 'LUD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5149/9399] 'LULU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LULU' 데이터 수집 완료.
[5150/9399] 'LUMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5151/9399] 'LUNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LUNG' 데이터 수집 완료.
[5152/9399] 'LUNR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LUNR' 데이터 수집 완료.
[5153/9399] 'LUV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LUV' 데이터 수집 완료.
[5154/9399] 'LUXE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LUXE' 데이터 수집 완료.
[5155/9399] 'LVHD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5156/9399] 'LVLU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LVLU' 데이터 수집 완료.
[5157/9399] 'LVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5158/9399] 'LVRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LVRO' 데이터 수집 완료.
[5159/9399] 'LVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LVS' 데이터 수집 완료.
[5160/9399] 'LVTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LVTX' 데이터 수집 완료.
[5161/9399] 'LVWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LVWR' 데이터 수집 완료.
[5162/9399] 'LW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LW' 데이터 수집 완료.
[5163/9399] 'LWAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5164/9399] 'LWAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LWAY' 데이터 수집 완료.
[5165/9399] 'LWLG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LWLG' 데이터 수집 완료.
[5166/9399] 'LX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LX' 데이터 수집 완료.
[5167/9399] 'LXEH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LXEH' 데이터 수집 완료.
[5168/9399] 'LXEO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5169/9399] 'LXFR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LXFR' 데이터 수집 완료.
[5170/9399] 'LXP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LXP' 데이터 수집 완료.
[5171/9399] 'LXRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LXRX' 데이터 수집 완료.
[5172/9399] 'LXU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LXU' 데이터 수집 완료.
[5173/9399] 'LYB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LYB' 데이터 수집 완료.
[5174/9399] 'LYEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LYEL' 데이터 수집 완료.
[5175/9399] 'LYFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LYFT' 데이터 수집 완료.
[5176/9399] 'LYG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LYG' 데이터 수집 완료.
[5177/9399] 'LYRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LYRA' 데이터 수집 완료.
[5178/9399] 'LYTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LYTS' 데이터 수집 완료.
[5179/9399] 'LYV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LYV' 데이터 수집 완료.
[5180/9399] 'LZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LZ' 데이터 수집 완료.
[5181/9399] 'LZB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LZB' 데이터 수집 완료.
[5182/9399] 'LZM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'LZM' 데이터 수집 완료.
[5183/9399] 'LZMH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5184/9399] 'M' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'M' 데이터 수집 완료.
[5185/9399] 'MA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MA' 데이터 수집 완료.
[5186/9399] 'MAA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAA' 데이터 수집 완료.
[5187/9399] 'MAAS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5188/9399] 'MAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAC' 데이터 수집 완료.
[5189/9399] 'MACI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5190/9399] 'MADE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5191/9399] 'MAGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5192/9399] 'MAGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5193/9399] 'MAGN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5194/9399] 'MAIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAIA' 데이터 수집 완료.
[5195/9399] 'MAIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAIN' 데이터 수집 완료.
[5196/9399] 'MAKX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5197/9399] 'MAMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAMA' 데이터 수집 완료.
[5198/9399] 'MAMK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5199/9399] 'MAMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5200/9399] 'MAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAN' 데이터 수집 완료.
[5201/9399] 'MANH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MANH' 데이터 수집 완료.
[5202/9399] 'MANI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5203/9399] 'MANU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MANU' 데이터 수집 완료.
[5204/9399] 'MAPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5205/9399] 'MAPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAPS' 데이터 수집 완료.
[5206/9399] 'MAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5207/9399] 'MARA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MARA' 데이터 수집 완료.
[5208/9399] 'MARB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5209/9399] 'MARO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5210/9399] 'MARPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MARPS' 데이터 수집 완료.
[5211/9399] 'MART' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5212/9399] 'MARW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5213/9399] 'MAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAS' 데이터 수집 완료.
[5214/9399] 'MASI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MASI' 데이터 수집 완료.
[5215/9399] 'MASK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5216/9399] 'MASS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MASS' 데이터 수집 완료.
[5217/9399] 'MAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAT' 데이터 수집 완료.
[5218/9399] 'MATH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MATH' 데이터 수집 완료.
[5219/9399] 'MATV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MATV' 데이터 수집 완료.
[5220/9399] 'MATW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MATW' 데이터 수집 완료.
[5221/9399] 'MATX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MATX' 데이터 수집 완료.
[5222/9399] 'MAVF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5223/9399] 'MAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5224/9399] 'MAXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5225/9399] 'MAXN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5226/9399] 'MAYA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5227/9399] 'MAYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MAYS' 데이터 수집 완료.
[5228/9399] 'MAYT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5229/9399] 'MAYW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5230/9399] 'MAZE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5231/9399] 'MB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5232/9399] 'MBAV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5233/9399] 'MBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5234/9399] 'MBBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MBBC' 데이터 수집 완료.
[5235/9399] 'MBC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5236/9399] 'MBCN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MBCN' 데이터 수집 완료.
[5237/9399] 'MBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5238/9399] 'MBIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MBIN' 데이터 수집 완료.
[5239/9399] 'MBIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5240/9399] 'MBLY' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5241/9399] 'MBOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MBOT' 데이터 수집 완료.
[5242/9399] 'MBOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5243/9399] 'MBRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MBRX' 데이터 수집 완료.
[5244/9399] 'MBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5245/9399] 'MBSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5246/9399] 'MBSF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5247/9399] 'MBSX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5248/9399] 'MBUU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MBUU' 데이터 수집 완료.
[5249/9399] 'MBVIU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5250/9399] 'MBWM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MBWM' 데이터 수집 완료.
[5251/9399] 'MBX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5252/9399] 'MC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MC' 데이터 수집 완료.
[5253/9399] 'MCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCB' 데이터 수집 완료.
[5254/9399] 'MCBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCBS' 데이터 수집 완료.
[5255/9399] 'MCD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5256/9399] 'MCDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5257/9399] 'MCFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCFT' 데이터 수집 완료.
[5258/9399] 'MCGA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5259/9399] 'MCH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5260/9399] 'MCHB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5261/9399] 'MCHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5262/9399] 'MCHP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCHP' 데이터 수집 완료.
[5263/9399] 'MCHS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5264/9399] 'MCHX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCHX' 데이터 수집 완료.
[5265/9399] 'MCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCI' 데이터 수집 완료.
[5266/9399] 'MCK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5267/9399] 'MCN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCN' 데이터 수집 완료.
[5268/9399] 'MCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCO' 데이터 수집 완료.
[5269/9399] 'MCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCR' 데이터 수집 완료.
[5270/9399] 'MCRB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5271/9399] 'MCRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCRI' 데이터 수집 완료.
[5272/9399] 'MCRP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5273/9399] 'MCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCS' 데이터 수집 완료.
[5274/9399] 'MCSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5275/9399] 'MCTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5276/9399] 'MCW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCW' 데이터 수집 완료.
[5277/9399] 'MCY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MCY' 데이터 수집 완료.
[5278/9399] 'MD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MD' 데이터 수집 완료.
[5279/9399] 'MDAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5280/9399] 'MDB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDB' 데이터 수집 완료.
[5281/9399] 'MDBH' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5282/9399] 'MDCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5283/9399] 'MDGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDGL' 데이터 수집 완료.
[5284/9399] 'MDIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDIA' 데이터 수집 완료.
[5285/9399] 'MDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5286/9399] 'MDLZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDLZ' 데이터 수집 완료.
[5287/9399] 'MDRR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDRR' 데이터 수집 완료.
[5288/9399] 'MDST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5289/9399] 'MDT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDT' 데이터 수집 완료.
[5290/9399] 'MDU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDU' 데이터 수집 완료.
[5291/9399] 'MDV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDV' 데이터 수집 완료.
[5292/9399] 'MDWD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDWD' 데이터 수집 완료.
[5293/9399] 'MDXG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MDXG' 데이터 수집 완료.
[5294/9399] 'MDXH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5295/9399] 'MDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5296/9399] 'MDYG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5297/9399] 'MDYV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5298/9399] 'MEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MEC' 데이터 수집 완료.
[5299/9399] 'MED' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MED' 데이터 수집 완료.
[5300/9399] 'MEDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5301/9399] 'MEDP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MEDP' 데이터 수집 완료.
[5302/9399] 'MEDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5303/9399] 'MEG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MEG' 데이터 수집 완료.
[5304/9399] 'MEGI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5305/9399] 'MEGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MEGL' 데이터 수집 완료.
[5306/9399] 'MEI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MEI' 데이터 수집 완료.
[5307/9399] 'MELI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MELI' 데이터 수집 완료.
[5308/9399] 'MEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5309/9399] 'MEMS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5310/9399] 'MEMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5311/9399] 'MENS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5312/9399] 'MEOH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MEOH' 데이터 수집 완료.
[5313/9399] 'MERC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MERC' 데이터 수집 완료.
[5314/9399] 'MESA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MESA' 데이터 수집 완료.
[5315/9399] 'MESO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MESO' 데이터 수집 완료.
[5316/9399] 'MET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MET' 데이터 수집 완료.
[5317/9399] 'META' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'META' 데이터 수집 완료.
[5318/9399] 'METC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'METC' 데이터 수집 완료.
[5319/9399] 'METD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5320/9399] 'METL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5321/9399] 'METU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5322/9399] 'METV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5323/9399] 'MEXX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5324/9399] 'MFA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MFA' 데이터 수집 완료.
[5325/9399] 'MFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MFC' 데이터 수집 완료.
[5326/9399] 'MFDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5327/9399] 'MFEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5328/9399] 'MFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MFG' 데이터 수집 완료.
[5329/9399] 'MFH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MFH' 데이터 수집 완료.
[5330/9399] 'MFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5331/9399] 'MFIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MFIC' 데이터 수집 완료.
[5332/9399] 'MFIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MFIN' 데이터 수집 완료.
[5333/9399] 'MFLX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5334/9399] 'MFM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MFM' 데이터 수집 완료.
[5335/9399] 'MFSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5336/9399] 'MFSG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5337/9399] 'MFSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5338/9399] 'MFSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5339/9399] 'MFSV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5340/9399] 'MFUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5341/9399] 'MG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MG' 데이터 수집 완료.
[5342/9399] 'MGA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGA' 데이터 수집 완료.
[5343/9399] 'MGC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5344/9399] 'MGEE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGEE' 데이터 수집 완료.
[5345/9399] 'MGF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGF' 데이터 수집 완료.
[5346/9399] 'MGIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5347/9399] 'MGIH' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5348/9399] 'MGK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5349/9399] 'MGLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5350/9399] 'MGM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGM' 데이터 수집 완료.
[5351/9399] 'MGMT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5352/9399] 'MGN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5353/9399] 'MGNI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGNI' 데이터 수집 완료.
[5354/9399] 'MGNR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5355/9399] 'MGNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGNX' 데이터 수집 완료.
[5356/9399] 'MGOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5357/9399] 'MGPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGPI' 데이터 수집 완료.
[5358/9399] 'MGRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGRC' 데이터 수집 완료.
[5359/9399] 'MGRM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5360/9399] 'MGRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5361/9399] 'MGRX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5362/9399] 'MGTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGTX' 데이터 수집 완료.
[5363/9399] 'MGV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5364/9399] 'MGX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5365/9399] 'MGY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGY' 데이터 수집 완료.
[5366/9399] 'MGYR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MGYR' 데이터 수집 완료.
[5367/9399] 'MH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5368/9399] 'MHD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MHD' 데이터 수집 완료.
[5369/9399] 'MHF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MHF' 데이터 수집 완료.
[5370/9399] 'MHH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MHH' 데이터 수집 완료.
[5371/9399] 'MHK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MHK' 데이터 수집 완료.
[5372/9399] 'MHN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MHN' 데이터 수집 완료.
[5373/9399] 'MHO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MHO' 데이터 수집 완료.
[5374/9399] 'MHUA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MHUA' 데이터 수집 완료.
[5375/9399] 'MHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5376/9399] 'MI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MI' 데이터 수집 완료.
[5377/9399] 'MIAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5378/9399] 'MID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5379/9399] 'MIDD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MIDD' 데이터 수집 완료.
[5380/9399] 'MIDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5381/9399] 'MIDU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5382/9399] 'MIGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5383/9399] 'MILN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5384/9399] 'MIMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5385/9399] 'MIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MIN' 데이터 수집 완료.
[5386/9399] 'MIND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MIND' 데이터 수집 완료.
[5387/9399] 'MINO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5388/9399] 'MINT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5389/9399] 'MINV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5390/9399] 'MIR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MIR' 데이터 수집 완료.
[5391/9399] 'MIRA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5392/9399] 'MIRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MIRM' 데이터 수집 완료.
[5393/9399] 'MISL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5394/9399] 'MIST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MIST' 데이터 수집 완료.
[5395/9399] 'MITK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MITK' 데이터 수집 완료.
[5396/9399] 'MITQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MITQ' 데이터 수집 완료.
[5397/9399] 'MITT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MITT' 데이터 수집 완료.
[5398/9399] 'MIY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MIY' 데이터 수집 완료.
[5399/9399] 'MJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5400/9399] 'MJID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5401/9399] 'MJSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5402/9399] 'MKAM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5403/9399] 'MKC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MKC' 데이터 수집 완료.
[5404/9399] 'MKDW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5405/9399] 'MKL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MKL' 데이터 수집 완료.
[5406/9399] 'MKLYU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5407/9399] 'MKOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5408/9399] 'MKSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MKSI' 데이터 수집 완료.
[5409/9399] 'MKTW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5410/9399] 'MKTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MKTX' 데이터 수집 완료.
[5411/9399] 'MKZR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5412/9399] 'MLAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLAB' 데이터 수집 완료.
[5413/9399] 'MLAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5414/9399] 'MLCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLCI' 데이터 수집 완료.
[5415/9399] 'MLCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5416/9399] 'MLDR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5417/9399] 'MLEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5418/9399] 'MLGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLGO' 데이터 수집 완료.
[5419/9399] 'MLI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLI' 데이터 수집 완료.
[5420/9399] 'MLKN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5421/9399] 'MLM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLM' 데이터 수집 완료.
[5422/9399] 'MLNK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLNK' 데이터 수집 완료.
[5423/9399] 'MLP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLP' 데이터 수집 완료.
[5424/9399] 'MLPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5425/9399] 'MLPB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5426/9399] 'MLPD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5427/9399] 'MLPR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5428/9399] 'MLPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5429/9399] 'MLR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLR' 데이터 수집 완료.
[5430/9399] 'MLSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLSS' 데이터 수집 완료.
[5431/9399] 'MLTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MLTX' 데이터 수집 완료.
[5432/9399] 'MLYS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5433/9399] 'MMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5434/9399] 'MMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MMC' 데이터 수집 완료.
[5435/9399] 'MMCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5436/9399] 'MMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MMD' 데이터 수집 완료.
[5437/9399] 'MMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MMI' 데이터 수집 완료.
[5438/9399] 'MMID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5439/9399] 'MMIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5440/9399] 'MMIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5441/9399] 'MMKT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5442/9399] 'MMLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5443/9399] 'MMLP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5444/9399] 'MMM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MMM' 데이터 수집 완료.
[5445/9399] 'MMS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MMS' 데이터 수집 완료.
[5446/9399] 'MMSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5447/9399] 'MMSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5448/9399] 'MMSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MMSI' 데이터 수집 완료.
[5449/9399] 'MMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MMT' 데이터 수집 완료.
[5450/9399] 'MMTM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5451/9399] 'MMU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MMU' 데이터 수집 완료.
[5452/9399] 'MMYT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MMYT' 데이터 수집 완료.
[5453/9399] 'MNA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5454/9399] 'MNBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5455/9399] 'MNDO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNDO' 데이터 수집 완료.
[5456/9399] 'MNDR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5457/9399] 'MNDY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNDY' 데이터 수집 완료.
[5458/9399] 'MNKD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5459/9399] 'MNMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNMD' 데이터 수집 완료.
[5460/9399] 'MNOV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNOV' 데이터 수집 완료.
[5461/9399] 'MNPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNPR' 데이터 수집 완료.
[5462/9399] 'MNR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5463/9399] 'MNRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNRO' 데이터 수집 완료.
[5464/9399] 'MNRS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5465/9399] 'MNSB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNSB' 데이터 수집 완료.
[5466/9399] 'MNSO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNSO' 데이터 수집 완료.
[5467/9399] 'MNST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNST' 데이터 수집 완료.
[5468/9399] 'MNTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNTK' 데이터 수집 완료.
[5469/9399] 'MNTN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5470/9399] 'MNTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5471/9399] 'MNY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MNY' 데이터 수집 완료.
[5472/9399] 'MO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5473/9399] 'MOB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOB' 데이터 수집 완료.
[5474/9399] 'MOBX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOBX' 데이터 수집 완료.
[5475/9399] 'MOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOD' 데이터 수집 완료.
[5476/9399] 'MODD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MODD' 데이터 수집 완료.
[5477/9399] 'MODG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MODG' 데이터 수집 완료.
[5478/9399] 'MODL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5479/9399] 'MOFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOFG' 데이터 수집 완료.
[5480/9399] 'MOG-A' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOG-A' 데이터 수집 완료.
[5481/9399] 'MOGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOGO' 데이터 수집 완료.
[5482/9399] 'MOGU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOGU' 데이터 수집 완료.
[5483/9399] 'MOH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOH' 데이터 수집 완료.
[5484/9399] 'MOLN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOLN' 데이터 수집 완료.
[5485/9399] 'MOMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOMO' 데이터 수집 완료.
[5486/9399] 'MOO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5487/9399] 'MOOD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5488/9399] 'MORN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MORN' 데이터 수집 완료.
[5489/9399] 'MORT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5490/9399] 'MOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOS' 데이터 수집 완료.
[5491/9399] 'MOTO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5492/9399] 'MOV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MOV' 데이터 수집 완료.
[5493/9399] 'MOVE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5494/9399] 'MP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MP' 데이터 수집 완료.
[5495/9399] 'MPA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPA' 데이터 수집 완료.
[5496/9399] 'MPAA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPAA' 데이터 수집 완료.
[5497/9399] 'MPB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPB' 데이터 수집 완료.
[5498/9399] 'MPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPC' 데이터 수집 완료.
[5499/9399] 'MPLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPLX' 데이터 수집 완료.
[5500/9399] 'MPTI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5501/9399] 'MPU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPU' 데이터 수집 완료.
[5502/9399] 'MPV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPV' 데이터 수집 완료.
[5503/9399] 'MPW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPW' 데이터 수집 완료.
[5504/9399] 'MPWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPWR' 데이터 수집 완료.
[5505/9399] 'MPX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MPX' 데이터 수집 완료.
[5506/9399] 'MQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MQ' 데이터 수집 완료.
[5507/9399] 'MQQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5508/9399] 'MQT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MQT' 데이터 수집 완료.
[5509/9399] 'MQY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MQY' 데이터 수집 완료.
[5510/9399] 'MRAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5511/9399] 'MRAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRAM' 데이터 수집 완료.
[5512/9399] 'MRBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRBK' 데이터 수집 완료.
[5513/9399] 'MRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRC' 데이터 수집 완료.
[5514/9399] 'MRCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRCC' 데이터 수집 완료.
[5515/9399] 'MRCY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRCY' 데이터 수집 완료.
[5516/9399] 'MREO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MREO' 데이터 수집 완료.
[5517/9399] 'MRK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRK' 데이터 수집 완료.
[5518/9399] 'MRKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRKR' 데이터 수집 완료.
[5519/9399] 'MRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRM' 데이터 수집 완료.
[5520/9399] 'MRNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRNA' 데이터 수집 완료.
[5521/9399] 'MRNO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRNO' 데이터 수집 완료.
[5522/9399] 'MRNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5523/9399] 'MRP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5524/9399] 'MRSK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5525/9399] 'MRSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5526/9399] 'MRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5527/9399] 'MRTN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRTN' 데이터 수집 완료.
[5528/9399] 'MRUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRUS' 데이터 수집 완료.
[5529/9399] 'MRVI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRVI' 데이터 수집 완료.
[5530/9399] 'MRVL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MRVL' 데이터 수집 완료.
[5531/9399] 'MRX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5532/9399] 'MS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MS' 데이터 수집 완료.
[5533/9399] 'MSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSA' 데이터 수집 완료.
[5534/9399] 'MSAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSAI' 데이터 수집 완료.
[5535/9399] 'MSB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSB' 데이터 수집 완료.
[5536/9399] 'MSBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSBI' 데이터 수집 완료.
[5537/9399] 'MSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSC' 데이터 수집 완료.
[5538/9399] 'MSCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5539/9399] 'MSD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSD' 데이터 수집 완료.
[5540/9399] 'MSDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5541/9399] 'MSDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5542/9399] 'MSEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSEX' 데이터 수집 완료.
[5543/9399] 'MSFD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5544/9399] 'MSFL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5545/9399] 'MSFO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5546/9399] 'MSFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSFT' 데이터 수집 완료.
[5547/9399] 'MSFU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5548/9399] 'MSGE' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5549/9399] 'MSGM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSGM' 데이터 수집 완료.
[5550/9399] 'MSGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5551/9399] 'MSGY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5552/9399] 'MSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSI' 데이터 수집 완료.
[5553/9399] 'MSIF' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5554/9399] 'MSLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5555/9399] 'MSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSM' 데이터 수집 완료.
[5556/9399] 'MSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSN' 데이터 수집 완료.
[5557/9399] 'MSOS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5558/9399] 'MSOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5559/9399] 'MSPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSPR' 데이터 수집 완료.
[5560/9399] 'MSS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5561/9399] 'MSSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5562/9399] 'MST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5563/9399] 'MSTI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5564/9399] 'MSTP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5565/9399] 'MSTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MSTR' 데이터 수집 완료.
[5566/9399] 'MSTX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5567/9399] 'MSTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5568/9399] 'MSW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5569/9399] 'MT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MT' 데이터 수집 완료.
[5570/9399] 'MTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTA' 데이터 수집 완료.
[5571/9399] 'MTAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTAL' 데이터 수집 완료.
[5572/9399] 'MTB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTB' 데이터 수집 완료.
[5573/9399] 'MTBA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5574/9399] 'MTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTC' 데이터 수집 완료.
[5575/9399] 'MTCH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5576/9399] 'MTD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5577/9399] 'MTDR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTDR' 데이터 수집 완료.
[5578/9399] 'MTEK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTEK' 데이터 수집 완료.
[5579/9399] 'MTEN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5580/9399] 'MTEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTEX' 데이터 수집 완료.
[5581/9399] 'MTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTG' 데이터 수집 완료.
[5582/9399] 'MTGP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5583/9399] 'MTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTH' 데이터 수집 완료.
[5584/9399] 'MTLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTLS' 데이터 수집 완료.
[5585/9399] 'MTN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTN' 데이터 수집 완료.
[5586/9399] 'MTNB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTNB' 데이터 수집 완료.
[5587/9399] 'MTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTR' 데이터 수집 완료.
[5588/9399] 'MTRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTRN' 데이터 수집 완료.
[5589/9399] 'MTRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTRX' 데이터 수집 완료.
[5590/9399] 'MTSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTSI' 데이터 수집 완료.
[5591/9399] 'MTSR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5592/9399] 'MTUL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5593/9399] 'MTUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTUS' 데이터 수집 완료.
[5594/9399] 'MTVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTVA' 데이터 수집 완료.
[5595/9399] 'MTW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTW' 데이터 수집 완료.
[5596/9399] 'MTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTX' 데이터 수집 완료.
[5597/9399] 'MTYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5598/9399] 'MTZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MTZ' 데이터 수집 완료.
[5599/9399] 'MU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MU' 데이터 수집 완료.
[5600/9399] 'MUA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MUA' 데이터 수집 완료.
[5601/9399] 'MUB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5602/9399] 'MUC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MUC' 데이터 수집 완료.
[5603/9399] 'MUD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5604/9399] 'MUE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MUE' 데이터 수집 완료.
[5605/9399] 'MUFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MUFG' 데이터 수집 완료.
[5606/9399] 'MUJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MUJ' 데이터 수집 완료.
[5607/9399] 'MULL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5608/9399] 'MULT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5609/9399] 'MUNA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5610/9399] 'MUNB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5611/9399] 'MUNC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5612/9399] 'MUND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5613/9399] 'MUNI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5614/9399] 'MUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MUR' 데이터 수집 완료.
[5615/9399] 'MURA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5616/9399] 'MUSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MUSA' 데이터 수집 완료.
[5617/9399] 'MUSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5618/9399] 'MUSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5619/9399] 'MUSQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5620/9399] 'MUST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5621/9399] 'MUU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5622/9399] 'MUX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MUX' 데이터 수집 완료.
[5623/9399] 'MVBF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MVBF' 데이터 수집 완료.
[5624/9399] 'MVF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MVF' 데이터 수집 완료.
[5625/9399] 'MVIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MVIS' 데이터 수집 완료.
[5626/9399] 'MVLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5627/9399] 'MVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MVO' 데이터 수집 완료.
[5628/9399] 'MVPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5629/9399] 'MVPL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5630/9399] 'MVRL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5631/9399] 'MVST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MVST' 데이터 수집 완료.
[5632/9399] 'MVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MVT' 데이터 수집 완료.
[5633/9399] 'MVV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5634/9399] 'MWA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MWA' 데이터 수집 완료.
[5635/9399] 'MWG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5636/9399] 'MWYN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5637/9399] 'MX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MX' 데이터 수집 완료.
[5638/9399] 'MXC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MXC' 데이터 수집 완료.
[5639/9399] 'MXCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MXCT' 데이터 수집 완료.
[5640/9399] 'MXE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MXE' 데이터 수집 완료.
[5641/9399] 'MXF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5642/9399] 'MXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5643/9399] 'MXL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MXL' 데이터 수집 완료.
[5644/9399] 'MYCF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5645/9399] 'MYCG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5646/9399] 'MYCH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5647/9399] 'MYCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5648/9399] 'MYCJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5649/9399] 'MYCK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5650/9399] 'MYCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5651/9399] 'MYCM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5652/9399] 'MYCN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5653/9399] 'MYCO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5654/9399] 'MYD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5655/9399] 'MYE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYE' 데이터 수집 완료.
[5656/9399] 'MYFW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYFW' 데이터 수집 완료.
[5657/9399] 'MYGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYGN' 데이터 수집 완료.
[5658/9399] 'MYI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYI' 데이터 수집 완료.
[5659/9399] 'MYMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5660/9399] 'MYMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5661/9399] 'MYMH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5662/9399] 'MYMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5663/9399] 'MYMJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5664/9399] 'MYMK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5665/9399] 'MYN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYN' 데이터 수집 완료.
[5666/9399] 'MYND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5667/9399] 'MYNZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYNZ' 데이터 수집 완료.
[5668/9399] 'MYO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYO' 데이터 수집 완료.
[5669/9399] 'MYPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYPS' 데이터 수집 완료.
[5670/9399] 'MYRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYRG' 데이터 수집 완료.
[5671/9399] 'MYSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYSE' 데이터 수집 완료.
[5672/9399] 'MYSZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MYSZ' 데이터 수집 완료.
[5673/9399] 'MYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5674/9399] 'MZTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'MZTI' 데이터 수집 완료.
[5675/9399] 'MZZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5676/9399] 'nan' 처리 중...
  -> 'nan' 처리 중 오류 발생: 'float' object has no attribute 'upper'
[5677/9399] 'NAAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5678/9399] 'NABL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NABL' 데이터 수집 완료.
[5679/9399] 'NAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAC' 데이터 수집 완료.
[5680/9399] 'NACP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5681/9399] 'NAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAD' 데이터 수집 완료.
[5682/9399] 'NAGE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAGE' 데이터 수집 완료.
[5683/9399] 'NAII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5684/9399] 'NAIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5685/9399] 'NAK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAK' 데이터 수집 완료.
[5686/9399] 'NAKA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5687/9399] 'NAMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5688/9399] 'NAMM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5689/9399] 'NAMS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAMS' 데이터 수집 완료.
[5690/9399] 'NAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAN' 데이터 수집 완료.
[5691/9399] 'NANR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5692/9399] 'NAOV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAOV' 데이터 수집 완료.
[5693/9399] 'NAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAT' 데이터 수집 완료.
[5694/9399] 'NATH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5695/9399] 'NATL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5696/9399] 'NATO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5697/9399] 'NATR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NATR' 데이터 수집 완료.
[5698/9399] 'NAUT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAUT' 데이터 수집 완료.
[5699/9399] 'NAVI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NAVI' 데이터 수집 완료.
[5700/9399] 'NAZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5701/9399] 'NB' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5702/9399] 'NBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5703/9399] 'NBBK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5704/9399] 'NBCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5705/9399] 'NBCM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5706/9399] 'NBCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5707/9399] 'NBDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5708/9399] 'NBET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5709/9399] 'NBFC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5710/9399] 'NBGX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5711/9399] 'NBH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NBH' 데이터 수집 완료.
[5712/9399] 'NBHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NBHC' 데이터 수집 완료.
[5713/9399] 'NBIS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5714/9399] 'NBIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NBIX' 데이터 수집 완료.
[5715/9399] 'NBJP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5716/9399] 'NBN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NBN' 데이터 수집 완료.
[5717/9399] 'NBOS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5718/9399] 'NBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NBR' 데이터 수집 완료.
[5719/9399] 'NBSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5720/9399] 'NBSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5721/9399] 'NBTB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NBTB' 데이터 수집 완료.
[5722/9399] 'NBTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5723/9399] 'NBTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5724/9399] 'NBXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5725/9399] 'NBY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NBY' 데이터 수집 완료.
[5726/9399] 'NC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NC' 데이터 수집 완료.
[5727/9399] 'NCA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCA' 데이터 수집 완료.
[5728/9399] 'NCDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5729/9399] 'NCEW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5730/9399] 'NCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5731/9399] 'NCIQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5732/9399] 'NCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5733/9399] 'NCLH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCLH' 데이터 수집 완료.
[5734/9399] 'NCLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5735/9399] 'NCMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCMI' 데이터 수집 완료.
[5736/9399] 'NCNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCNA' 데이터 수집 완료.
[5737/9399] 'NCNO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCNO' 데이터 수집 완료.
[5738/9399] 'NCPB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5739/9399] 'NCPL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5740/9399] 'NCRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCRA' 데이터 수집 완료.
[5741/9399] 'NCSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCSM' 데이터 수집 완료.
[5742/9399] 'NCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5743/9399] 'NCTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCTY' 데이터 수집 완료.
[5744/9399] 'NCV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCV' 데이터 수집 완료.
[5745/9399] 'NCZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NCZ' 데이터 수집 완료.
[5746/9399] 'NDAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5747/9399] 'NDAQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NDAQ' 데이터 수집 완료.
[5748/9399] 'NDIA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5749/9399] 'NDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5750/9399] 'NDLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5751/9399] 'NDMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5752/9399] 'NDRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NDRA' 데이터 수집 완료.
[5753/9399] 'NDSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NDSN' 데이터 수집 완료.
[5754/9399] 'NDVG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5755/9399] 'NE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NE' 데이터 수집 완료.
[5756/9399] 'NEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEA' 데이터 수집 완료.
[5757/9399] 'NECB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NECB' 데이터 수집 완료.
[5758/9399] 'NEE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEE' 데이터 수집 완료.
[5759/9399] 'NEGG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEGG' 데이터 수집 완료.
[5760/9399] 'NEM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEM' 데이터 수집 완료.
[5761/9399] 'NEMD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5762/9399] 'NEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5763/9399] 'NEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEO' 데이터 수집 완료.
[5764/9399] 'NEOG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEOG' 데이터 수집 완료.
[5765/9399] 'NEON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEON' 데이터 수집 완료.
[5766/9399] 'NEOV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEOV' 데이터 수집 완료.
[5767/9399] 'NEPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEPH' 데이터 수집 완료.
[5768/9399] 'NERD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5769/9399] 'NERV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5770/9399] 'NESR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5771/9399] 'NET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NET' 데이터 수집 완료.
[5772/9399] 'NETD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5773/9399] 'NETL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5774/9399] 'NEU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEU' 데이터 수집 완료.
[5775/9399] 'NEUE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5776/9399] 'NEUP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5777/9399] 'NEWP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEWP' 데이터 수집 완료.
[5778/9399] 'NEWT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEWT' 데이터 수집 완료.
[5779/9399] 'NEWZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5780/9399] 'NEXA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEXA' 데이터 수집 완료.
[5781/9399] 'NEXM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEXM' 데이터 수집 완료.
[5782/9399] 'NEXN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEXN' 데이터 수집 완료.
[5783/9399] 'NEXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NEXT' 데이터 수집 완료.
[5784/9399] 'NFBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NFBK' 데이터 수집 완료.
[5785/9399] 'NFE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NFE' 데이터 수집 완료.
[5786/9399] 'NFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NFG' 데이터 수집 완료.
[5787/9399] 'NFGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NFGC' 데이터 수집 완료.
[5788/9399] 'NFJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NFJ' 데이터 수집 완료.
[5789/9399] 'NFLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5790/9399] 'NFLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NFLX' 데이터 수집 완료.
[5791/9399] 'NFLY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5792/9399] 'NFRA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5793/9399] 'NFTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5794/9399] 'NFXL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5795/9399] 'NFXS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5796/9399] 'NG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NG' 데이터 수집 완료.
[5797/9399] 'NGD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NGD' 데이터 수집 완료.
[5798/9399] 'NGG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NGG' 데이터 수집 완료.
[5799/9399] 'NGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NGL' 데이터 수집 완료.
[5800/9399] 'NGNE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5801/9399] 'NGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NGS' 데이터 수집 완료.
[5802/9399] 'NGVC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NGVC' 데이터 수집 완료.
[5803/9399] 'NGVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NGVT' 데이터 수집 완료.
[5804/9399] 'NHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NHC' 데이터 수집 완료.
[5805/9399] 'NHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NHI' 데이터 수집 완료.
[5806/9399] 'NHIC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5807/9399] 'NHS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NHS' 데이터 수집 완료.
[5808/9399] 'NHTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NHTC' 데이터 수집 완료.
[5809/9399] 'NHYB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5810/9399] 'NHYM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5811/9399] 'NI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NI' 데이터 수집 완료.
[5812/9399] 'NIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NIC' 데이터 수집 완료.
[5813/9399] 'NICE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NICE' 데이터 수집 완료.
[5814/9399] 'NIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5815/9399] 'NIKL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5816/9399] 'NIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NIM' 데이터 수집 완료.
[5817/9399] 'NINE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5818/9399] 'NIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NIO' 데이터 수집 완료.
[5819/9399] 'NIPG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5820/9399] 'NIQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5821/9399] 'NISN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NISN' 데이터 수집 완료.
[5822/9399] 'NITE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5823/9399] 'NITO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NITO' 데이터 수집 완료.
[5824/9399] 'NIU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NIU' 데이터 수집 완료.
[5825/9399] 'NIVF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NIVF' 데이터 수집 완료.
[5826/9399] 'NIXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5827/9399] 'NIXX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NIXX' 데이터 수집 완료.
[5828/9399] 'NJNK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5829/9399] 'NJR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NJR' 데이터 수집 완료.
[5830/9399] 'NKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NKE' 데이터 수집 완료.
[5831/9399] 'NKSH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NKSH' 데이터 수집 완료.
[5832/9399] 'NKTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NKTR' 데이터 수집 완료.
[5833/9399] 'NKTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NKTX' 데이터 수집 완료.
[5834/9399] 'NKX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5835/9399] 'NL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NL' 데이터 수집 완료.
[5836/9399] 'NLOP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5837/9399] 'NLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5838/9399] 'NLSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5839/9399] 'NLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NLY' 데이터 수집 완료.
[5840/9399] 'NMAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5841/9399] 'NMAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5842/9399] 'NMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5843/9399] 'NMCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMCO' 데이터 수집 완료.
[5844/9399] 'NMFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMFC' 데이터 수집 완료.
[5845/9399] 'NMG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMG' 데이터 수집 완료.
[5846/9399] 'NMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMI' 데이터 수집 완료.
[5847/9399] 'NMIH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMIH' 데이터 수집 완료.
[5848/9399] 'NML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5849/9399] 'NMM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMM' 데이터 수집 완료.
[5850/9399] 'NMP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5851/9399] 'NMPAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5852/9399] 'NMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMR' 데이터 수집 완료.
[5853/9399] 'NMRA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5854/9399] 'NMRK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMRK' 데이터 수집 완료.
[5855/9399] 'NMS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5856/9399] 'NMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMT' 데이터 수집 완료.
[5857/9399] 'NMTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMTC' 데이터 수집 완료.
[5858/9399] 'NMZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NMZ' 데이터 수집 완료.
[5859/9399] 'NN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NN' 데이터 수집 완료.
[5860/9399] 'NNBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NNBR' 데이터 수집 완료.
[5861/9399] 'NNDM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NNDM' 데이터 수집 완료.
[5862/9399] 'NNE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5863/9399] 'NNI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NNI' 데이터 수집 완료.
[5864/9399] 'NNN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NNN' 데이터 수집 완료.
[5865/9399] 'NNNN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5866/9399] 'NNOX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NNOX' 데이터 수집 완료.
[5867/9399] 'NNVC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NNVC' 데이터 수집 완료.
[5868/9399] 'NNY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NNY' 데이터 수집 완료.
[5869/9399] 'NOA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOA' 데이터 수집 완료.
[5870/9399] 'NOAH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOAH' 데이터 수집 완료.
[5871/9399] 'NOC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOC' 데이터 수집 완료.
[5872/9399] 'NODK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NODK' 데이터 수집 완료.
[5873/9399] 'NOEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5874/9399] 'NOG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOG' 데이터 수집 완료.
[5875/9399] 'NOK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOK' 데이터 수집 완료.
[5876/9399] 'NOM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOM' 데이터 수집 완료.
[5877/9399] 'NOMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOMD' 데이터 수집 완료.
[5878/9399] 'NORW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5879/9399] 'NOTE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOTE' 데이터 수집 완료.
[5880/9399] 'NOTV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOTV' 데이터 수집 완료.
[5881/9399] 'NOV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOV' 데이터 수집 완료.
[5882/9399] 'NOVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOVT' 데이터 수집 완료.
[5883/9399] 'NOW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NOW' 데이터 수집 완료.
[5884/9399] 'NOWL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5885/9399] 'NPAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5886/9399] 'NPB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5887/9399] 'NPCE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NPCE' 데이터 수집 완료.
[5888/9399] 'NPCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5889/9399] 'NPFD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5890/9399] 'NPFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5891/9399] 'NPK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NPK' 데이터 수집 완료.
[5892/9399] 'NPKI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NPKI' 데이터 수집 완료.
[5893/9399] 'NPO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NPO' 데이터 수집 완료.
[5894/9399] 'NPV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5895/9399] 'NPWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NPWR' 데이터 수집 완료.
[5896/9399] 'NQP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5897/9399] 'NRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRC' 데이터 수집 완료.
[5898/9399] 'NRDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRDS' 데이터 수집 완료.
[5899/9399] 'NRDY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRDY' 데이터 수집 완료.
[5900/9399] 'NREF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NREF' 데이터 수집 완료.
[5901/9399] 'NRES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5902/9399] 'NRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRG' 데이터 수집 완료.
[5903/9399] 'NRGD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5904/9399] 'NRGU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5905/9399] 'NRGV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRGV' 데이터 수집 완료.
[5906/9399] 'NRIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRIM' 데이터 수집 완료.
[5907/9399] 'NRIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRIX' 데이터 수집 완료.
[5908/9399] 'NRK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRK' 데이터 수집 완료.
[5909/9399] 'NRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRO' 데이터 수집 완료.
[5910/9399] 'NRP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRP' 데이터 수집 완료.
[5911/9399] 'NRSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5912/9399] 'NRSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5913/9399] 'NRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NRT' 데이터 수집 완료.
[5914/9399] 'NRXP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5915/9399] 'NRXS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5916/9399] 'NSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NSA' 데이터 수집 완료.
[5917/9399] 'NSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NSC' 데이터 수집 완료.
[5918/9399] 'NSCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5919/9399] 'NSCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5920/9399] 'NSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5921/9399] 'NSIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NSIT' 데이터 수집 완료.
[5922/9399] 'NSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NSP' 데이터 수집 완료.
[5923/9399] 'NSPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NSPR' 데이터 수집 완료.
[5924/9399] 'NSRX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5925/9399] 'NSSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NSSC' 데이터 수집 완료.
[5926/9399] 'NSTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NSTS' 데이터 수집 완료.
[5927/9399] 'NSYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NSYS' 데이터 수집 완료.
[5928/9399] 'NTAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTAP' 데이터 수집 완료.
[5929/9399] 'NTB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTB' 데이터 수집 완료.
[5930/9399] 'NTCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5931/9399] 'NTCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTCT' 데이터 수집 완료.
[5932/9399] 'NTES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTES' 데이터 수집 완료.
[5933/9399] 'NTGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTGR' 데이터 수집 완료.
[5934/9399] 'NTHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5935/9399] 'NTIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTIC' 데이터 수집 완료.
[5936/9399] 'NTIP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTIP' 데이터 수집 완료.
[5937/9399] 'NTLA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTLA' 데이터 수집 완료.
[5938/9399] 'NTNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5939/9399] 'NTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTR' 데이터 수집 완료.
[5940/9399] 'NTRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTRA' 데이터 수집 완료.
[5941/9399] 'NTRB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTRB' 데이터 수집 완료.
[5942/9399] 'NTRP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5943/9399] 'NTRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTRS' 데이터 수집 완료.
[5944/9399] 'NTSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5945/9399] 'NTSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5946/9399] 'NTSK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5947/9399] 'NTST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTST' 데이터 수집 완료.
[5948/9399] 'NTSX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5949/9399] 'NTWK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTWK' 데이터 수집 완료.
[5950/9399] 'NTWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5951/9399] 'NTZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NTZ' 데이터 수집 완료.
[5952/9399] 'NU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NU' 데이터 수집 완료.
[5953/9399] 'NUAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5954/9399] 'NUAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5955/9399] 'NUBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5956/9399] 'NUE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NUE' 데이터 수집 완료.
[5957/9399] 'NUGO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5958/9399] 'NUGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5959/9399] 'NUHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5960/9399] 'NUKK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5961/9399] 'NUKZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5962/9399] 'NUMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5963/9399] 'NUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NUS' 데이터 수집 완료.
[5964/9399] 'NUSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5965/9399] 'NUSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5966/9399] 'NUTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5967/9399] 'NUTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NUTX' 데이터 수집 완료.
[5968/9399] 'NUV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NUV' 데이터 수집 완료.
[5969/9399] 'NUVB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NUVB' 데이터 수집 완료.
[5970/9399] 'NUVL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NUVL' 데이터 수집 완료.
[5971/9399] 'NUW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5972/9399] 'NUWE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5973/9399] 'NVA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[5974/9399] 'NVAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[5975/9399] 'NVBT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5976/9399] 'NVBW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5977/9399] 'NVCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVCR' 데이터 수집 완료.
[5978/9399] 'NVCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVCT' 데이터 수집 완료.
[5979/9399] 'NVD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5980/9399] 'NVDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVDA' 데이터 수집 완료.
[5981/9399] 'NVDB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5982/9399] 'NVDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5983/9399] 'NVDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5984/9399] 'NVDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5985/9399] 'NVDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5986/9399] 'NVDU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5987/9399] 'NVDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5988/9399] 'NVEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVEC' 데이터 수집 완료.
[5989/9399] 'NVFY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVFY' 데이터 수집 완료.
[5990/9399] 'NVG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVG' 데이터 수집 완료.
[5991/9399] 'NVGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVGS' 데이터 수집 완료.
[5992/9399] 'NVIR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5993/9399] 'NVMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVMI' 데이터 수집 완료.
[5994/9399] 'NVNI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5995/9399] 'NVNO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVNO' 데이터 수집 완료.
[5996/9399] 'NVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVO' 데이터 수집 완료.
[5997/9399] 'NVOH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5998/9399] 'NVOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[5999/9399] 'NVR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVR' 데이터 수집 완료.
[6000/9399] 'NVRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVRI' 데이터 수집 완료.
[6001/9399] 'NVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVS' 데이터 수집 완료.
[6002/9399] 'NVST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVST' 데이터 수집 완료.
[6003/9399] 'NVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVT' 데이터 수집 완료.
[6004/9399] 'NVTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVTS' 데이터 수집 완료.
[6005/9399] 'NVVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6006/9399] 'NVX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NVX' 데이터 수집 완료.
[6007/9399] 'NVYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6008/9399] 'NWBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NWBI' 데이터 수집 완료.
[6009/9399] 'NWE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NWE' 데이터 수집 완료.
[6010/9399] 'NWFL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NWFL' 데이터 수집 완료.
[6011/9399] 'NWG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NWG' 데이터 수집 완료.
[6012/9399] 'NWGL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6013/9399] 'NWL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NWL' 데이터 수집 완료.
[6014/9399] 'NWLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6015/9399] 'NWN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NWN' 데이터 수집 완료.
[6016/9399] 'NWPX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NWPX' 데이터 수집 완료.
[6017/9399] 'NWS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NWS' 데이터 수집 완료.
[6018/9399] 'NWSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NWSA' 데이터 수집 완료.
[6019/9399] 'NWTG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6020/9399] 'NX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NX' 데이터 수집 완료.
[6021/9399] 'NXC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXC' 데이터 수집 완료.
[6022/9399] 'NXDR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXDR' 데이터 수집 완료.
[6023/9399] 'NXDT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXDT' 데이터 수집 완료.
[6024/9399] 'NXE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXE' 데이터 수집 완료.
[6025/9399] 'NXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6026/9399] 'NXGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXGL' 데이터 수집 완료.
[6027/9399] 'NXJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXJ' 데이터 수집 완료.
[6028/9399] 'NXL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXL' 데이터 수집 완료.
[6029/9399] 'NXN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6030/9399] 'NXP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXP' 데이터 수집 완료.
[6031/9399] 'NXPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXPI' 데이터 수집 완료.
[6032/9399] 'NXPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXPL' 데이터 수집 완료.
[6033/9399] 'NXRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXRT' 데이터 수집 완료.
[6034/9399] 'NXST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXST' 데이터 수집 완료.
[6035/9399] 'NXT' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6036/9399] 'NXTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXTC' 데이터 수집 완료.
[6037/9399] 'NXTE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6038/9399] 'NXTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6039/9399] 'NXTT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NXTT' 데이터 수집 완료.
[6040/9399] 'NXUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6041/9399] 'NXXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6042/9399] 'NYAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NYAX' 데이터 수집 완료.
[6043/9399] 'NYC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NYC' 데이터 수집 완료.
[6044/9399] 'NYF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6045/9399] 'NYT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NYT' 데이터 수집 완료.
[6046/9399] 'NYXH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NYXH' 데이터 수집 완료.
[6047/9399] 'NZAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6048/9399] 'NZF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'NZF' 데이터 수집 완료.
[6049/9399] 'NZUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6050/9399] 'O' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'O' 데이터 수집 완료.
[6051/9399] 'OABI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OABI' 데이터 수집 완료.
[6052/9399] 'OACC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6053/9399] 'OACP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6054/9399] 'OAEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6055/9399] 'OAIM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6056/9399] 'OAKM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6057/9399] 'OAKU' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6058/9399] 'OALC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6059/9399] 'OARK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6060/9399] 'OASC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6061/9399] 'OBA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6062/9399] 'OBDC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OBDC' 데이터 수집 완료.
[6063/9399] 'OBE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OBE' 데이터 수집 완료.
[6064/9399] 'OBIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6065/9399] 'OBIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OBIO' 데이터 수집 완료.
[6066/9399] 'OBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OBK' 데이터 수집 완료.
[6067/9399] 'OBLG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OBLG' 데이터 수집 완료.
[6068/9399] 'OBOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6069/9399] 'OBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OBT' 데이터 수집 완료.
[6070/9399] 'OC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OC' 데이터 수집 완료.
[6071/9399] 'OCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OCC' 데이터 수집 완료.
[6072/9399] 'OCCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OCCI' 데이터 수집 완료.
[6073/9399] 'OCFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OCFC' 데이터 수집 완료.
[6074/9399] 'OCFS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6075/9399] 'OCFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OCFT' 데이터 수집 완료.
[6076/9399] 'OCG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OCG' 데이터 수집 완료.
[6077/9399] 'OCGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OCGN' 데이터 수집 완료.
[6078/9399] 'OCIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6079/9399] 'OCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OCS' 데이터 수집 완료.
[6080/9399] 'OCSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OCSL' 데이터 수집 완료.
[6081/9399] 'OCTT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6082/9399] 'OCTW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6083/9399] 'OCUL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OCUL' 데이터 수집 완료.
[6084/9399] 'ODC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ODC' 데이터 수집 완료.
[6085/9399] 'ODD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6086/9399] 'ODDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6087/9399] 'ODFL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ODFL' 데이터 수집 완료.
[6088/9399] 'ODHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6089/9399] 'ODP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ODP' 데이터 수집 완료.
[6090/9399] 'ODV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ODV' 데이터 수집 완료.
[6091/9399] 'ODYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ODYS' 데이터 수집 완료.
[6092/9399] 'OEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OEC' 데이터 수집 완료.
[6093/9399] 'OEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6094/9399] 'OESX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OESX' 데이터 수집 완료.
[6095/9399] 'OFAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6096/9399] 'OFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OFG' 데이터 수집 완료.
[6097/9399] 'OFIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OFIX' 데이터 수집 완료.
[6098/9399] 'OFLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OFLX' 데이터 수집 완료.
[6099/9399] 'OFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OFS' 데이터 수집 완료.
[6100/9399] 'OGE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OGE' 데이터 수집 완료.
[6101/9399] 'OGEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6102/9399] 'OGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6103/9399] 'OGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OGN' 데이터 수집 완료.
[6104/9399] 'OGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OGS' 데이터 수집 완료.
[6105/9399] 'OGSP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6106/9399] 'OHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OHI' 데이터 수집 완료.
[6107/9399] 'OI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OI' 데이터 수집 완료.
[6108/9399] 'OIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OIA' 데이터 수집 완료.
[6109/9399] 'OIH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6110/9399] 'OII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OII' 데이터 수집 완료.
[6111/9399] 'OILD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6112/9399] 'OILT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6113/9399] 'OILU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6114/9399] 'OIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OIS' 데이터 수집 완료.
[6115/9399] 'OKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OKE' 데이터 수집 완료.
[6116/9399] 'OKLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6117/9399] 'OKLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OKLO' 데이터 수집 완료.
[6118/9399] 'OKTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OKTA' 데이터 수집 완료.
[6119/9399] 'OKUR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6120/9399] 'OKYO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6121/9399] 'OLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OLB' 데이터 수집 완료.
[6122/9399] 'OLED' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OLED' 데이터 수집 완료.
[6123/9399] 'OLLI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OLLI' 데이터 수집 완료.
[6124/9399] 'OLMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OLMA' 데이터 수집 완료.
[6125/9399] 'OLN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OLN' 데이터 수집 완료.
[6126/9399] 'OLO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6127/9399] 'OLP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OLP' 데이터 수집 완료.
[6128/9399] 'OLPX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OLPX' 데이터 수집 완료.
[6129/9399] 'OM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OM' 데이터 수집 완료.
[6130/9399] 'OMAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OMAB' 데이터 수집 완료.
[6131/9399] 'OMAH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6132/9399] 'OMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OMC' 데이터 수집 완료.
[6133/9399] 'OMCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OMCC' 데이터 수집 완료.
[6134/9399] 'OMCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OMCL' 데이터 수집 완료.
[6135/9399] 'OMDA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6136/9399] 'OMER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6137/9399] 'OMEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6138/9399] 'OMF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OMF' 데이터 수집 완료.
[6139/9399] 'OMH' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6140/9399] 'OMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OMI' 데이터 수집 완료.
[6141/9399] 'OMSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6142/9399] 'ON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ON' 데이터 수집 완료.
[6143/9399] 'ONB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONB' 데이터 수집 완료.
[6144/9399] 'ONC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONC' 데이터 수집 완료.
[6145/9399] 'ONCH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6146/9399] 'ONCHU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6147/9399] 'ONCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6148/9399] 'ONCY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONCY' 데이터 수집 완료.
[6149/9399] 'OND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6150/9399] 'ONDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONDS' 데이터 수집 완료.
[6151/9399] 'ONEG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6152/9399] 'ONEO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6153/9399] 'ONEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6154/9399] 'ONEV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6155/9399] 'ONEW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONEW' 데이터 수집 완료.
[6156/9399] 'ONEY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6157/9399] 'ONFO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONFO' 데이터 수집 완료.
[6158/9399] 'ONIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONIT' 데이터 수집 완료.
[6159/9399] 'ONL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONL' 데이터 수집 완료.
[6160/9399] 'ONLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6161/9399] 'ONMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6162/9399] 'ONOF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6163/9399] 'ONON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONON' 데이터 수집 완료.
[6164/9399] 'ONTF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONTF' 데이터 수집 완료.
[6165/9399] 'ONTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ONTO' 데이터 수집 완료.
[6166/9399] 'OOMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OOMA' 데이터 수집 완료.
[6167/9399] 'OOQB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6168/9399] 'OOSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6169/9399] 'OOSP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6170/9399] 'OP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OP' 데이터 수집 완료.
[6171/9399] 'OPAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPAD' 데이터 수집 완료.
[6172/9399] 'OPAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPAL' 데이터 수집 완료.
[6173/9399] 'OPBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPBK' 데이터 수집 완료.
[6174/9399] 'OPCH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPCH' 데이터 수집 완료.
[6175/9399] 'OPEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPEN' 데이터 수집 완료.
[6176/9399] 'OPER' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6177/9399] 'OPFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPFI' 데이터 수집 완료.
[6178/9399] 'OPHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPHC' 데이터 수집 완료.
[6179/9399] 'OPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPI' 데이터 수집 완료.
[6180/9399] 'OPK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPK' 데이터 수집 완료.
[6181/9399] 'OPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6182/9399] 'OPPE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6183/9399] 'OPPJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6184/9399] 'OPRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPRA' 데이터 수집 완료.
[6185/9399] 'OPRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPRT' 데이터 수집 완료.
[6186/9399] 'OPRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPRX' 데이터 수집 완료.
[6187/9399] 'OPTT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPTT' 데이터 수집 완료.
[6188/9399] 'OPTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPTX' 데이터 수집 완료.
[6189/9399] 'OPTZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6190/9399] 'OPXS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPXS' 데이터 수집 완료.
[6191/9399] 'OPY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OPY' 데이터 수집 완료.
[6192/9399] 'OR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OR' 데이터 수집 완료.
[6193/9399] 'ORA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORA' 데이터 수집 완료.
[6194/9399] 'ORBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORBS' 데이터 수집 완료.
[6195/9399] 'ORC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORC' 데이터 수집 완료.
[6196/9399] 'ORCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORCL' 데이터 수집 완료.
[6197/9399] 'ORCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6198/9399] 'ORGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORGN' 데이터 수집 완료.
[6199/9399] 'ORGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORGO' 데이터 수집 완료.
[6200/9399] 'ORI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORI' 데이터 수집 완료.
[6201/9399] 'ORIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORIC' 데이터 수집 완료.
[6202/9399] 'ORIQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6203/9399] 'ORIQU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6204/9399] 'ORIS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6205/9399] 'ORKA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6206/9399] 'ORKT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6207/9399] 'ORLA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORLA' 데이터 수집 완료.
[6208/9399] 'ORLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6209/9399] 'ORMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORMP' 데이터 수집 완료.
[6210/9399] 'ORN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORN' 데이터 수집 완료.
[6211/9399] 'ORR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6212/9399] 'ORRF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ORRF' 데이터 수집 완료.
[6213/9399] 'OS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6214/9399] 'OSBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OSBC' 데이터 수집 완료.
[6215/9399] 'OSCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OSCR' 데이터 수집 완료.
[6216/9399] 'OSEA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6217/9399] 'OSIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OSIS' 데이터 수집 완료.
[6218/9399] 'OSK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OSK' 데이터 수집 완료.
[6219/9399] 'OSPN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OSPN' 데이터 수집 완료.
[6220/9399] 'OSRH' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6221/9399] 'OSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OSS' 데이터 수집 완료.
[6222/9399] 'OST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OST' 데이터 수집 완료.
[6223/9399] 'OSTX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6224/9399] 'OSUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OSUR' 데이터 수집 완료.
[6225/9399] 'OSW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OSW' 데이터 수집 완료.
[6226/9399] 'OTEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OTEX' 데이터 수집 완료.
[6227/9399] 'OTF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6228/9399] 'OTGAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6229/9399] 'OTGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6230/9399] 'OTIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6231/9399] 'OTLK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6232/9399] 'OTLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OTLY' 데이터 수집 완료.
[6233/9399] 'OTTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OTTR' 데이터 수집 완료.
[6234/9399] 'OUNZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6235/9399] 'OUST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OUST' 데이터 수집 완료.
[6236/9399] 'OUT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OUT' 데이터 수집 완료.
[6237/9399] 'OVBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OVBC' 데이터 수집 완료.
[6238/9399] 'OVID' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OVID' 데이터 수집 완료.
[6239/9399] 'OVLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OVLY' 데이터 수집 완료.
[6240/9399] 'OVV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OVV' 데이터 수집 완료.
[6241/9399] 'OWL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OWL' 데이터 수집 완료.
[6242/9399] 'OWLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6243/9399] 'OWNB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6244/9399] 'OWNS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6245/9399] 'OXBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OXBR' 데이터 수집 완료.
[6246/9399] 'OXLC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OXLC' 데이터 수집 완료.
[6247/9399] 'OXM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OXM' 데이터 수집 완료.
[6248/9399] 'OXSQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OXSQ' 데이터 수집 완료.
[6249/9399] 'OXY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OXY' 데이터 수집 완료.
[6250/9399] 'OYSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6251/9399] 'OZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OZ' 데이터 수집 완료.
[6252/9399] 'OZEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6253/9399] 'OZK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'OZK' 데이터 수집 완료.
[6254/9399] 'PAA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAA' 데이터 수집 완료.
[6255/9399] 'PAAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6256/9399] 'PAAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAAS' 데이터 수집 완료.
[6257/9399] 'PAB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6258/9399] 'PABD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6259/9399] 'PABU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6260/9399] 'PAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAC' 데이터 수집 완료.
[6261/9399] 'PACB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PACB' 데이터 수집 완료.
[6262/9399] 'PACH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6263/9399] 'PACK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PACK' 데이터 수집 완료.
[6264/9399] 'PACS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6265/9399] 'PAG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAG' 데이터 수집 완료.
[6266/9399] 'PAGP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAGP' 데이터 수집 완료.
[6267/9399] 'PAGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAGS' 데이터 수집 완료.
[6268/9399] 'PAHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAHC' 데이터 수집 완료.
[6269/9399] 'PAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6270/9399] 'PAII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6271/9399] 'PAII-U' 처리 중...
HTTP Error 404: {"quoteSummary":{"result":null,"error":{"code":"Not Found","description":"Quote not found for symbol: PAII-U"}}}
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6272/9399] 'PAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6273/9399] 'PALC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6274/9399] 'PALD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6275/9399] 'PALI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PALI' 데이터 수집 완료.
[6276/9399] 'PALL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6277/9399] 'PALU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6278/9399] 'PAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAM' 데이터 수집 완료.
[6279/9399] 'PAMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6280/9399] 'PAMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAMT' 데이터 수집 완료.
[6281/9399] 'PANG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6282/9399] 'PANL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PANL' 데이터 수집 완료.
[6283/9399] 'PANW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PANW' 데이터 수집 완료.
[6284/9399] 'PAPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6285/9399] 'PAPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6286/9399] 'PAPL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6287/9399] 'PAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAR' 데이터 수집 완료.
[6288/9399] 'PARR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PARR' 데이터 수집 완료.
[6289/9399] 'PASG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PASG' 데이터 수집 완료.
[6290/9399] 'PATH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PATH' 데이터 수집 완료.
[6291/9399] 'PATK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PATK' 데이터 수집 완료.
[6292/9399] 'PATN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6293/9399] 'PAVM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAVM' 데이터 수집 완료.
[6294/9399] 'PAVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAVS' 데이터 수집 완료.
[6295/9399] 'PAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAX' 데이터 수집 완료.
[6296/9399] 'PAXS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6297/9399] 'PAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAY' 데이터 수집 완료.
[6298/9399] 'PAYC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAYC' 데이터 수집 완료.
[6299/9399] 'PAYO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAYO' 데이터 수집 완료.
[6300/9399] 'PAYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAYS' 데이터 수집 완료.
[6301/9399] 'PAYX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PAYX' 데이터 수집 완료.
[6302/9399] 'PB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PB' 데이터 수집 완료.
[6303/9399] 'PBA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBA' 데이터 수집 완료.
[6304/9399] 'PBBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBBK' 데이터 수집 완료.
[6305/9399] 'PBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6306/9399] 'PBDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6307/9399] 'PBE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6308/9399] 'PBF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBF' 데이터 수집 완료.
[6309/9399] 'PBFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6310/9399] 'PBH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBH' 데이터 수집 완료.
[6311/9399] 'PBHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBHC' 데이터 수집 완료.
[6312/9399] 'PBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6313/9399] 'PBJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6314/9399] 'PBM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6315/9399] 'PBPB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBPB' 데이터 수집 완료.
[6316/9399] 'PBQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6317/9399] 'PBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBR' 데이터 수집 완료.
[6318/9399] 'PBR-A' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBR-A' 데이터 수집 완료.
[6319/9399] 'PBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBT' 데이터 수집 완료.
[6320/9399] 'PBW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6321/9399] 'PBYI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PBYI' 데이터 수집 완료.
[6322/9399] 'PC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6323/9399] 'PCAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6324/9399] 'PCAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCAR' 데이터 수집 완료.
[6325/9399] 'PCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCB' 데이터 수집 완료.
[6326/9399] 'PCCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6327/9399] 'PCEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6328/9399] 'PCEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6329/9399] 'PCF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6330/9399] 'PCFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6331/9399] 'PCG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCG' 데이터 수집 완료.
[6332/9399] 'PCGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6333/9399] 'PCH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCH' 데이터 수집 완료.
[6334/9399] 'PCHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6335/9399] 'PCIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6336/9399] 'PCLA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6337/9399] 'PCLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6338/9399] 'PCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCM' 데이터 수집 완료.
[6339/9399] 'PCMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6340/9399] 'PCN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCN' 데이터 수집 완료.
[6341/9399] 'PCOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCOR' 데이터 수집 완료.
[6342/9399] 'PCQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCQ' 데이터 수집 완료.
[6343/9399] 'PCRB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6344/9399] 'PCRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCRX' 데이터 수집 완료.
[6345/9399] 'PCSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCSA' 데이터 수집 완료.
[6346/9399] 'PCSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6347/9399] 'PCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCT' 데이터 수집 완료.
[6348/9399] 'PCTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCTY' 데이터 수집 완료.
[6349/9399] 'PCVX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCVX' 데이터 수집 완료.
[6350/9399] 'PCY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6351/9399] 'PCYO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PCYO' 데이터 수집 완료.
[6352/9399] 'PD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PD' 데이터 수집 완료.
[6353/9399] 'PDBA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6354/9399] 'PDBC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6355/9399] 'PDCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6356/9399] 'PDD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PDD' 데이터 수집 완료.
[6357/9399] 'PDDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6358/9399] 'PDEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PDEX' 데이터 수집 완료.
[6359/9399] 'PDFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PDFS' 데이터 수집 완료.
[6360/9399] 'PDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6361/9399] 'PDLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PDLB' 데이터 수집 완료.
[6362/9399] 'PDM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PDM' 데이터 수집 완료.
[6363/9399] 'PDN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6364/9399] 'PDO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6365/9399] 'PDP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6366/9399] 'PDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PDS' 데이터 수집 완료.
[6367/9399] 'PDSB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PDSB' 데이터 수집 완료.
[6368/9399] 'PDT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PDT' 데이터 수집 완료.
[6369/9399] 'PDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6370/9399] 'PDYN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PDYN' 데이터 수집 완료.
[6371/9399] 'PEB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PEB' 데이터 수집 완료.
[6372/9399] 'PEBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PEBK' 데이터 수집 완료.
[6373/9399] 'PEBO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PEBO' 데이터 수집 완료.
[6374/9399] 'PECO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PECO' 데이터 수집 완료.
[6375/9399] 'PED' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PED' 데이터 수집 완료.
[6376/9399] 'PEG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PEG' 데이터 수집 완료.
[6377/9399] 'PEGA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PEGA' 데이터 수집 완료.
[6378/9399] 'PEJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6379/9399] 'PELI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6380/9399] 'PEMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6381/9399] 'PEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PEN' 데이터 수집 완료.
[6382/9399] 'PENG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PENG' 데이터 수집 완료.
[6383/9399] 'PENN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PENN' 데이터 수집 완료.
[6384/9399] 'PEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PEO' 데이터 수집 완료.
[6385/9399] 'PEP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PEP' 데이터 수집 완료.
[6386/9399] 'PEPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PEPG' 데이터 수집 완료.
[6387/9399] 'PEPS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6388/9399] 'PERF' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6389/9399] 'PERI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6390/9399] 'PESI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PESI' 데이터 수집 완료.
[6391/9399] 'PETS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PETS' 데이터 수집 완료.
[6392/9399] 'PETZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PETZ' 데이터 수집 완료.
[6393/9399] 'PEVC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6394/9399] 'PEW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6395/9399] 'PEXL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6396/9399] 'PEY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6397/9399] 'PEZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6398/9399] 'PFAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6399/9399] 'PFBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFBC' 데이터 수집 완료.
[6400/9399] 'PFD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFD' 데이터 수집 완료.
[6401/9399] 'PFE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFE' 데이터 수집 완료.
[6402/9399] 'PFF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6403/9399] 'PFFA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6404/9399] 'PFFD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6405/9399] 'PFFL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6406/9399] 'PFFR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6407/9399] 'PFFV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6408/9399] 'PFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFG' 데이터 수집 완료.
[6409/9399] 'PFGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFGC' 데이터 수집 완료.
[6410/9399] 'PFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6411/9399] 'PFIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6412/9399] 'PFIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFIS' 데이터 수집 완료.
[6413/9399] 'PFIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6414/9399] 'PFL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFL' 데이터 수집 완료.
[6415/9399] 'PFLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6416/9399] 'PFLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFLT' 데이터 수집 완료.
[6417/9399] 'PFM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6418/9399] 'PFN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFN' 데이터 수집 완료.
[6419/9399] 'PFO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFO' 데이터 수집 완료.
[6420/9399] 'PFRL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6421/9399] 'PFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFS' 데이터 수집 완료.
[6422/9399] 'PFSA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6423/9399] 'PFSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFSI' 데이터 수집 완료.
[6424/9399] 'PFUT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6425/9399] 'PFX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PFX' 데이터 수집 완료.
[6426/9399] 'PFXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6427/9399] 'PG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PG' 데이터 수집 완료.
[6428/9399] 'PGAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6429/9399] 'PGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PGC' 데이터 수집 완료.
[6430/9399] 'PGEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PGEN' 데이터 수집 완료.
[6431/9399] 'PGF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6432/9399] 'PGHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6433/9399] 'PGJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6434/9399] 'PGNY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PGNY' 데이터 수집 완료.
[6435/9399] 'PGP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PGP' 데이터 수집 완료.
[6436/9399] 'PGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PGR' 데이터 수집 완료.
[6437/9399] 'PGRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PGRE' 데이터 수집 완료.
[6438/9399] 'PGRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6439/9399] 'PGX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6440/9399] 'PGY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PGY' 데이터 수집 완료.
[6441/9399] 'PGZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6442/9399] 'PH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PH' 데이터 수집 완료.
[6443/9399] 'PHAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHAR' 데이터 수집 완료.
[6444/9399] 'PHAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6445/9399] 'PHB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6446/9399] 'PHD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHD' 데이터 수집 완료.
[6447/9399] 'PHDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6448/9399] 'PHEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6449/9399] 'PHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHG' 데이터 수집 완료.
[6450/9399] 'PHGE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHGE' 데이터 수집 완료.
[6451/9399] 'PHH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6452/9399] 'PHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHI' 데이터 수집 완료.
[6453/9399] 'PHIN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6454/9399] 'PHIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHIO' 데이터 수집 완료.
[6455/9399] 'PHK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHK' 데이터 수집 완료.
[6456/9399] 'PHLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHLT' 데이터 수집 완료.
[6457/9399] 'PHM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHM' 데이터 수집 완료.
[6458/9399] 'PHO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6459/9399] 'PHOE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6460/9399] 'PHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHR' 데이터 수집 완료.
[6461/9399] 'PHT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6462/9399] 'PHUN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHUN' 데이터 수집 완료.
[6463/9399] 'PHVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PHVS' 데이터 수집 완료.
[6464/9399] 'PHYD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6465/9399] 'PHYL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6466/9399] 'PHYS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6467/9399] 'PI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PI' 데이터 수집 완료.
[6468/9399] 'PICB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6469/9399] 'PID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6470/9399] 'PIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6471/9399] 'PIFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6472/9399] 'PII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PII' 데이터 수집 완료.
[6473/9399] 'PIII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PIII' 데이터 수집 완료.
[6474/9399] 'PILL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6475/9399] 'PIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6476/9399] 'PIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6477/9399] 'PINC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PINC' 데이터 수집 완료.
[6478/9399] 'PINE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PINE' 데이터 수집 완료.
[6479/9399] 'PINK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6480/9399] 'PINS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PINS' 데이터 수집 완료.
[6481/9399] 'PIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6482/9399] 'PIPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PIPR' 데이터 수집 완료.
[6483/9399] 'PIZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6484/9399] 'PJFG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6485/9399] 'PJFV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6486/9399] 'PJIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6487/9399] 'PJP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6488/9399] 'PJT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PJT' 데이터 수집 완료.
[6489/9399] 'PK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PK' 데이터 수집 완료.
[6490/9399] 'PKB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6491/9399] 'PKBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PKBK' 데이터 수집 완료.
[6492/9399] 'PKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PKE' 데이터 수집 완료.
[6493/9399] 'PKG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PKG' 데이터 수집 완료.
[6494/9399] 'PKOH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PKOH' 데이터 수집 완료.
[6495/9399] 'PKST' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6496/9399] 'PKW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6497/9399] 'PKX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PKX' 데이터 수집 완료.
[6498/9399] 'PL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PL' 데이터 수집 완료.
[6499/9399] 'PLAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLAB' 데이터 수집 완료.
[6500/9399] 'PLAG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLAG' 데이터 수집 완료.
[6501/9399] 'PLAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLAY' 데이터 수집 완료.
[6502/9399] 'PLBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLBC' 데이터 수집 완료.
[6503/9399] 'PLBL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6504/9399] 'PLBY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLBY' 데이터 수집 완료.
[6505/9399] 'PLCE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6506/9399] 'PLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLD' 데이터 수집 완료.
[6507/9399] 'PLDR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6508/9399] 'PLG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLG' 데이터 수집 완료.
[6509/9399] 'PLMK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6510/9399] 'PLMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLMR' 데이터 수집 완료.
[6511/9399] 'PLNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6512/9399] 'PLOW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLOW' 데이터 수집 완료.
[6513/9399] 'PLPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLPC' 데이터 수집 완료.
[6514/9399] 'PLRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLRX' 데이터 수집 완료.
[6515/9399] 'PLRZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6516/9399] 'PLSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLSE' 데이터 수집 완료.
[6517/9399] 'PLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6518/9399] 'PLTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6519/9399] 'PLTD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6520/9399] 'PLTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6521/9399] 'PLTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6522/9399] 'PLTM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6523/9399] 'PLTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLTR' 데이터 수집 완료.
[6524/9399] 'PLTS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6525/9399] 'PLTU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6526/9399] 'PLTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6527/9399] 'PLTZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6528/9399] 'PLUG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLUG' 데이터 수집 완료.
[6529/9399] 'PLUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLUR' 데이터 수집 완료.
[6530/9399] 'PLUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLUS' 데이터 수집 완료.
[6531/9399] 'PLUT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6532/9399] 'PLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLX' 데이터 수집 완료.
[6533/9399] 'PLXS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLXS' 데이터 수집 완료.
[6534/9399] 'PLYM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PLYM' 데이터 수집 완료.
[6535/9399] 'PLYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6536/9399] 'PM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6537/9399] 'PMAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6538/9399] 'PMBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6539/9399] 'PMCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PMCB' 데이터 수집 완료.
[6540/9399] 'PMEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6541/9399] 'PMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6542/9399] 'PMIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6543/9399] 'PML' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PML' 데이터 수집 완료.
[6544/9399] 'PMM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PMM' 데이터 수집 완료.
[6545/9399] 'PMMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6546/9399] 'PMN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6547/9399] 'PMNT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6548/9399] 'PMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6549/9399] 'PMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PMT' 데이터 수집 완료.
[6550/9399] 'PMTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6551/9399] 'PMTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6552/9399] 'PMVP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PMVP' 데이터 수집 완료.
[6553/9399] 'PN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6554/9399] 'PNBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PNBK' 데이터 수집 완료.
[6555/9399] 'PNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PNC' 데이터 수집 완료.
[6556/9399] 'PNFP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PNFP' 데이터 수집 완료.
[6557/9399] 'PNI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6558/9399] 'PNNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PNNT' 데이터 수집 완료.
[6559/9399] 'PNQI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6560/9399] 'PNR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PNR' 데이터 수집 완료.
[6561/9399] 'PNRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PNRG' 데이터 수집 완료.
[6562/9399] 'PNTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PNTG' 데이터 수집 완료.
[6563/9399] 'PNW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PNW' 데이터 수집 완료.
[6564/9399] 'POAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POAI' 데이터 수집 완료.
[6565/9399] 'POCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POCI' 데이터 수집 완료.
[6566/9399] 'PODC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6567/9399] 'PODD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PODD' 데이터 수집 완료.
[6568/9399] 'POET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POET' 데이터 수집 완료.
[6569/9399] 'POLA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POLA' 데이터 수집 완료.
[6570/9399] 'POLE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6571/9399] 'PONY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6572/9399] 'POOL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POOL' 데이터 수집 완료.
[6573/9399] 'POR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POR' 데이터 수집 완료.
[6574/9399] 'POST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POST' 데이터 수집 완료.
[6575/9399] 'POWA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6576/9399] 'POWI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POWI' 데이터 수집 완료.
[6577/9399] 'POWL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POWL' 데이터 수집 완료.
[6578/9399] 'POWW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'POWW' 데이터 수집 완료.
[6579/9399] 'PPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6580/9399] 'PPBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PPBT' 데이터 수집 완료.
[6581/9399] 'PPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PPC' 데이터 수집 완료.
[6582/9399] 'PPCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PPCB' 데이터 수집 완료.
[6583/9399] 'PPEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6584/9399] 'PPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PPG' 데이터 수집 완료.
[6585/9399] 'PPH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6586/9399] 'PPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6587/9399] 'PPIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6588/9399] 'PPIH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PPIH' 데이터 수집 완료.
[6589/9399] 'PPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PPL' 데이터 수집 완료.
[6590/9399] 'PPLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6591/9399] 'PPSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PPSI' 데이터 수집 완료.
[6592/9399] 'PPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PPT' 데이터 수집 완료.
[6593/9399] 'PPTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PPTA' 데이터 수집 완료.
[6594/9399] 'PPTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6595/9399] 'PQAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6596/9399] 'PQDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6597/9399] 'PQJA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6598/9399] 'PQJL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6599/9399] 'PQOC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6600/9399] 'PR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PR' 데이터 수집 완료.
[6601/9399] 'PRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRA' 데이터 수집 완료.
[6602/9399] 'PRAA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRAA' 데이터 수집 완료.
[6603/9399] 'PRAE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6604/9399] 'PRAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRAX' 데이터 수집 완료.
[6605/9399] 'PRAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6606/9399] 'PRB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6607/9399] 'PRCH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6608/9399] 'PRCS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6609/9399] 'PRCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRCT' 데이터 수집 완료.
[6610/9399] 'PRDO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRDO' 데이터 수집 완료.
[6611/9399] 'PRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRE' 데이터 수집 완료.
[6612/9399] 'PREF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6613/9399] 'PRF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6614/9399] 'PRFD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6615/9399] 'PRFX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRFX' 데이터 수집 완료.
[6616/9399] 'PRFZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6617/9399] 'PRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRG' 데이터 수집 완료.
[6618/9399] 'PRGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRGO' 데이터 수집 완료.
[6619/9399] 'PRGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRGS' 데이터 수집 완료.
[6620/9399] 'PRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRI' 데이터 수집 완료.
[6621/9399] 'PRIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRIM' 데이터 수집 완료.
[6622/9399] 'PRIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6623/9399] 'PRK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRK' 데이터 수집 완료.
[6624/9399] 'PRKS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6625/9399] 'PRLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRLB' 데이터 수집 완료.
[6626/9399] 'PRLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRLD' 데이터 수집 완료.
[6627/9399] 'PRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRM' 데이터 수집 완료.
[6628/9399] 'PRMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRMB' 데이터 수집 완료.
[6629/9399] 'PRME' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6630/9399] 'PRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6631/9399] 'PRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6632/9399] 'PROF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PROF' 데이터 수집 완료.
[6633/9399] 'PROK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PROK' 데이터 수집 완료.
[6634/9399] 'PROP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PROP' 데이터 수집 완료.
[6635/9399] 'PROV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PROV' 데이터 수집 완료.
[6636/9399] 'PRPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRPH' 데이터 수집 완료.
[6637/9399] 'PRPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRPL' 데이터 수집 완료.
[6638/9399] 'PRPO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRPO' 데이터 수집 완료.
[6639/9399] 'PRQR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRQR' 데이터 수집 완료.
[6640/9399] 'PRSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6641/9399] 'PRSO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRSO' 데이터 수집 완료.
[6642/9399] 'PRSU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRSU' 데이터 수집 완료.
[6643/9399] 'PRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRT' 데이터 수집 완료.
[6644/9399] 'PRTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRTA' 데이터 수집 완료.
[6645/9399] 'PRTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRTC' 데이터 수집 완료.
[6646/9399] 'PRTH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6647/9399] 'PRTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRTS' 데이터 수집 완료.
[6648/9399] 'PRU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRU' 데이터 수집 완료.
[6649/9399] 'PRVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PRVA' 데이터 수집 완료.
[6650/9399] 'PRVS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6651/9399] 'PRXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6652/9399] 'PRXV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6653/9399] 'PRZO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6654/9399] 'PSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSA' 데이터 수집 완료.
[6655/9399] 'PSBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6656/9399] 'PSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6657/9399] 'PSCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6658/9399] 'PSCD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6659/9399] 'PSCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6660/9399] 'PSCF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6661/9399] 'PSCH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6662/9399] 'PSCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6663/9399] 'PSCM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6664/9399] 'PSCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6665/9399] 'PSCU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6666/9399] 'PSEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSEC' 데이터 수집 완료.
[6667/9399] 'PSET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6668/9399] 'PSF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6669/9399] 'PSFE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSFE' 데이터 수집 완료.
[6670/9399] 'PSHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSHG' 데이터 수집 완료.
[6671/9399] 'PSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6672/9399] 'PSIG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6673/9399] 'PSIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6674/9399] 'PSIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSIX' 데이터 수집 완료.
[6675/9399] 'PSK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6676/9399] 'PSKY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSKY' 데이터 수집 완료.
[6677/9399] 'PSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6678/9399] 'PSLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6679/9399] 'PSMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSMT' 데이터 수집 완료.
[6680/9399] 'PSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSN' 데이터 수집 완료.
[6681/9399] 'PSNL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSNL' 데이터 수집 완료.
[6682/9399] 'PSNY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6683/9399] 'PSO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSO' 데이터 수집 완료.
[6684/9399] 'PSP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6685/9399] 'PSQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6686/9399] 'PSQA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6687/9399] 'PSQH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSQH' 데이터 수집 완료.
[6688/9399] 'PSQO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6689/9399] 'PSR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6690/9399] 'PST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6691/9399] 'PSTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSTG' 데이터 수집 완료.
[6692/9399] 'PSTL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSTL' 데이터 수집 완료.
[6693/9399] 'PSTP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6694/9399] 'PSTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6695/9399] 'PSTV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6696/9399] 'PSWD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6697/9399] 'PSX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PSX' 데이터 수집 완료.
[6698/9399] 'PT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6699/9399] 'PTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6700/9399] 'PTBD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6701/9399] 'PTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PTC' 데이터 수집 완료.
[6702/9399] 'PTCT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6703/9399] 'PTEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PTEN' 데이터 수집 완료.
[6704/9399] 'PTF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6705/9399] 'PTGX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PTGX' 데이터 수집 완료.
[6706/9399] 'PTH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6707/9399] 'PTHL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6708/9399] 'PTHS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6709/9399] 'PTIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6710/9399] 'PTIR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6711/9399] 'PTIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6712/9399] 'PTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6713/9399] 'PTLE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6714/9399] 'PTLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PTLO' 데이터 수집 완료.
[6715/9399] 'PTNM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6716/9399] 'PTNQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6717/9399] 'PTON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6718/9399] 'PTRB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6719/9399] 'PTRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6720/9399] 'PTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PTY' 데이터 수집 완료.
[6721/9399] 'PUBM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PUBM' 데이터 수집 완료.
[6722/9399] 'PUI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6723/9399] 'PUK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PUK' 데이터 수집 완료.
[6724/9399] 'PULM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PULM' 데이터 수집 완료.
[6725/9399] 'PULS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6726/9399] 'PULT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6727/9399] 'PUMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PUMP' 데이터 수집 완료.
[6728/9399] 'PUSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6729/9399] 'PVAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6730/9399] 'PVBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PVBC' 데이터 수집 완료.
[6731/9399] 'PVH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PVH' 데이터 수집 완료.
[6732/9399] 'PVI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6733/9399] 'PVL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PVL' 데이터 수집 완료.
[6734/9399] 'PVLA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6735/9399] 'PW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PW' 데이터 수집 완료.
[6736/9399] 'PWB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6737/9399] 'PWER' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6738/9399] 'PWM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6739/9399] 'PWP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PWP' 데이터 수집 완료.
[6740/9399] 'PWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PWR' 데이터 수집 완료.
[6741/9399] 'PWRD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6742/9399] 'PWV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6743/9399] 'PWZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6744/9399] 'PX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PX' 데이터 수집 완료.
[6745/9399] 'PXE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6746/9399] 'PXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6747/9399] 'PXH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6748/9399] 'PXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6749/9399] 'PXIU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6750/9399] 'PXJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6751/9399] 'PXLW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PXLW' 데이터 수집 완료.
[6752/9399] 'PXS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PXS' 데이터 수집 완료.
[6753/9399] 'PY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6754/9399] 'PYLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6755/9399] 'PYPD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PYPD' 데이터 수집 완료.
[6756/9399] 'PYPG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6757/9399] 'PYPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PYPL' 데이터 수집 완료.
[6758/9399] 'PYPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6759/9399] 'PYXS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PYXS' 데이터 수집 완료.
[6760/9399] 'PYZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6761/9399] 'PZA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6762/9399] 'PZG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'PZG' 데이터 수집 완료.
[6763/9399] 'PZT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6764/9399] 'PZZA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6765/9399] 'QABA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6766/9399] 'QAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6767/9399] 'QALT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6768/9399] 'QARP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6769/9399] 'QAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6770/9399] 'QB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6771/9399] 'QBIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6772/9399] 'QBTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QBTS' 데이터 수집 완료.
[6773/9399] 'QBUF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6774/9399] 'QCLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6775/9399] 'QCLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6776/9399] 'QCMD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6777/9399] 'QCML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6778/9399] 'QCMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6779/9399] 'QCOM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QCOM' 데이터 수집 완료.
[6780/9399] 'QCRH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QCRH' 데이터 수집 완료.
[6781/9399] 'QD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QD' 데이터 수집 완료.
[6782/9399] 'QDEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6783/9399] 'QDEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QDEL' 데이터 수집 완료.
[6784/9399] 'QDF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6785/9399] 'QDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6786/9399] 'QDPL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6787/9399] 'QDTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6788/9399] 'QDVO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6789/9399] 'QDWN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6790/9399] 'QEFA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6791/9399] 'QEMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6792/9399] 'QETA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6793/9399] 'QFIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QFIN' 데이터 수집 완료.
[6794/9399] 'QFLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6795/9399] 'QGEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QGEN' 데이터 수집 완료.
[6796/9399] 'QGRD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6797/9399] 'QGRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6798/9399] 'QGRW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6799/9399] 'QH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QH' 데이터 수집 완료.
[6800/9399] 'QHDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6801/9399] 'QID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6802/9399] 'QIDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6803/9399] 'QINT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6804/9399] 'QIPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QIPT' 데이터 수집 완료.
[6805/9399] 'QIS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6806/9399] 'QLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6807/9399] 'QLDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6808/9399] 'QLGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6809/9399] 'QLTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6810/9399] 'QLTI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6811/9399] 'QLTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6812/9399] 'QLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6813/9399] 'QLVD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6814/9399] 'QLVE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6815/9399] 'QLYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QLYS' 데이터 수집 완료.
[6816/9399] 'QMCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6817/9399] 'QMID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6818/9399] 'QMMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6819/9399] 'QMOM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6820/9399] 'QNCX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QNCX' 데이터 수집 완료.
[6821/9399] 'QNRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QNRX' 데이터 수집 완료.
[6822/9399] 'QNST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QNST' 데이터 수집 완료.
[6823/9399] 'QNTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QNTM' 데이터 수집 완료.
[6824/9399] 'QNXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6825/9399] 'QOWZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6826/9399] 'QPUX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6827/9399] 'QPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6828/9399] 'QQA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6829/9399] 'QQDN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6830/9399] 'QQEW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6831/9399] 'QQH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6832/9399] 'QQHG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6833/9399] 'QQJG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6834/9399] 'QQLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6835/9399] 'QQMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6836/9399] 'QQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6837/9399] 'QQQA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6838/9399] 'QQQD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6839/9399] 'QQQE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6840/9399] 'QQQG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6841/9399] 'QQQH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6842/9399] 'QQQI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6843/9399] 'QQQJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6844/9399] 'QQQM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6845/9399] 'QQQP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6846/9399] 'QQQS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6847/9399] 'QQQT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6848/9399] 'QQQU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6849/9399] 'QQQX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6850/9399] 'QQQY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6851/9399] 'QQUP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6852/9399] 'QQWZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6853/9399] 'QQXL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6854/9399] 'QQXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6855/9399] 'QRFT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6856/9399] 'QRHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QRHC' 데이터 수집 완료.
[6857/9399] 'QRMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6858/9399] 'QRVO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QRVO' 데이터 수집 완료.
[6859/9399] 'QS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QS' 데이터 수집 완료.
[6860/9399] 'QSEA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6861/9399] 'QSG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6862/9399] 'QSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QSI' 데이터 수집 완료.
[6863/9399] 'QSIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6864/9399] 'QSML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6865/9399] 'QSR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QSR' 데이터 수집 완료.
[6866/9399] 'QTEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6867/9399] 'QTOP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6868/9399] 'QTPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6869/9399] 'QTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6870/9399] 'QTRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QTRX' 데이터 수집 완료.
[6871/9399] 'QTTB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6872/9399] 'QTUM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6873/9399] 'QTWO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QTWO' 데이터 수집 완료.
[6874/9399] 'QUAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QUAD' 데이터 수집 완료.
[6875/9399] 'QUBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QUBT' 데이터 수집 완료.
[6876/9399] 'QUIK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QUIK' 데이터 수집 완료.
[6877/9399] 'QUIZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6878/9399] 'QULL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6879/9399] 'QUMSU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6880/9399] 'QUP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6881/9399] 'QURE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QURE' 데이터 수집 완료.
[6882/9399] 'QUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6883/9399] 'QUSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6884/9399] 'QVAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6885/9399] 'QVCGA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6886/9399] 'QVML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6887/9399] 'QVMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6888/9399] 'QVMS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6889/9399] 'QWLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6890/9399] 'QXO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'QXO' 데이터 수집 완료.
[6891/9399] 'QXQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6892/9399] 'QYLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6893/9399] 'QYLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6894/9399] 'R' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'R' 데이터 수집 완료.
[6895/9399] 'RA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6896/9399] 'RAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6897/9399] 'RAAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6898/9399] 'RAAQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6899/9399] 'RAAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6900/9399] 'RAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6901/9399] 'RACE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RACE' 데이터 수집 완료.
[6902/9399] 'RADX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6903/9399] 'RAFE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6904/9399] 'RAIL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6905/9399] 'RAIN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6906/9399] 'RAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6907/9399] 'RAMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RAMP' 데이터 수집 완료.
[6908/9399] 'RAND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RAND' 데이터 수집 완료.
[6909/9399] 'RANG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6910/9399] 'RANI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6911/9399] 'RAPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6912/9399] 'RAPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RAPT' 데이터 수집 완료.
[6913/9399] 'RARE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RARE' 데이터 수집 완료.
[6914/9399] 'RAUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6915/9399] 'RAVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RAVE' 데이터 수집 완료.
[6916/9399] 'RAVI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6917/9399] 'RAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6918/9399] 'RAYA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[6919/9399] 'RAYC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6920/9399] 'RAYD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6921/9399] 'RAYE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6922/9399] 'RAYJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6923/9399] 'RBA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RBA' 데이터 수집 완료.
[6924/9399] 'RBB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RBB' 데이터 수집 완료.
[6925/9399] 'RBBN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RBBN' 데이터 수집 완료.
[6926/9399] 'RBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RBC' 데이터 수집 완료.
[6927/9399] 'RBCAA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RBCAA' 데이터 수집 완료.
[6928/9399] 'RBIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6929/9399] 'RBKB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RBKB' 데이터 수집 완료.
[6930/9399] 'RBLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6931/9399] 'RBLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RBLX' 데이터 수집 완료.
[6932/9399] 'RBLY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6933/9399] 'RBNE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6934/9399] 'RBOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RBOT' 데이터 수집 완료.
[6935/9399] 'RBRK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6936/9399] 'RC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RC' 데이터 수집 완료.
[6937/9399] 'RCAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6938/9399] 'RCEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCEL' 데이터 수집 완료.
[6939/9399] 'RCG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCG' 데이터 수집 완료.
[6940/9399] 'RCGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6941/9399] 'RCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCI' 데이터 수집 완료.
[6942/9399] 'RCKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCKT' 데이터 수집 완료.
[6943/9399] 'RCKY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCKY' 데이터 수집 완료.
[6944/9399] 'RCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCL' 데이터 수집 완료.
[6945/9399] 'RCMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCMT' 데이터 수집 완료.
[6946/9399] 'RCON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCON' 데이터 수집 완료.
[6947/9399] 'RCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCS' 데이터 수집 완료.
[6948/9399] 'RCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6949/9399] 'RCTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6950/9399] 'RCUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RCUS' 데이터 수집 완료.
[6951/9399] 'RDAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6952/9399] 'RDAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6953/9399] 'RDCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDCM' 데이터 수집 완료.
[6954/9399] 'RDDT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6955/9399] 'RDGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDGT' 데이터 수집 완료.
[6956/9399] 'RDHL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6957/9399] 'RDI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDI' 데이터 수집 완료.
[6958/9399] 'RDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6959/9399] 'RDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDN' 데이터 수집 완료.
[6960/9399] 'RDNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDNT' 데이터 수집 완료.
[6961/9399] 'RDNW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDNW' 데이터 수집 완료.
[6962/9399] 'RDOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6963/9399] 'RDTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6964/9399] 'RDTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6965/9399] 'RDVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDVT' 데이터 수집 완료.
[6966/9399] 'RDVY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6967/9399] 'RDW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDW' 데이터 수집 완료.
[6968/9399] 'RDWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDWR' 데이터 수집 완료.
[6969/9399] 'RDY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RDY' 데이터 수집 완료.
[6970/9399] 'RDYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6971/9399] 'RDZN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6972/9399] 'REAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6973/9399] 'REAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6974/9399] 'REAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REAX' 데이터 수집 완료.
[6975/9399] 'REBN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REBN' 데이터 수집 완료.
[6976/9399] 'RECS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6977/9399] 'RECT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6978/9399] 'REE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REE' 데이터 수집 완료.
[6979/9399] 'REET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6980/9399] 'REFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REFI' 데이터 수집 완료.
[6981/9399] 'REFR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REFR' 데이터 수집 완료.
[6982/9399] 'REG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REG' 데이터 수집 완료.
[6983/9399] 'REGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REGN' 데이터 수집 완료.
[6984/9399] 'REI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REI' 데이터 수집 완료.
[6985/9399] 'REIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6986/9399] 'REK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6987/9399] 'REKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REKR' 데이터 수집 완료.
[6988/9399] 'REKT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6989/9399] 'RELI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RELI' 데이터 수집 완료.
[6990/9399] 'RELL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RELL' 데이터 수집 완료.
[6991/9399] 'RELX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RELX' 데이터 수집 완료.
[6992/9399] 'RELY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RELY' 데이터 수집 완료.
[6993/9399] 'REMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6994/9399] 'REMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[6995/9399] 'RENB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RENB' 데이터 수집 완료.
[6996/9399] 'RENT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[6997/9399] 'REPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REPL' 데이터 수집 완료.
[6998/9399] 'REPX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REPX' 데이터 수집 완료.
[6999/9399] 'RERE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RERE' 데이터 수집 완료.
[7000/9399] 'RES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RES' 데이터 수집 완료.
[7001/9399] 'RETL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7002/9399] 'RETO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RETO' 데이터 수집 완료.
[7003/9399] 'REVB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REVB' 데이터 수집 완료.
[7004/9399] 'REVG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REVG' 데이터 수집 완료.
[7005/9399] 'REVS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7006/9399] 'REW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7007/9399] 'REX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REX' 데이터 수집 완료.
[7008/9399] 'REXR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REXR' 데이터 수집 완료.
[7009/9399] 'REYN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REYN' 데이터 수집 완료.
[7010/9399] 'REZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7011/9399] 'REZI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'REZI' 데이터 수집 완료.
[7012/9399] 'RF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RF' 데이터 수집 완료.
[7013/9399] 'RFAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7014/9399] 'RFCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7015/9399] 'RFDA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7016/9399] 'RFDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7017/9399] 'RFEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7018/9399] 'RFEU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7019/9399] 'RFFC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7020/9399] 'RFG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7021/9399] 'RFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RFI' 데이터 수집 완료.
[7022/9399] 'RFIL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RFIL' 데이터 수집 완료.
[7023/9399] 'RFIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7024/9399] 'RFL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RFL' 데이터 수집 완료.
[7025/9399] 'RFLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7026/9399] 'RFM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7027/9399] 'RFMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7028/9399] 'RFV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7029/9399] 'RGA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RGA' 데이터 수집 완료.
[7030/9399] 'RGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RGC' 데이터 수집 완료.
[7031/9399] 'RGCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RGCO' 데이터 수집 완료.
[7032/9399] 'RGEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7033/9399] 'RGEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RGEN' 데이터 수집 완료.
[7034/9399] 'RGLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RGLD' 데이터 수집 완료.
[7035/9399] 'RGLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7036/9399] 'RGNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RGNX' 데이터 수집 완료.
[7037/9399] 'RGP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RGP' 데이터 수집 완료.
[7038/9399] 'RGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7039/9399] 'RGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RGS' 데이터 수집 완료.
[7040/9399] 'RGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7041/9399] 'RGTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RGTI' 데이터 수집 완료.
[7042/9399] 'RGTX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7043/9399] 'RH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7044/9399] 'RHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RHI' 데이터 수집 완료.
[7045/9399] 'RHLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7046/9399] 'RHP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RHP' 데이터 수집 완료.
[7047/9399] 'RHRX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7048/9399] 'RHTX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7049/9399] 'RIBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7050/9399] 'RICK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RICK' 데이터 수집 완료.
[7051/9399] 'RIET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7052/9399] 'RIFR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7053/9399] 'RIG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RIG' 데이터 수집 완료.
[7054/9399] 'RIGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RIGL' 데이터 수집 완료.
[7055/9399] 'RIGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7056/9399] 'RILA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7057/9399] 'RILY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7058/9399] 'RIME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RIME' 데이터 수집 완료.
[7059/9399] 'RINC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7060/9399] 'RINF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7061/9399] 'RING' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7062/9399] 'RINT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7063/9399] 'RIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RIO' 데이터 수집 완료.
[7064/9399] 'RIOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RIOT' 데이터 수집 완료.
[7065/9399] 'RIOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7066/9399] 'RISN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7067/9399] 'RISR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7068/9399] 'RITA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7069/9399] 'RITM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RITM' 데이터 수집 완료.
[7070/9399] 'RITR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7071/9399] 'RIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7072/9399] 'RIVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RIVN' 데이터 수집 완료.
[7073/9399] 'RJF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RJF' 데이터 수집 완료.
[7074/9399] 'RJMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7075/9399] 'RKDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RKDA' 데이터 수집 완료.
[7076/9399] 'RKLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RKLB' 데이터 수집 완료.
[7077/9399] 'RKLX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7078/9399] 'RKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RKT' 데이터 수집 완료.
[7079/9399] 'RL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RL' 데이터 수집 완료.
[7080/9399] 'RLAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RLAY' 데이터 수집 완료.
[7081/9399] 'RLGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RLGT' 데이터 수집 완료.
[7082/9399] 'RLI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RLI' 데이터 수집 완료.
[7083/9399] 'RLJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RLJ' 데이터 수집 완료.
[7084/9399] 'RLMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RLMD' 데이터 수집 완료.
[7085/9399] 'RLTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7086/9399] 'RLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RLX' 데이터 수집 완료.
[7087/9399] 'RLY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7088/9399] 'RLYB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RLYB' 데이터 수집 완료.
[7089/9399] 'RM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RM' 데이터 수집 완료.
[7090/9399] 'RMAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7091/9399] 'RMBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RMBI' 데이터 수집 완료.
[7092/9399] 'RMBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RMBS' 데이터 수집 완료.
[7093/9399] 'RMCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7094/9399] 'RMCF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RMCF' 데이터 수집 완료.
[7095/9399] 'RMCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RMCO' 데이터 수집 완료.
[7096/9399] 'RMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RMD' 데이터 수집 완료.
[7097/9399] 'RMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7098/9399] 'RMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7099/9399] 'RMMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7100/9399] 'RMNI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7101/9399] 'RMNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7102/9399] 'RMOP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7103/9399] 'RMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RMR' 데이터 수집 완료.
[7104/9399] 'RMSG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7105/9399] 'RMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RMT' 데이터 수집 완료.
[7106/9399] 'RMTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RMTI' 데이터 수집 완료.
[7107/9399] 'RNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RNA' 데이터 수집 완료.
[7108/9399] 'RNAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7109/9399] 'RNAZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RNAZ' 데이터 수집 완료.
[7110/9399] 'RNBW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7111/9399] 'RND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7112/9399] 'RNEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7113/9399] 'RNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7114/9399] 'RNGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RNGR' 데이터 수집 완료.
[7115/9399] 'RNIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7116/9399] 'RNP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RNP' 데이터 수집 완료.
[7117/9399] 'RNR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RNR' 데이터 수집 완료.
[7118/9399] 'RNRG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7119/9399] 'RNST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RNST' 데이터 수집 완료.
[7120/9399] 'RNTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RNTX' 데이터 수집 완료.
[7121/9399] 'RNTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7122/9399] 'RNW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RNW' 데이터 수집 완료.
[7123/9399] 'RNWZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7124/9399] 'RNXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RNXT' 데이터 수집 완료.
[7125/9399] 'ROAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROAD' 데이터 수집 완료.
[7126/9399] 'ROAM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7127/9399] 'ROBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7128/9399] 'ROBT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7129/9399] 'ROCK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROCK' 데이터 수집 완료.
[7130/9399] 'RODM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7131/9399] 'ROE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7132/9399] 'ROG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROG' 데이터 수집 완료.
[7133/9399] 'ROIV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROIV' 데이터 수집 완료.
[7134/9399] 'ROK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROK' 데이터 수집 완료.
[7135/9399] 'ROKT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7136/9399] 'ROKU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROKU' 데이터 수집 완료.
[7137/9399] 'ROL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROL' 데이터 수집 완료.
[7138/9399] 'ROLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7139/9399] 'ROM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7140/9399] 'ROMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7141/9399] 'ROOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROOT' 데이터 수집 완료.
[7142/9399] 'ROP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROP' 데이터 수집 완료.
[7143/9399] 'ROPE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7144/9399] 'RORO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7145/9399] 'ROSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7146/9399] 'ROST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ROST' 데이터 수집 완료.
[7147/9399] 'ROUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7148/9399] 'RPAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7149/9399] 'RPAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RPAY' 데이터 수집 완료.
[7150/9399] 'RPD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RPD' 데이터 수집 완료.
[7151/9399] 'RPG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7152/9399] 'RPID' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RPID' 데이터 수집 완료.
[7153/9399] 'RPM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RPM' 데이터 수집 완료.
[7154/9399] 'RPRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RPRX' 데이터 수집 완료.
[7155/9399] 'RPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RPT' 데이터 수집 완료.
[7156/9399] 'RPTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RPTX' 데이터 수집 완료.
[7157/9399] 'RPV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7158/9399] 'RQI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RQI' 데이터 수집 완료.
[7159/9399] 'RR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7160/9399] 'RRBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RRBI' 데이터 수집 완료.
[7161/9399] 'RRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RRC' 데이터 수집 완료.
[7162/9399] 'RRGB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7163/9399] 'RRR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RRR' 데이터 수집 완료.
[7164/9399] 'RRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RRX' 데이터 수집 완료.
[7165/9399] 'RS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RS' 데이터 수집 완료.
[7166/9399] 'RSDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7167/9399] 'RSF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7168/9399] 'RSG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RSG' 데이터 수집 완료.
[7169/9399] 'RSHO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7170/9399] 'RSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RSI' 데이터 수집 완료.
[7171/9399] 'RSJN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7172/9399] 'RSKD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RSKD' 데이터 수집 완료.
[7173/9399] 'RSMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7174/9399] 'RSMR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7175/9399] 'RSMV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7176/9399] 'RSP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7177/9399] 'RSPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7178/9399] 'RSPC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7179/9399] 'RSPD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7180/9399] 'RSPE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7181/9399] 'RSPF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7182/9399] 'RSPG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7183/9399] 'RSPH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7184/9399] 'RSPM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7185/9399] 'RSPN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7186/9399] 'RSPR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7187/9399] 'RSPS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7188/9399] 'RSPT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7189/9399] 'RSPU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7190/9399] 'RSSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7191/9399] 'RSSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7192/9399] 'RSSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RSSS' 데이터 수집 완료.
[7193/9399] 'RSVR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RSVR' 데이터 수집 완료.
[7194/9399] 'RTAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7195/9399] 'RTH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7196/9399] 'RTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RTO' 데이터 수집 완료.
[7197/9399] 'RTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RTX' 데이터 수집 완료.
[7198/9399] 'RTXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7199/9399] 'RUBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7200/9399] 'RUM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RUM' 데이터 수집 완료.
[7201/9399] 'RUN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RUN' 데이터 수집 완료.
[7202/9399] 'RUNN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7203/9399] 'RUSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7204/9399] 'RUSHA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RUSHA' 데이터 수집 완료.
[7205/9399] 'RVER' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7206/9399] 'RVLV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RVLV' 데이터 수집 완료.
[7207/9399] 'RVMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RVMD' 데이터 수집 완료.
[7208/9399] 'RVNL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7209/9399] 'RVNU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7210/9399] 'RVP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RVP' 데이터 수집 완료.
[7211/9399] 'RVPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7212/9399] 'RVSB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RVSB' 데이터 수집 완료.
[7213/9399] 'RVSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RVSN' 데이터 수집 완료.
[7214/9399] 'RVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RVT' 데이터 수집 완료.
[7215/9399] 'RVTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RVTY' 데이터 수집 완료.
[7216/9399] 'RVYL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RVYL' 데이터 수집 완료.
[7217/9399] 'RW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7218/9399] 'RWAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RWAY' 데이터 수집 완료.
[7219/9399] 'RWJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7220/9399] 'RWK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7221/9399] 'RWL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7222/9399] 'RWM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7223/9399] 'RWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7224/9399] 'RWR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7225/9399] 'RWT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RWT' 데이터 수집 완료.
[7226/9399] 'RWX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7227/9399] 'RXD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7228/9399] 'RXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7229/9399] 'RXL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7230/9399] 'RXO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7231/9399] 'RXRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RXRX' 데이터 수집 완료.
[7232/9399] 'RXST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RXST' 데이터 수집 완료.
[7233/9399] 'RXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7234/9399] 'RY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RY' 데이터 수집 완료.
[7235/9399] 'RYAAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RYAAY' 데이터 수집 완료.
[7236/9399] 'RYAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RYAM' 데이터 수집 완료.
[7237/9399] 'RYAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RYAN' 데이터 수집 완료.
[7238/9399] 'RYDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7239/9399] 'RYET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7240/9399] 'RYI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RYI' 데이터 수집 완료.
[7241/9399] 'RYLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7242/9399] 'RYLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7243/9399] 'RYM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RYM' 데이터 수집 완료.
[7244/9399] 'RYN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RYN' 데이터 수집 완료.
[7245/9399] 'RYOJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7246/9399] 'RYTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RYTM' 데이터 수집 완료.
[7247/9399] 'RZG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7248/9399] 'RZLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'RZLT' 데이터 수집 완료.
[7249/9399] 'RZLV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7250/9399] 'RZV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7251/9399] 'S' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'S' 데이터 수집 완료.
[7252/9399] 'SA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SA' 데이터 수집 완료.
[7253/9399] 'SAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7254/9399] 'SABA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7255/9399] 'SABR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7256/9399] 'SABS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SABS' 데이터 수집 완료.
[7257/9399] 'SACH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SACH' 데이터 수집 완료.
[7258/9399] 'SAEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7259/9399] 'SAFE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAFE' 데이터 수집 완료.
[7260/9399] 'SAFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAFT' 데이터 수집 완료.
[7261/9399] 'SAFX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7262/9399] 'SAGP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7263/9399] 'SAGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7264/9399] 'SAH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAH' 데이터 수집 완료.
[7265/9399] 'SAIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAIA' 데이터 수집 완료.
[7266/9399] 'SAIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAIC' 데이터 수집 완료.
[7267/9399] 'SAIH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAIH' 데이터 수집 완료.
[7268/9399] 'SAIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7269/9399] 'SAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAM' 데이터 수집 완료.
[7270/9399] 'SAMG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAMG' 데이터 수집 완료.
[7271/9399] 'SAMM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7272/9399] 'SAMT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7273/9399] 'SAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAN' 데이터 수집 완료.
[7274/9399] 'SANA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SANA' 데이터 수집 완료.
[7275/9399] 'SAND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAND' 데이터 수집 완료.
[7276/9399] 'SANG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SANG' 데이터 수집 완료.
[7277/9399] 'SANM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SANM' 데이터 수집 완료.
[7278/9399] 'SAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAP' 데이터 수집 완료.
[7279/9399] 'SAPH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7280/9399] 'SAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAR' 데이터 수집 완료.
[7281/9399] 'SARK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7282/9399] 'SARO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7283/9399] 'SATL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7284/9399] 'SATS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SATS' 데이터 수집 완료.
[7285/9399] 'SAVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SAVA' 데이터 수집 완료.
[7286/9399] 'SAWG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7287/9399] 'SAWS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7288/9399] 'SB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SB' 데이터 수집 완료.
[7289/9399] 'SBAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7290/9399] 'SBAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7291/9399] 'SBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7292/9399] 'SBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBC' 데이터 수집 완료.
[7293/9399] 'SBCF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBCF' 데이터 수집 완료.
[7294/9399] 'SBDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBDS' 데이터 수집 완료.
[7295/9399] 'SBET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBET' 데이터 수집 완료.
[7296/9399] 'SBEV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7297/9399] 'SBFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBFG' 데이터 수집 완료.
[7298/9399] 'SBFM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBFM' 데이터 수집 완료.
[7299/9399] 'SBGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBGI' 데이터 수집 완료.
[7300/9399] 'SBH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBH' 데이터 수집 완료.
[7301/9399] 'SBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBI' 데이터 수집 완료.
[7302/9399] 'SBIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7303/9399] 'SBIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7304/9399] 'SBIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7305/9399] 'SBLK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBLK' 데이터 수집 완료.
[7306/9399] 'SBLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBLX' 데이터 수집 완료.
[7307/9399] 'SBND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7308/9399] 'SBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBR' 데이터 수집 완료.
[7309/9399] 'SBRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBRA' 데이터 수집 완료.
[7310/9399] 'SBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBS' 데이터 수집 완료.
[7311/9399] 'SBSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBSI' 데이터 수집 완료.
[7312/9399] 'SBSW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SBSW' 데이터 수집 완료.
[7313/9399] 'SBUX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7314/9399] 'SBXD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7315/9399] 'SCAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7316/9399] 'SCAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7317/9399] 'SCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7318/9399] 'SCCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCCO' 데이터 수집 완료.
[7319/9399] 'SCCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7320/9399] 'SCD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCD' 데이터 수집 완료.
[7321/9399] 'SCDL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7322/9399] 'SCDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7323/9399] 'SCDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7324/9399] 'SCHA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7325/9399] 'SCHB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7326/9399] 'SCHC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7327/9399] 'SCHD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7328/9399] 'SCHE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7329/9399] 'SCHF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7330/9399] 'SCHG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7331/9399] 'SCHH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7332/9399] 'SCHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7333/9399] 'SCHJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7334/9399] 'SCHK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7335/9399] 'SCHL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCHL' 데이터 수집 완료.
[7336/9399] 'SCHM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7337/9399] 'SCHO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7338/9399] 'SCHP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7339/9399] 'SCHQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7340/9399] 'SCHR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7341/9399] 'SCHV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7342/9399] 'SCHW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCHW' 데이터 수집 완료.
[7343/9399] 'SCHX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7344/9399] 'SCHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7345/9399] 'SCHZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7346/9399] 'SCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCI' 데이터 수집 완료.
[7347/9399] 'SCIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7348/9399] 'SCJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7349/9399] 'SCKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCKT' 데이터 수집 완료.
[7350/9399] 'SCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCL' 데이터 수집 완료.
[7351/9399] 'SCLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7352/9399] 'SCM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCM' 데이터 수집 완료.
[7353/9399] 'SCMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7354/9399] 'SCNI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCNI' 데이터 수집 완료.
[7355/9399] 'SCNX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7356/9399] 'SCO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7357/9399] 'SCOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCOR' 데이터 수집 완료.
[7358/9399] 'SCPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7359/9399] 'SCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCS' 데이터 수집 완료.
[7360/9399] 'SCSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCSC' 데이터 수집 완료.
[7361/9399] 'SCUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7362/9399] 'SCVL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCVL' 데이터 수집 완료.
[7363/9399] 'SCWO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCWO' 데이터 수집 완료.
[7364/9399] 'SCYB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7365/9399] 'SCYX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SCYX' 데이터 수집 완료.
[7366/9399] 'SCZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7367/9399] 'SD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SD' 데이터 수집 완료.
[7368/9399] 'SDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SDA' 데이터 수집 완료.
[7369/9399] 'SDCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7370/9399] 'SDCP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7371/9399] 'SDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7372/9399] 'SDEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7373/9399] 'SDFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7374/9399] 'SDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7375/9399] 'SDGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SDGR' 데이터 수집 완료.
[7376/9399] 'SDHC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7377/9399] 'SDHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7378/9399] 'SDHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7379/9399] 'SDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7380/9399] 'SDM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7381/9399] 'SDOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7382/9399] 'SDOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SDOT' 데이터 수집 완료.
[7383/9399] 'SDOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7384/9399] 'SDP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7385/9399] 'SDRL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7386/9399] 'SDS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7387/9399] 'SDSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7388/9399] 'SDST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7389/9399] 'SDTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7390/9399] 'SDVY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7391/9399] 'SDY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7392/9399] 'SE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SE' 데이터 수집 완료.
[7393/9399] 'SEA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7394/9399] 'SEAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEAT' 데이터 수집 완료.
[7395/9399] 'SEB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEB' 데이터 수집 완료.
[7396/9399] 'SECR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7397/9399] 'SEDG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEDG' 데이터 수집 완료.
[7398/9399] 'SEE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEE' 데이터 수집 완료.
[7399/9399] 'SEED' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7400/9399] 'SEEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7401/9399] 'SEER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEER' 데이터 수집 완료.
[7402/9399] 'SEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7403/9399] 'SEG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7404/9399] 'SEGG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7405/9399] 'SEI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEI' 데이터 수집 완료.
[7406/9399] 'SEIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEIC' 데이터 수집 완료.
[7407/9399] 'SEIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7408/9399] 'SEIS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7409/9399] 'SEIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7410/9399] 'SELF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SELF' 데이터 수집 완료.
[7411/9399] 'SELX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7412/9399] 'SEM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEM' 데이터 수집 완료.
[7413/9399] 'SEMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7414/9399] 'SEMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7415/9399] 'SEMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEMR' 데이터 수집 완료.
[7416/9399] 'SENEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SENEA' 데이터 수집 완료.
[7417/9399] 'SENS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SENS' 데이터 수집 완료.
[7418/9399] 'SEPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7419/9399] 'SEPN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7420/9399] 'SEPT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7421/9399] 'SEPW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7422/9399] 'SER' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7423/9399] 'SERA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SERA' 데이터 수집 완료.
[7424/9399] 'SERV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7425/9399] 'SES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SES' 데이터 수집 완료.
[7426/9399] 'SETH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7427/9399] 'SETM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7428/9399] 'SEVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SEVN' 데이터 수집 완료.
[7429/9399] 'SEZL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7430/9399] 'SF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SF' 데이터 수집 완료.
[7431/9399] 'SFBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SFBC' 데이터 수집 완료.
[7432/9399] 'SFBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SFBS' 데이터 수집 완료.
[7433/9399] 'SFD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7434/9399] 'SFHG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7435/9399] 'SFIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SFIX' 데이터 수집 완료.
[7436/9399] 'SFL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SFL' 데이터 수집 완료.
[7437/9399] 'SFLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7438/9399] 'SFLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7439/9399] 'SFM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SFM' 데이터 수집 완료.
[7440/9399] 'SFNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SFNC' 데이터 수집 완료.
[7441/9399] 'SFST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SFST' 데이터 수집 완료.
[7442/9399] 'SFWL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7443/9399] 'SFY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7444/9399] 'SFYF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7445/9399] 'SFYX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7446/9399] 'SG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SG' 데이터 수집 완료.
[7447/9399] 'SGA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGA' 데이터 수집 완료.
[7448/9399] 'SGBX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGBX' 데이터 수집 완료.
[7449/9399] 'SGC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGC' 데이터 수집 완료.
[7450/9399] 'SGD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7451/9399] 'SGDJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7452/9399] 'SGDM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7453/9399] 'SGHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGHC' 데이터 수집 완료.
[7454/9399] 'SGHT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGHT' 데이터 수집 완료.
[7455/9399] 'SGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGI' 데이터 수집 완료.
[7456/9399] 'SGLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7457/9399] 'SGLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGLY' 데이터 수집 완료.
[7458/9399] 'SGML' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGML' 데이터 수집 완료.
[7459/9399] 'SGMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGMO' 데이터 수집 완료.
[7460/9399] 'SGMT' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7461/9399] 'SGN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7462/9399] 'SGOL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7463/9399] 'SGOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7464/9399] 'SGRP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGRP' 데이터 수집 완료.
[7465/9399] 'SGRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7466/9399] 'SGRY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGRY' 데이터 수집 완료.
[7467/9399] 'SGU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SGU' 데이터 수집 완료.
[7468/9399] 'SGVT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7469/9399] 'SH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7470/9399] 'SHAK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHAK' 데이터 수집 완료.
[7471/9399] 'SHBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHBI' 데이터 수집 완료.
[7472/9399] 'SHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHC' 데이터 수집 완료.
[7473/9399] 'SHCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7474/9399] 'SHE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7475/9399] 'SHEH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7476/9399] 'SHEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHEL' 데이터 수집 완료.
[7477/9399] 'SHEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHEN' 데이터 수집 완료.
[7478/9399] 'SHFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHFS' 데이터 수집 완료.
[7479/9399] 'SHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHG' 데이터 수집 완료.
[7480/9399] 'SHIM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7481/9399] 'SHIP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHIP' 데이터 수집 완료.
[7482/9399] 'SHLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7483/9399] 'SHLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHLS' 데이터 수집 완료.
[7484/9399] 'SHM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7485/9399] 'SHMD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7486/9399] 'SHNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7487/9399] 'SHO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHO' 데이터 수집 완료.
[7488/9399] 'SHOC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7489/9399] 'SHOO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHOO' 데이터 수집 완료.
[7490/9399] 'SHOP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHOP' 데이터 수집 완료.
[7491/9399] 'SHOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHOT' 데이터 수집 완료.
[7492/9399] 'SHPD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7493/9399] 'SHPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHPH' 데이터 수집 완료.
[7494/9399] 'SHPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7495/9399] 'SHPU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7496/9399] 'SHRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7497/9399] 'SHRY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7498/9399] 'SHUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7499/9399] 'SHV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7500/9399] 'SHW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SHW' 데이터 수집 완료.
[7501/9399] 'SHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7502/9399] 'SHYG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7503/9399] 'SHYL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7504/9399] 'SI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7505/9399] 'SIBN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIBN' 데이터 수집 완료.
[7506/9399] 'SID' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SID' 데이터 수집 완료.
[7507/9399] 'SIDU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIDU' 데이터 수집 완료.
[7508/9399] 'SIEB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIEB' 데이터 수집 완료.
[7509/9399] 'SIF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIF' 데이터 수집 완료.
[7510/9399] 'SIFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7511/9399] 'SIFY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7512/9399] 'SIG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIG' 데이터 수집 완료.
[7513/9399] 'SIGA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIGA' 데이터 수집 완료.
[7514/9399] 'SIGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIGI' 데이터 수집 완료.
[7515/9399] 'SIHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7516/9399] 'SII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SII' 데이터 수집 완료.
[7517/9399] 'SIJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7518/9399] 'SIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7519/9399] 'SILA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7520/9399] 'SILC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SILC' 데이터 수집 완료.
[7521/9399] 'SILJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7522/9399] 'SILO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SILO' 데이터 수집 완료.
[7523/9399] 'SIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIM' 데이터 수집 완료.
[7524/9399] 'SIMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7525/9399] 'SIMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIMO' 데이터 수집 완료.
[7526/9399] 'SIMS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7527/9399] 'SINT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SINT' 데이터 수집 완료.
[7528/9399] 'SIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7529/9399] 'SION' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7530/9399] 'SIRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SIRI' 데이터 수집 완료.
[7531/9399] 'SISI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SISI' 데이터 수집 완료.
[7532/9399] 'SITC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SITC' 데이터 수집 완료.
[7533/9399] 'SITE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SITE' 데이터 수집 완료.
[7534/9399] 'SITM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SITM' 데이터 수집 완료.
[7535/9399] 'SIVR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7536/9399] 'SIXA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7537/9399] 'SIXD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7538/9399] 'SIXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7539/9399] 'SIXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7540/9399] 'SIXH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7541/9399] 'SIXJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7542/9399] 'SIXL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7543/9399] 'SIXO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7544/9399] 'SIXP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7545/9399] 'SIXS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7546/9399] 'SIXZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7547/9399] 'SIZE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7548/9399] 'SJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SJ' 데이터 수집 완료.
[7549/9399] 'SJB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7550/9399] 'SJCP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7551/9399] 'SJLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7552/9399] 'SJM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SJM' 데이터 수집 완료.
[7553/9399] 'SJNK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7554/9399] 'SJT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SJT' 데이터 수집 완료.
[7555/9399] 'SKBL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7556/9399] 'SKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKE' 데이터 수집 완료.
[7557/9399] 'SKF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7558/9399] 'SKIL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKIL' 데이터 수집 완료.
[7559/9399] 'SKIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKIN' 데이터 수집 완료.
[7560/9399] 'SKK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7561/9399] 'SKLZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKLZ' 데이터 수집 완료.
[7562/9399] 'SKM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKM' 데이터 수집 완료.
[7563/9399] 'SKOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7564/9399] 'SKRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7565/9399] 'SKT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKT' 데이터 수집 완료.
[7566/9399] 'SKWD' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7567/9399] 'SKX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7568/9399] 'SKY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKY' 데이터 수집 완료.
[7569/9399] 'SKYE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKYE' 데이터 수집 완료.
[7570/9399] 'SKYH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKYH' 데이터 수집 완료.
[7571/9399] 'SKYQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7572/9399] 'SKYT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKYT' 데이터 수집 완료.
[7573/9399] 'SKYU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7574/9399] 'SKYW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKYW' 데이터 수집 완료.
[7575/9399] 'SKYX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SKYX' 데이터 수집 완료.
[7576/9399] 'SKYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7577/9399] 'SLAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLAB' 데이터 수집 완료.
[7578/9399] 'SLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLB' 데이터 수집 완료.
[7579/9399] 'SLDB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLDB' 데이터 수집 완료.
[7580/9399] 'SLDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7581/9399] 'SLDP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLDP' 데이터 수집 완료.
[7582/9399] 'SLDR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7583/9399] 'SLE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLE' 데이터 수집 완료.
[7584/9399] 'SLF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLF' 데이터 수집 완료.
[7585/9399] 'SLG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLG' 데이터 수집 완료.
[7586/9399] 'SLGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLGL' 데이터 수집 완료.
[7587/9399] 'SLGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLGN' 데이터 수집 완료.
[7588/9399] 'SLI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7589/9399] 'SLJY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7590/9399] 'SLM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLM' 데이터 수집 완료.
[7591/9399] 'SLN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLN' 데이터 수집 완료.
[7592/9399] 'SLND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLND' 데이터 수집 완료.
[7593/9399] 'SLNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLNG' 데이터 수집 완료.
[7594/9399] 'SLNH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLNH' 데이터 수집 완료.
[7595/9399] 'SLNO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLNO' 데이터 수집 완료.
[7596/9399] 'SLNZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7597/9399] 'SLON' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7598/9399] 'SLP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLP' 데이터 수집 완료.
[7599/9399] 'SLQD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7600/9399] 'SLQT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLQT' 데이터 수집 완료.
[7601/9399] 'SLRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLRC' 데이터 수집 완료.
[7602/9399] 'SLRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLRX' 데이터 수집 완료.
[7603/9399] 'SLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLS' 데이터 수집 완료.
[7604/9399] 'SLSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLSN' 데이터 수집 완료.
[7605/9399] 'SLSR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLSR' 데이터 수집 완료.
[7606/9399] 'SLTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7607/9399] 'SLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7608/9399] 'SLVM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SLVM' 데이터 수집 완료.
[7609/9399] 'SLVO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7610/9399] 'SLVR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7611/9399] 'SLX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7612/9399] 'SLXN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7613/9399] 'SLYG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7614/9399] 'SLYV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7615/9399] 'SM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SM' 데이터 수집 완료.
[7616/9399] 'SMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7617/9399] 'SMAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7618/9399] 'SMBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMBC' 데이터 수집 완료.
[7619/9399] 'SMBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMBK' 데이터 수집 완료.
[7620/9399] 'SMBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7621/9399] 'SMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMC' 데이터 수집 완료.
[7622/9399] 'SMCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7623/9399] 'SMCF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7624/9399] 'SMCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMCI' 데이터 수집 완료.
[7625/9399] 'SMCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7626/9399] 'SMCO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7627/9399] 'SMCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7628/9399] 'SMCY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7629/9399] 'SMCZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7630/9399] 'SMDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7631/9399] 'SMDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7632/9399] 'SMFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMFG' 데이터 수집 완료.
[7633/9399] 'SMG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7634/9399] 'SMH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7635/9399] 'SMHB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7636/9399] 'SMHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMHI' 데이터 수집 완료.
[7637/9399] 'SMHX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7638/9399] 'SMID' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMID' 데이터 수집 완료.
[7639/9399] 'SMIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7640/9399] 'SMIZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7641/9399] 'SMLF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7642/9399] 'SMLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7643/9399] 'SMLR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMLR' 데이터 수집 완료.
[7644/9399] 'SMLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7645/9399] 'SMMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMMT' 데이터 수집 완료.
[7646/9399] 'SMMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7647/9399] 'SMN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7648/9399] 'SMOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7649/9399] 'SMOM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7650/9399] 'SMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMP' 데이터 수집 완료.
[7651/9399] 'SMPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMPL' 데이터 수집 완료.
[7652/9399] 'SMR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMR' 데이터 수집 완료.
[7653/9399] 'SMRI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7654/9399] 'SMRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMRT' 데이터 수집 완료.
[7655/9399] 'SMSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMSI' 데이터 수집 완료.
[7656/9399] 'SMST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7657/9399] 'SMTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMTC' 데이터 수집 완료.
[7658/9399] 'SMTH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7659/9399] 'SMTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMTI' 데이터 수집 완료.
[7660/9399] 'SMTK' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7661/9399] 'SMWB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMWB' 데이터 수집 완료.
[7662/9399] 'SMX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SMX' 데이터 수집 완료.
[7663/9399] 'SMXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7664/9399] 'SN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7665/9399] 'SNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNA' 데이터 수집 완료.
[7666/9399] 'SNAL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7667/9399] 'SNAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNAP' 데이터 수집 완료.
[7668/9399] 'SNBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7669/9399] 'SNCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNCR' 데이터 수집 완료.
[7670/9399] 'SNCY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNCY' 데이터 수집 완료.
[7671/9399] 'SND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SND' 데이터 수집 완료.
[7672/9399] 'SNDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNDA' 데이터 수집 완료.
[7673/9399] 'SNDK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7674/9399] 'SNDL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNDL' 데이터 수집 완료.
[7675/9399] 'SNDR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNDR' 데이터 수집 완료.
[7676/9399] 'SNDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNDX' 데이터 수집 완료.
[7677/9399] 'SNES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNES' 데이터 수집 완료.
[7678/9399] 'SNEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNEX' 데이터 수집 완료.
[7679/9399] 'SNFCA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNFCA' 데이터 수집 완료.
[7680/9399] 'SNGX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNGX' 데이터 수집 완료.
[7681/9399] 'SNN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNN' 데이터 수집 완료.
[7682/9399] 'SNOA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNOA' 데이터 수집 완료.
[7683/9399] 'SNOW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNOW' 데이터 수집 완료.
[7684/9399] 'SNOY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7685/9399] 'SNPE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7686/9399] 'SNPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNPS' 데이터 수집 완료.
[7687/9399] 'SNSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNSE' 데이터 수집 완료.
[7688/9399] 'SNSR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7689/9399] 'SNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNT' 데이터 수집 완료.
[7690/9399] 'SNTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNTG' 데이터 수집 완료.
[7691/9399] 'SNTH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7692/9399] 'SNTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNTI' 데이터 수집 완료.
[7693/9399] 'SNV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNV' 데이터 수집 완료.
[7694/9399] 'SNWV' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7695/9399] 'SNX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNX' 데이터 수집 완료.
[7696/9399] 'SNY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SNY' 데이터 수집 완료.
[7697/9399] 'SNYR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7698/9399] 'SO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SO' 데이터 수집 완료.
[7699/9399] 'SOAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7700/9399] 'SOBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7701/9399] 'SOBR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOBR' 데이터 수집 완료.
[7702/9399] 'SOC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOC' 데이터 수집 완료.
[7703/9399] 'SOCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7704/9399] 'SOCAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7705/9399] 'SOCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7706/9399] 'SOFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOFI' 데이터 수집 완료.
[7707/9399] 'SOFL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7708/9399] 'SOFR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7709/9399] 'SOFX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7710/9399] 'SOGP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOGP' 데이터 수집 완료.
[7711/9399] 'SOHO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOHO' 데이터 수집 완료.
[7712/9399] 'SOHU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOHU' 데이터 수집 완료.
[7713/9399] 'SOL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOL' 데이터 수집 완료.
[7714/9399] 'SOLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7715/9399] 'SOLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7716/9399] 'SOLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7717/9399] 'SOLZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7718/9399] 'SON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SON' 데이터 수집 완료.
[7719/9399] 'SOND' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7720/9399] 'SONM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SONM' 데이터 수집 완료.
[7721/9399] 'SONN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7722/9399] 'SONO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SONO' 데이터 수집 완료.
[7723/9399] 'SONY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SONY' 데이터 수집 완료.
[7724/9399] 'SOPA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOPA' 데이터 수집 완료.
[7725/9399] 'SOPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOPH' 데이터 수집 완료.
[7726/9399] 'SOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOR' 데이터 수집 완료.
[7727/9399] 'SORA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7728/9399] 'SOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOS' 데이터 수집 완료.
[7729/9399] 'SOTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOTK' 데이터 수집 완료.
[7730/9399] 'SOUL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7731/9399] 'SOUN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOUN' 데이터 수집 완료.
[7732/9399] 'SOUX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7733/9399] 'SOVF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7734/9399] 'SOWG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SOWG' 데이터 수집 완료.
[7735/9399] 'SOXL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7736/9399] 'SOXQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7737/9399] 'SOXS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7738/9399] 'SOXX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7739/9399] 'SOXY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7740/9399] 'SOYB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7741/9399] 'SPAB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7742/9399] 'SPAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7743/9399] 'SPAM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7744/9399] 'SPAQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7745/9399] 'SPB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPB' 데이터 수집 완료.
[7746/9399] 'SPBC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7747/9399] 'SPBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7748/9399] 'SPBW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7749/9399] 'SPBX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7750/9399] 'SPC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7751/9399] 'SPCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPCB' 데이터 수집 완료.
[7752/9399] 'SPCE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPCE' 데이터 수집 완료.
[7753/9399] 'SPCX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7754/9399] 'SPCY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7755/9399] 'SPD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7756/9399] 'SPDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7757/9399] 'SPDN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7758/9399] 'SPDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7759/9399] 'SPDW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7760/9399] 'SPE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPE' 데이터 수집 완료.
[7761/9399] 'SPEG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7762/9399] 'SPEGU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7763/9399] 'SPEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7764/9399] 'SPEU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7765/9399] 'SPFF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7766/9399] 'SPFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPFI' 데이터 수집 완료.
[7767/9399] 'SPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPG' 데이터 수집 완료.
[7768/9399] 'SPGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPGI' 데이터 수집 완료.
[7769/9399] 'SPGM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7770/9399] 'SPGP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7771/9399] 'SPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPH' 데이터 수집 완료.
[7772/9399] 'SPHB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7773/9399] 'SPHD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7774/9399] 'SPHL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7775/9399] 'SPHQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7776/9399] 'SPHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7777/9399] 'SPHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7778/9399] 'SPIB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7779/9399] 'SPIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7780/9399] 'SPIR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPIR' 데이터 수집 완료.
[7781/9399] 'SPKL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7782/9399] 'SPLB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7783/9399] 'SPLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7784/9399] 'SPLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7785/9399] 'SPMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7786/9399] 'SPMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7787/9399] 'SPMD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7788/9399] 'SPMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7789/9399] 'SPNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPNS' 데이터 수집 완료.
[7790/9399] 'SPNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPNT' 데이터 수집 완료.
[7791/9399] 'SPOK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPOK' 데이터 수집 완료.
[7792/9399] 'SPOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPOT' 데이터 수집 완료.
[7793/9399] 'SPPL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7794/9399] 'SPPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7795/9399] 'SPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7796/9399] 'SPRB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPRB' 데이터 수집 완료.
[7797/9399] 'SPRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPRC' 데이터 수집 완료.
[7798/9399] 'SPRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7799/9399] 'SPRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPRO' 데이터 수집 완료.
[7800/9399] 'SPRU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPRU' 데이터 수집 완료.
[7801/9399] 'SPRX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7802/9399] 'SPRY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPRY' 데이터 수집 완료.
[7803/9399] 'SPSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7804/9399] 'SPSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPSC' 데이터 수집 완료.
[7805/9399] 'SPSK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7806/9399] 'SPSM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7807/9399] 'SPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPT' 데이터 수집 완료.
[7808/9399] 'SPTB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7809/9399] 'SPTE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7810/9399] 'SPTI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7811/9399] 'SPTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7812/9399] 'SPTM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7813/9399] 'SPTN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPTN' 데이터 수집 완료.
[7814/9399] 'SPTS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7815/9399] 'SPUC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7816/9399] 'SPUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7817/9399] 'SPUT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7818/9399] 'SPUU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7819/9399] 'SPVM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7820/9399] 'SPVU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7821/9399] 'SPWH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPWH' 데이터 수집 완료.
[7822/9399] 'SPWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7823/9399] 'SPWR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7824/9399] 'SPXC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPXC' 데이터 수집 완료.
[7825/9399] 'SPXD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7826/9399] 'SPXE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7827/9399] 'SPXL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7828/9399] 'SPXN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7829/9399] 'SPXS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7830/9399] 'SPXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7831/9399] 'SPXU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7832/9399] 'SPXV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7833/9399] 'SPXX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SPXX' 데이터 수집 완료.
[7834/9399] 'SPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7835/9399] 'SPYC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7836/9399] 'SPYD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7837/9399] 'SPYG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7838/9399] 'SPYQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7839/9399] 'SPYT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7840/9399] 'SPYU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7841/9399] 'SPYV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7842/9399] 'SPYX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7843/9399] 'SQEW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7844/9399] 'SQFT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SQFT' 데이터 수집 완료.
[7845/9399] 'SQLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7846/9399] 'SQM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SQM' 데이터 수집 완료.
[7847/9399] 'SQNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SQNS' 데이터 수집 완료.
[7848/9399] 'SQQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7849/9399] 'SR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SR' 데이터 수집 완료.
[7850/9399] 'SRAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRAD' 데이터 수집 완료.
[7851/9399] 'SRBK' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7852/9399] 'SRCE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRCE' 데이터 수집 완료.
[7853/9399] 'SRDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRDX' 데이터 수집 완료.
[7854/9399] 'SRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRE' 데이터 수집 완료.
[7855/9399] 'SRET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7856/9399] 'SRFM' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7857/9399] 'SRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRG' 데이터 수집 완료.
[7858/9399] 'SRHQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7859/9399] 'SRHR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7860/9399] 'SRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRI' 데이터 수집 완료.
[7861/9399] 'SRL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRL' 데이터 수집 완료.
[7862/9399] 'SRLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7863/9399] 'SROI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7864/9399] 'SRPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRPT' 데이터 수집 완료.
[7865/9399] 'SRRK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRRK' 데이터 수집 완료.
[7866/9399] 'SRS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7867/9399] 'SRTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRTA' 데이터 수집 완료.
[7868/9399] 'SRTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRTS' 데이터 수집 완료.
[7869/9399] 'SRTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7870/9399] 'SRV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7871/9399] 'SRVR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7872/9399] 'SRXH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7873/9399] 'SRZN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SRZN' 데이터 수집 완료.
[7874/9399] 'SSB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSB' 데이터 수집 완료.
[7875/9399] 'SSBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSBI' 데이터 수집 완료.
[7876/9399] 'SSD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSD' 데이터 수집 완료.
[7877/9399] 'SSEAU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7878/9399] 'SSFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7879/9399] 'SSG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7880/9399] 'SSII' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7881/9399] 'SSKN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSKN' 데이터 수집 완료.
[7882/9399] 'SSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSL' 데이터 수집 완료.
[7883/9399] 'SSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7884/9399] 'SSNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSNC' 데이터 수집 완료.
[7885/9399] 'SSO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7886/9399] 'SSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSP' 데이터 수집 완료.
[7887/9399] 'SSPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7888/9399] 'SSPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7889/9399] 'SSRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSRM' 데이터 수집 완료.
[7890/9399] 'SSSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSSS' 데이터 수집 완료.
[7891/9399] 'SST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SST' 데이터 수집 완료.
[7892/9399] 'SSTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSTI' 데이터 수집 완료.
[7893/9399] 'SSTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSTK' 데이터 수집 완료.
[7894/9399] 'SSUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7895/9399] 'SSXU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7896/9399] 'SSYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SSYS' 데이터 수집 완료.
[7897/9399] 'ST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ST' 데이터 수집 완료.
[7898/9399] 'STAA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STAA' 데이터 수집 완료.
[7899/9399] 'STAG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STAG' 데이터 수집 완료.
[7900/9399] 'STAI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7901/9399] 'STAK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7902/9399] 'STAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7903/9399] 'STBA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STBA' 데이터 수집 완료.
[7904/9399] 'STC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STC' 데이터 수집 완료.
[7905/9399] 'STCE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7906/9399] 'STE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STE' 데이터 수집 완료.
[7907/9399] 'STEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STEC' 데이터 수집 완료.
[7908/9399] 'STEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STEL' 데이터 수집 완료.
[7909/9399] 'STEM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7910/9399] 'STEP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STEP' 데이터 수집 완료.
[7911/9399] 'STEW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STEW' 데이터 수집 완료.
[7912/9399] 'STEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7913/9399] 'STFS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7914/9399] 'STG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STG' 데이터 수집 완료.
[7915/9399] 'STGW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STGW' 데이터 수집 완료.
[7916/9399] 'STHH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7917/9399] 'STHO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7918/9399] 'STI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7919/9399] 'STIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STIM' 데이터 수집 완료.
[7920/9399] 'STIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7921/9399] 'STK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7922/9399] 'STKE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STKE' 데이터 수집 완료.
[7923/9399] 'STKH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STKH' 데이터 수집 완료.
[7924/9399] 'STKL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STKL' 데이터 수집 완료.
[7925/9399] 'STKS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STKS' 데이터 수집 완료.
[7926/9399] 'STLA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STLA' 데이터 수집 완료.
[7927/9399] 'STLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STLD' 데이터 수집 완료.
[7928/9399] 'STM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STM' 데이터 수집 완료.
[7929/9399] 'STN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STN' 데이터 수집 완료.
[7930/9399] 'STNC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7931/9399] 'STNE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STNE' 데이터 수집 완료.
[7932/9399] 'STNG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STNG' 데이터 수집 완료.
[7933/9399] 'STOK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STOK' 데이터 수집 완료.
[7934/9399] 'STPZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7935/9399] 'STRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STRA' 데이터 수집 완료.
[7936/9399] 'STRC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7937/9399] 'STRL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STRL' 데이터 수집 완료.
[7938/9399] 'STRN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7939/9399] 'STRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STRO' 데이터 수집 완료.
[7940/9399] 'STRR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STRR' 데이터 수집 완료.
[7941/9399] 'STRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STRS' 데이터 수집 완료.
[7942/9399] 'STRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STRT' 데이터 수집 완료.
[7943/9399] 'STRV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7944/9399] 'STRW' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7945/9399] 'STRZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7946/9399] 'STSS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STSS' 데이터 수집 완료.
[7947/9399] 'STT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STT' 데이터 수집 완료.
[7948/9399] 'STTK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STTK' 데이터 수집 완료.
[7949/9399] 'STUB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7950/9399] 'STVN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STVN' 데이터 수집 완료.
[7951/9399] 'STWD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STWD' 데이터 수집 완료.
[7952/9399] 'STX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[7953/9399] 'STXD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7954/9399] 'STXE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7955/9399] 'STXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7956/9399] 'STXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7957/9399] 'STXK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7958/9399] 'STXM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7959/9399] 'STXS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STXS' 데이터 수집 완료.
[7960/9399] 'STXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7961/9399] 'STXV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7962/9399] 'STZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'STZ' 데이터 수집 완료.
[7963/9399] 'SU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SU' 데이터 수집 완료.
[7964/9399] 'SUB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7965/9399] 'SUGP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7966/9399] 'SUI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SUI' 데이터 수집 완료.
[7967/9399] 'SUIG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SUIG' 데이터 수집 완료.
[7968/9399] 'SUN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SUN' 데이터 수집 완료.
[7969/9399] 'SUNE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SUNE' 데이터 수집 완료.
[7970/9399] 'SUNS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7971/9399] 'SUPL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7972/9399] 'SUPN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SUPN' 데이터 수집 완료.
[7973/9399] 'SUPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7974/9399] 'SUPV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SUPV' 데이터 수집 완료.
[7975/9399] 'SUPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7976/9399] 'SURE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7977/9399] 'SURG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SURG' 데이터 수집 완료.
[7978/9399] 'SURI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7979/9399] 'SUSA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7980/9399] 'SUSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7981/9399] 'SUSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7982/9399] 'SUSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7983/9399] 'SUUN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7984/9399] 'SUZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SUZ' 데이터 수집 완료.
[7985/9399] 'SVACU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7986/9399] 'SVC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SVC' 데이터 수집 완료.
[7987/9399] 'SVCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7988/9399] 'SVCO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7989/9399] 'SVII' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7990/9399] 'SVM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SVM' 데이터 수집 완료.
[7991/9399] 'SVOL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7992/9399] 'SVRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SVRA' 데이터 수집 완료.
[7993/9399] 'SVRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SVRE' 데이터 수집 완료.
[7994/9399] 'SVV' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[7995/9399] 'SW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SW' 데이터 수집 완료.
[7996/9399] 'SWAG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SWAG' 데이터 수집 완료.
[7997/9399] 'SWAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[7998/9399] 'SWBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SWBI' 데이터 수집 완료.
[7999/9399] 'SWIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SWIM' 데이터 수집 완료.
[8000/9399] 'SWIN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8001/9399] 'SWK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SWK' 데이터 수집 완료.
[8002/9399] 'SWKH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SWKH' 데이터 수집 완료.
[8003/9399] 'SWKS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SWKS' 데이터 수집 완료.
[8004/9399] 'SWP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8005/9399] 'SWVL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8006/9399] 'SWX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SWX' 데이터 수집 완료.
[8007/9399] 'SWZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8008/9399] 'SXC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SXC' 데이터 수집 완료.
[8009/9399] 'SXI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SXI' 데이터 수집 완료.
[8010/9399] 'SXQG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8011/9399] 'SXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SXT' 데이터 수집 완료.
[8012/9399] 'SXTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SXTC' 데이터 수집 완료.
[8013/9399] 'SXTP' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8014/9399] 'SY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SY' 데이터 수집 완료.
[8015/9399] 'SYBT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYBT' 데이터 수집 완료.
[8016/9399] 'SYBX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYBX' 데이터 수집 완료.
[8017/9399] 'SYF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYF' 데이터 수집 완료.
[8018/9399] 'SYFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8019/9399] 'SYK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYK' 데이터 수집 완료.
[8020/9399] 'SYM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYM' 데이터 수집 완료.
[8021/9399] 'SYNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYNA' 데이터 수집 완료.
[8022/9399] 'SYNB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8023/9399] 'SYNX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8024/9399] 'SYPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYPR' 데이터 수집 완료.
[8025/9399] 'SYRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYRE' 데이터 수집 완료.
[8026/9399] 'SYTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYTA' 데이터 수집 완료.
[8027/9399] 'SYY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'SYY' 데이터 수집 완료.
[8028/9399] 'SYZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8029/9399] 'SZK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8030/9399] 'SZNE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8031/9399] 'SZZL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8032/9399] 'T' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'T' 데이터 수집 완료.
[8033/9399] 'TAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TAC' 데이터 수집 완료.
[8034/9399] 'TACH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8035/9399] 'TACK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8036/9399] 'TACO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8037/9399] 'TACT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TACT' 데이터 수집 완료.
[8038/9399] 'TAFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8039/9399] 'TAFL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8040/9399] 'TAFM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8041/9399] 'TAGG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8042/9399] 'TAGS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8043/9399] 'TAIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TAIT' 데이터 수집 완료.
[8044/9399] 'TAK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TAK' 데이터 수집 완료.
[8045/9399] 'TAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TAL' 데이터 수집 완료.
[8046/9399] 'TALK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TALK' 데이터 수집 완료.
[8047/9399] 'TALO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TALO' 데이터 수집 완료.
[8048/9399] 'TAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8049/9399] 'TANH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TANH' 데이터 수집 완료.
[8050/9399] 'TAOP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TAOP' 데이터 수집 완료.
[8051/9399] 'TAOX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TAOX' 데이터 수집 완료.
[8052/9399] 'TAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TAP' 데이터 수집 완료.
[8053/9399] 'TARA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TARA' 데이터 수집 완료.
[8054/9399] 'TARK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8055/9399] 'TARS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TARS' 데이터 수집 완료.
[8056/9399] 'TASK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TASK' 데이터 수집 완료.
[8057/9399] 'TATT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TATT' 데이터 수집 완료.
[8058/9399] 'TAVI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8059/9399] 'TAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8060/9399] 'TAXE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8061/9399] 'TAXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8062/9399] 'TAXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8063/9399] 'TAXM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8064/9399] 'TAXS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8065/9399] 'TAXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8066/9399] 'TAXX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8067/9399] 'TAYD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TAYD' 데이터 수집 완료.
[8068/9399] 'TBBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8069/9399] 'TBBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TBBK' 데이터 수집 완료.
[8070/9399] 'TBCH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TBCH' 데이터 수집 완료.
[8071/9399] 'TBF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8072/9399] 'TBFC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8073/9399] 'TBFG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8074/9399] 'TBG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8075/9399] 'TBH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8076/9399] 'TBHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8077/9399] 'TBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TBI' 데이터 수집 완료.
[8078/9399] 'TBIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8079/9399] 'TBLA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TBLA' 데이터 수집 완료.
[8080/9399] 'TBLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8081/9399] 'TBLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8082/9399] 'TBLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8083/9399] 'TBMC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8084/9399] 'TBN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8085/9399] 'TBPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TBPH' 데이터 수집 완료.
[8086/9399] 'TBRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TBRG' 데이터 수집 완료.
[8087/9399] 'TBT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8088/9399] 'TBUX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8089/9399] 'TBX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8090/9399] 'TC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TC' 데이터 수집 완료.
[8091/9399] 'TCAF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8092/9399] 'TCAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8093/9399] 'TCAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8094/9399] 'TCBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCBI' 데이터 수집 완료.
[8095/9399] 'TCBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCBK' 데이터 수집 완료.
[8096/9399] 'TCBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCBS' 데이터 수집 완료.
[8097/9399] 'TCBX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCBX' 데이터 수집 완료.
[8098/9399] 'TCHI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8099/9399] 'TCHP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8100/9399] 'TCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCI' 데이터 수집 완료.
[8101/9399] 'TCMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCMD' 데이터 수집 완료.
[8102/9399] 'TCOM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCOM' 데이터 수집 완료.
[8103/9399] 'TCPB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8104/9399] 'TCPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCPC' 데이터 수집 완료.
[8105/9399] 'TCRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCRT' 데이터 수집 완료.
[8106/9399] 'TCRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TCRX' 데이터 수집 완료.
[8107/9399] 'TCV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8108/9399] 'TCX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8109/9399] 'TD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TD' 데이터 수집 완료.
[8110/9399] 'TDAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8111/9399] 'TDC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TDC' 데이터 수집 완료.
[8112/9399] 'TDF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TDF' 데이터 수집 완료.
[8113/9399] 'TDG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8114/9399] 'TDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8115/9399] 'TDIC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8116/9399] 'TDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8117/9399] 'TDOC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TDOC' 데이터 수집 완료.
[8118/9399] 'TDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TDS' 데이터 수집 완료.
[8119/9399] 'TDSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8120/9399] 'TDSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8121/9399] 'TDTF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8122/9399] 'TDTH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8123/9399] 'TDTT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8124/9399] 'TDUP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TDUP' 데이터 수집 완료.
[8125/9399] 'TDVG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8126/9399] 'TDW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TDW' 데이터 수집 완료.
[8127/9399] 'TDY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TDY' 데이터 수집 완료.
[8128/9399] 'TE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TE' 데이터 수집 완료.
[8129/9399] 'TEAD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TEAD' 데이터 수집 완료.
[8130/9399] 'TEAF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8131/9399] 'TEAM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TEAM' 데이터 수집 완료.
[8132/9399] 'TEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8133/9399] 'TECB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8134/9399] 'TECH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TECH' 데이터 수집 완료.
[8135/9399] 'TECK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TECK' 데이터 수집 완료.
[8136/9399] 'TECL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8137/9399] 'TECS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8138/9399] 'TECTP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8139/9399] 'TECX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8140/9399] 'TEF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TEF' 데이터 수집 완료.
[8141/9399] 'TEI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TEI' 데이터 수집 완료.
[8142/9399] 'TEK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8143/9399] 'TEKX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8144/9399] 'TEKY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8145/9399] 'TEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TEL' 데이터 수집 완료.
[8146/9399] 'TELA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TELA' 데이터 수집 완료.
[8147/9399] 'TELO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8148/9399] 'TEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8149/9399] 'TEMP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8150/9399] 'TEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TEN' 데이터 수집 완료.
[8151/9399] 'TENB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TENB' 데이터 수집 완료.
[8152/9399] 'TENX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TENX' 데이터 수집 완료.
[8153/9399] 'TEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TEO' 데이터 수집 완료.
[8154/9399] 'TEQI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8155/9399] 'TER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TER' 데이터 수집 완료.
[8156/9399] 'TERN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TERN' 데이터 수집 완료.
[8157/9399] 'TESL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8158/9399] 'TEVA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TEVA' 데이터 수집 완료.
[8159/9399] 'TEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TEX' 데이터 수집 완료.
[8160/9399] 'TEXN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8161/9399] 'TFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TFC' 데이터 수집 완료.
[8162/9399] 'TFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8163/9399] 'TFII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TFII' 데이터 수집 완료.
[8164/9399] 'TFIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TFIN' 데이터 수집 완료.
[8165/9399] 'TFLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8166/9399] 'TFLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8167/9399] 'TFNS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8168/9399] 'TFPM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TFPM' 데이터 수집 완료.
[8169/9399] 'TFPN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8170/9399] 'TFSL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TFSL' 데이터 수집 완료.
[8171/9399] 'TFX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TFX' 데이터 수집 완료.
[8172/9399] 'TG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TG' 데이터 수집 완료.
[8173/9399] 'TGB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TGB' 데이터 수집 완료.
[8174/9399] 'TGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8175/9399] 'TGEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TGEN' 데이터 수집 완료.
[8176/9399] 'TGHL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8177/9399] 'TGL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TGL' 데이터 수집 완료.
[8178/9399] 'TGLB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8179/9399] 'TGLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TGLS' 데이터 수집 완료.
[8180/9399] 'TGNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TGNA' 데이터 수집 완료.
[8181/9399] 'TGRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8182/9399] 'TGRW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8183/9399] 'TGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TGS' 데이터 수집 완료.
[8184/9399] 'TGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TGT' 데이터 수집 완료.
[8185/9399] 'TGTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TGTX' 데이터 수집 완료.
[8186/9399] 'TH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TH' 데이터 수집 완료.
[8187/9399] 'THAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'THAR' 데이터 수집 완료.
[8188/9399] 'THC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'THC' 데이터 수집 완료.
[8189/9399] 'THCH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8190/9399] 'THD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8191/9399] 'THEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8192/9399] 'THFF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'THFF' 데이터 수집 완료.
[8193/9399] 'THG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'THG' 데이터 수집 완료.
[8194/9399] 'THH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8195/9399] 'THIR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8196/9399] 'THLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8197/9399] 'THM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'THM' 데이터 수집 완료.
[8198/9399] 'THMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8199/9399] 'THNQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8200/9399] 'THNR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8201/9399] 'THO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8202/9399] 'THQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8203/9399] 'THR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'THR' 데이터 수집 완료.
[8204/9399] 'THRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'THRM' 데이터 수집 완료.
[8205/9399] 'THRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8206/9399] 'THRY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'THRY' 데이터 수집 완료.
[8207/9399] 'THS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'THS' 데이터 수집 완료.
[8208/9399] 'THTA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8209/9399] 'THTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8210/9399] 'THW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8211/9399] 'THY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8212/9399] 'THYF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8213/9399] 'TIC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8214/9399] 'TIER' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8215/9399] 'TIGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TIGO' 데이터 수집 완료.
[8216/9399] 'TIGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TIGR' 데이터 수집 완료.
[8217/9399] 'TIIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8218/9399] 'TIL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TIL' 데이터 수집 완료.
[8219/9399] 'TILE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TILE' 데이터 수집 완료.
[8220/9399] 'TILL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8221/9399] 'TIMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TIMB' 데이터 수집 완료.
[8222/9399] 'TIME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8223/9399] 'TINT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8224/9399] 'TINY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8225/9399] 'TIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8226/9399] 'TIPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8227/9399] 'TIPB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8228/9399] 'TIPC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8229/9399] 'TIPD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8230/9399] 'TIPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TIPT' 데이터 수집 완료.
[8231/9399] 'TIPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8232/9399] 'TIPZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8233/9399] 'TIRX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8234/9399] 'TISI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TISI' 데이터 수집 완료.
[8235/9399] 'TITN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TITN' 데이터 수집 완료.
[8236/9399] 'TIVC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TIVC' 데이터 수집 완료.
[8237/9399] 'TIXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TIXT' 데이터 수집 완료.
[8238/9399] 'TJX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TJX' 데이터 수집 완료.
[8239/9399] 'TK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TK' 데이터 수집 완료.
[8240/9399] 'TKC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TKC' 데이터 수집 완료.
[8241/9399] 'TKLF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TKLF' 데이터 수집 완료.
[8242/9399] 'TKNO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TKNO' 데이터 수집 완료.
[8243/9399] 'TKO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TKO' 데이터 수집 완료.
[8244/9399] 'TKR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TKR' 데이터 수집 완료.
[8245/9399] 'TLCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8246/9399] 'TLF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TLF' 데이터 수집 완료.
[8247/9399] 'TLH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8248/9399] 'TLIH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8249/9399] 'TLK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TLK' 데이터 수집 완료.
[8250/9399] 'TLN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8251/9399] 'TLNCU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8252/9399] 'TLPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TLPH' 데이터 수집 완료.
[8253/9399] 'TLRY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TLRY' 데이터 수집 완료.
[8254/9399] 'TLS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TLS' 데이터 수집 완료.
[8255/9399] 'TLSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TLSA' 데이터 수집 완료.
[8256/9399] 'TLSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8257/9399] 'TLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8258/9399] 'TLTD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8259/9399] 'TLTE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8260/9399] 'TLX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8261/9399] 'TLYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TLYS' 데이터 수집 완료.
[8262/9399] 'TM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TM' 데이터 수집 완료.
[8263/9399] 'TMB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8264/9399] 'TMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TMC' 데이터 수집 완료.
[8265/9399] 'TMCI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TMCI' 데이터 수집 완료.
[8266/9399] 'TMDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8267/9399] 'TMDX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TMDX' 데이터 수집 완료.
[8268/9399] 'TME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TME' 데이터 수집 완료.
[8269/9399] 'TMED' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8270/9399] 'TMET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8271/9399] 'TMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8272/9399] 'TMH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8273/9399] 'TMHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TMHC' 데이터 수집 완료.
[8274/9399] 'TMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TMO' 데이터 수집 완료.
[8275/9399] 'TMP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TMP' 데이터 수집 완료.
[8276/9399] 'TMQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TMQ' 데이터 수집 완료.
[8277/9399] 'TMSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8278/9399] 'TMUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TMUS' 데이터 수집 완료.
[8279/9399] 'TMV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8280/9399] 'TNA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8281/9399] 'TNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TNC' 데이터 수집 완료.
[8282/9399] 'TNDM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TNDM' 데이터 수집 완료.
[8283/9399] 'TNET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TNET' 데이터 수집 완료.
[8284/9399] 'TNFA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TNFA' 데이터 수집 완료.
[8285/9399] 'TNGX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TNGX' 데이터 수집 완료.
[8286/9399] 'TNGY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8287/9399] 'TNK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TNK' 데이터 수집 완료.
[8288/9399] 'TNL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8289/9399] 'TNMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8290/9399] 'TNON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TNON' 데이터 수집 완료.
[8291/9399] 'TNXP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TNXP' 데이터 수집 완료.
[8292/9399] 'TNYA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TNYA' 데이터 수집 완료.
[8293/9399] 'TOAK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8294/9399] 'TOGA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8295/9399] 'TOI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOI' 데이터 수집 완료.
[8296/9399] 'TOK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8297/9399] 'TOL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOL' 데이터 수집 완료.
[8298/9399] 'TOLZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8299/9399] 'TOMZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOMZ' 데이터 수집 완료.
[8300/9399] 'TONX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TONX' 데이터 수집 완료.
[8301/9399] 'TOON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOON' 데이터 수집 완료.
[8302/9399] 'TOP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOP' 데이터 수집 완료.
[8303/9399] 'TOPC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8304/9399] 'TOPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8305/9399] 'TOPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOPS' 데이터 수집 완료.
[8306/9399] 'TOPT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8307/9399] 'TORO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8308/9399] 'TOST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOST' 데이터 수집 완료.
[8309/9399] 'TOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8310/9399] 'TOTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8311/9399] 'TOTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8312/9399] 'TOUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOUR' 데이터 수집 완료.
[8313/9399] 'TOUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8314/9399] 'TOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8315/9399] 'TOVX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOVX' 데이터 수집 완료.
[8316/9399] 'TOWN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOWN' 데이터 수집 완료.
[8317/9399] 'TOYO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TOYO' 데이터 수집 완료.
[8318/9399] 'TPB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TPB' 데이터 수집 완료.
[8319/9399] 'TPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TPC' 데이터 수집 완료.
[8320/9399] 'TPCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TPCS' 데이터 수집 완료.
[8321/9399] 'TPET' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8322/9399] 'TPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TPG' 데이터 수집 완료.
[8323/9399] 'TPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TPH' 데이터 수집 완료.
[8324/9399] 'TPHD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8325/9399] 'TPHE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8326/9399] 'TPIF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8327/9399] 'TPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TPL' 데이터 수집 완료.
[8328/9399] 'TPLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8329/9399] 'TPLE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8330/9399] 'TPLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8331/9399] 'TPOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8332/9399] 'TPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TPR' 데이터 수집 완료.
[8333/9399] 'TPSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8334/9399] 'TPST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TPST' 데이터 수집 완료.
[8335/9399] 'TPVG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TPVG' 데이터 수집 완료.
[8336/9399] 'TPYP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8337/9399] 'TPZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8338/9399] 'TQQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8339/9399] 'TQQY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8340/9399] 'TR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TR' 데이터 수집 완료.
[8341/9399] 'TRAK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRAK' 데이터 수집 완료.
[8342/9399] 'TRAW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRAW' 데이터 수집 완료.
[8343/9399] 'TRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRC' 데이터 수집 완료.
[8344/9399] 'TRDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRDA' 데이터 수집 완료.
[8345/9399] 'TREE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TREE' 데이터 수집 완료.
[8346/9399] 'TREX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TREX' 데이터 수집 완료.
[8347/9399] 'TRFK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8348/9399] 'TRFM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8349/9399] 'TRGP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRGP' 데이터 수집 완료.
[8350/9399] 'TRI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRI' 데이터 수집 완료.
[8351/9399] 'TRIB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8352/9399] 'TRIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRIN' 데이터 수집 완료.
[8353/9399] 'TRIP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRIP' 데이터 수집 완료.
[8354/9399] 'TRMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRMB' 데이터 수집 완료.
[8355/9399] 'TRMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRMD' 데이터 수집 완료.
[8356/9399] 'TRMK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRMK' 데이터 수집 완료.
[8357/9399] 'TRML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8358/9399] 'TRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRN' 데이터 수집 완료.
[8359/9399] 'TRND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8360/9399] 'TRNO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRNO' 데이터 수집 완료.
[8361/9399] 'TRNR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8362/9399] 'TRNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRNS' 데이터 수집 완료.
[8363/9399] 'TRON' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8364/9399] 'TROO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TROO' 데이터 수집 완료.
[8365/9399] 'TROW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TROW' 데이터 수집 완료.
[8366/9399] 'TROX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TROX' 데이터 수집 완료.
[8367/9399] 'TRP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRP' 데이터 수집 완료.
[8368/9399] 'TRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRS' 데이터 수집 완료.
[8369/9399] 'TRSG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8370/9399] 'TRST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRST' 데이터 수집 완료.
[8371/9399] 'TRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRT' 데이터 수집 완료.
[8372/9399] 'TRTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRTX' 데이터 수집 완료.
[8373/9399] 'TRU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRU' 데이터 수집 완료.
[8374/9399] 'TRUD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8375/9399] 'TRUE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRUE' 데이터 수집 완료.
[8376/9399] 'TRUG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8377/9399] 'TRUP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRUP' 데이터 수집 완료.
[8378/9399] 'TRUT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8379/9399] 'TRV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRV' 데이터 수집 완료.
[8380/9399] 'TRVG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRVG' 데이터 수집 완료.
[8381/9399] 'TRVI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRVI' 데이터 수집 완료.
[8382/9399] 'TRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TRX' 데이터 수집 완료.
[8383/9399] 'TS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TS' 데이터 수집 완료.
[8384/9399] 'TSAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSAT' 데이터 수집 완료.
[8385/9399] 'TSBK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSBK' 데이터 수집 완료.
[8386/9399] 'TSCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSCO' 데이터 수집 완료.
[8387/9399] 'TSDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8388/9399] 'TSE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8389/9399] 'TSEC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8390/9399] 'TSEL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8391/9399] 'TSEM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSEM' 데이터 수집 완료.
[8392/9399] 'TSHA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSHA' 데이터 수집 완료.
[8393/9399] 'TSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSI' 데이터 수집 완료.
[8394/9399] 'TSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8395/9399] 'TSLA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSLA' 데이터 수집 완료.
[8396/9399] 'TSLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8397/9399] 'TSLI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8398/9399] 'TSLL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8399/9399] 'TSLQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8400/9399] 'TSLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8401/9399] 'TSLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8402/9399] 'TSLX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSLX' 데이터 수집 완료.
[8403/9399] 'TSLY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8404/9399] 'TSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSM' 데이터 수집 완료.
[8405/9399] 'TSME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8406/9399] 'TSMG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8407/9399] 'TSMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8408/9399] 'TSMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8409/9399] 'TSMY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8410/9399] 'TSMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8411/9399] 'TSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSN' 데이터 수집 완료.
[8412/9399] 'TSPA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8413/9399] 'TSPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8414/9399] 'TSQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8415/9399] 'TSSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TSSI' 데이터 수집 완료.
[8416/9399] 'TSYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8417/9399] 'TT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TT' 데이터 수집 완료.
[8418/9399] 'TTAM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8419/9399] 'TTAN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8420/9399] 'TTC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTC' 데이터 수집 완료.
[8421/9399] 'TTD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTD' 데이터 수집 완료.
[8422/9399] 'TTDU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8423/9399] 'TTE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTE' 데이터 수집 완료.
[8424/9399] 'TTEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTEC' 데이터 수집 완료.
[8425/9399] 'TTEK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTEK' 데이터 수집 완료.
[8426/9399] 'TTEQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8427/9399] 'TTGT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTGT' 데이터 수집 완료.
[8428/9399] 'TTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTI' 데이터 수집 완료.
[8429/9399] 'TTMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTMI' 데이터 수집 완료.
[8430/9399] 'TTNP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTNP' 데이터 수집 완료.
[8431/9399] 'TTSH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTSH' 데이터 수집 완료.
[8432/9399] 'TTT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8433/9399] 'TTWO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TTWO' 데이터 수집 완료.
[8434/9399] 'TU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TU' 데이터 수집 완료.
[8435/9399] 'TUA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8436/9399] 'TUG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8437/9399] 'TUGN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8438/9399] 'TUR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8439/9399] 'TURB' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8440/9399] 'TURF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8441/9399] 'TURN' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8442/9399] 'TUSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8443/9399] 'TUSK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TUSK' 데이터 수집 완료.
[8444/9399] 'TUYA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TUYA' 데이터 수집 완료.
[8445/9399] 'TV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TV' 데이터 수집 완료.
[8446/9399] 'TVA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8447/9399] 'TVAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8448/9399] 'TVAL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8449/9399] 'TVGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8450/9399] 'TVRD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8451/9399] 'TVTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TVTX' 데이터 수집 완료.
[8452/9399] 'TW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TW' 데이터 수집 완료.
[8453/9399] 'TWFG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8454/9399] 'TWG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8455/9399] 'TWI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TWI' 데이터 수집 완료.
[8456/9399] 'TWIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TWIN' 데이터 수집 완료.
[8457/9399] 'TWLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TWLO' 데이터 수집 완료.
[8458/9399] 'TWM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8459/9399] 'TWN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TWN' 데이터 수집 완료.
[8460/9399] 'TWNP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8461/9399] 'TWO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TWO' 데이터 수집 완료.
[8462/9399] 'TWST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TWST' 데이터 수집 완료.
[8463/9399] 'TX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TX' 데이터 수집 완료.
[8464/9399] 'TXG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TXG' 데이터 수집 완료.
[8465/9399] 'TXMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TXMD' 데이터 수집 완료.
[8466/9399] 'TXN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TXN' 데이터 수집 완료.
[8467/9399] 'TXNM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TXNM' 데이터 수집 완료.
[8468/9399] 'TXO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8469/9399] 'TXRH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TXRH' 데이터 수집 완료.
[8470/9399] 'TXS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8471/9399] 'TXSS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8472/9399] 'TXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TXT' 데이터 수집 완료.
[8473/9399] 'TXUE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8474/9399] 'TXUG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8475/9399] 'TXXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8476/9399] 'TY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TY' 데이터 수집 완료.
[8477/9399] 'TYD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8478/9399] 'TYG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TYG' 데이터 수집 완료.
[8479/9399] 'TYGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TYGO' 데이터 수집 완료.
[8480/9399] 'TYL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TYL' 데이터 수집 완료.
[8481/9399] 'TYLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8482/9399] 'TYO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8483/9399] 'TYRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TYRA' 데이터 수집 완료.
[8484/9399] 'TZA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8485/9399] 'TZOO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TZOO' 데이터 수집 완료.
[8486/9399] 'TZUP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'TZUP' 데이터 수집 완료.
[8487/9399] 'U' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'U' 데이터 수집 완료.
[8488/9399] 'UA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UA' 데이터 수집 완료.
[8489/9399] 'UAA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UAA' 데이터 수집 완료.
[8490/9399] 'UAE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8491/9399] 'UAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UAL' 데이터 수집 완료.
[8492/9399] 'UAMY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UAMY' 데이터 수집 완료.
[8493/9399] 'UAN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UAN' 데이터 수집 완료.
[8494/9399] 'UAVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UAVS' 데이터 수집 완료.
[8495/9399] 'UBCP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UBCP' 데이터 수집 완료.
[8496/9399] 'UBER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UBER' 데이터 수집 완료.
[8497/9399] 'UBFO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UBFO' 데이터 수집 완료.
[8498/9399] 'UBND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8499/9399] 'UBOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8500/9399] 'UBR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8501/9399] 'UBRL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8502/9399] 'UBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UBS' 데이터 수집 완료.
[8503/9399] 'UBSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UBSI' 데이터 수집 완료.
[8504/9399] 'UBT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8505/9399] 'UBXG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8506/9399] 'UCAR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8507/9399] 'UCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UCB' 데이터 수집 완료.
[8508/9399] 'UCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8509/9399] 'UCIB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8510/9399] 'UCL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UCL' 데이터 수집 완료.
[8511/9399] 'UCO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8512/9399] 'UCON' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8513/9399] 'UCRD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8514/9399] 'UCTT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UCTT' 데이터 수집 완료.
[8515/9399] 'UCYB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8516/9399] 'UDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8517/9399] 'UDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8518/9399] 'UDMY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UDMY' 데이터 수집 완료.
[8519/9399] 'UDN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8520/9399] 'UDOW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8521/9399] 'UDR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UDR' 데이터 수집 완료.
[8522/9399] 'UE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UE' 데이터 수집 완료.
[8523/9399] 'UEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UEC' 데이터 수집 완료.
[8524/9399] 'UEIC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UEIC' 데이터 수집 완료.
[8525/9399] 'UEVM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8526/9399] 'UFCS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UFCS' 데이터 수집 완료.
[8527/9399] 'UFG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8528/9399] 'UFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UFI' 데이터 수집 완료.
[8529/9399] 'UFIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8530/9399] 'UFO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8531/9399] 'UFPI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UFPI' 데이터 수집 완료.
[8532/9399] 'UFPT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UFPT' 데이터 수집 완료.
[8533/9399] 'UG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UG' 데이터 수집 완료.
[8534/9399] 'UGA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8535/9399] 'UGE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8536/9399] 'UGI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UGI' 데이터 수집 완료.
[8537/9399] 'UGL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8538/9399] 'UGP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UGP' 데이터 수집 완료.
[8539/9399] 'UGRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UGRO' 데이터 수집 완료.
[8540/9399] 'UHAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UHAL' 데이터 수집 완료.
[8541/9399] 'UHAL-B' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8542/9399] 'UHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UHG' 데이터 수집 완료.
[8543/9399] 'UHS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UHS' 데이터 수집 완료.
[8544/9399] 'UHT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UHT' 데이터 수집 완료.
[8545/9399] 'UI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UI' 데이터 수집 완료.
[8546/9399] 'UIS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8547/9399] 'UITB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8548/9399] 'UIVM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8549/9399] 'UJB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8550/9399] 'UK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UK' 데이터 수집 완료.
[8551/9399] 'UL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UL' 데이터 수집 완료.
[8552/9399] 'ULBI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ULBI' 데이터 수집 완료.
[8553/9399] 'ULCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ULCC' 데이터 수집 완료.
[8554/9399] 'ULE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8555/9399] 'ULH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ULH' 데이터 수집 완료.
[8556/9399] 'ULS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8557/9399] 'ULST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8558/9399] 'ULTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ULTA' 데이터 수집 완료.
[8559/9399] 'ULTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8560/9399] 'ULVM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8561/9399] 'ULY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8562/9399] 'UMAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8563/9399] 'UMBF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UMBF' 데이터 수집 완료.
[8564/9399] 'UMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UMC' 데이터 수집 완료.
[8565/9399] 'UMDD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8566/9399] 'UMH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UMH' 데이터 수집 완료.
[8567/9399] 'UMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8568/9399] 'UMMA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8569/9399] 'UNB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UNB' 데이터 수집 완료.
[8570/9399] 'UNCY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UNCY' 데이터 수집 완료.
[8571/9399] 'UNF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UNF' 데이터 수집 완료.
[8572/9399] 'UNFI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UNFI' 데이터 수집 완료.
[8573/9399] 'UNG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8574/9399] 'UNH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UNH' 데이터 수집 완료.
[8575/9399] 'UNHG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8576/9399] 'UNIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8577/9399] 'UNIY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8578/9399] 'UNL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8579/9399] 'UNM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UNM' 데이터 수집 완료.
[8580/9399] 'UNP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UNP' 데이터 수집 완료.
[8581/9399] 'UNTY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UNTY' 데이터 수집 완료.
[8582/9399] 'UOKA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UOKA' 데이터 수집 완료.
[8583/9399] 'UONE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UONE' 데이터 수집 완료.
[8584/9399] 'UP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8585/9399] 'UPAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8586/9399] 'UPB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8587/9399] 'UPBD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UPBD' 데이터 수집 완료.
[8588/9399] 'UPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UPC' 데이터 수집 완료.
[8589/9399] 'UPGD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8590/9399] 'UPGR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8591/9399] 'UPLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UPLD' 데이터 수집 완료.
[8592/9399] 'UPRO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8593/9399] 'UPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UPS' 데이터 수집 완료.
[8594/9399] 'UPST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UPST' 데이터 수집 완료.
[8595/9399] 'UPV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8596/9399] 'UPW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8597/9399] 'UPWK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UPWK' 데이터 수집 완료.
[8598/9399] 'UPXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8599/9399] 'URA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8600/9399] 'URAA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8601/9399] 'URBN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'URBN' 데이터 수집 완료.
[8602/9399] 'URE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8603/9399] 'URG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'URG' 데이터 수집 완료.
[8604/9399] 'URGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8605/9399] 'URI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'URI' 데이터 수집 완료.
[8606/9399] 'URNJ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8607/9399] 'URNM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8608/9399] 'UROY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UROY' 데이터 수집 완료.
[8609/9399] 'URSP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8610/9399] 'URTH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8611/9399] 'URTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8612/9399] 'USA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USA' 데이터 수집 완료.
[8613/9399] 'USAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USAC' 데이터 수집 완료.
[8614/9399] 'USAF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8615/9399] 'USAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8616/9399] 'USAR' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8617/9399] 'USAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8618/9399] 'USAU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USAU' 데이터 수집 완료.
[8619/9399] 'USB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USB' 데이터 수집 완료.
[8620/9399] 'USBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:71: FutureWarning: The default fill_method='pad' in Series.pct_change is deprecated and will be removed in a future version. Either fill in any non-leading NA values prior to calling pct_change or specify 'fill_method=None' to not fill NA values.
  volatility_3y_val = hist['Close'].pct_change().std()
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:73: FutureWarning: The default fill_method='pad' in Series.pct_change is deprecated and will be removed in a future version. Either fill in any non-leading NA values prior to calling pct_change or specify 'fill_method=None' to not fill NA values.
  volatility_1y_val = hist['Close'].iloc[-252:].pct_change().std()
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8621/9399] 'USCA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8622/9399] 'USCB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USCB' 데이터 수집 완료.
[8623/9399] 'USCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8624/9399] 'USCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8625/9399] 'USD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8626/9399] 'USDU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8627/9399] 'USDX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8628/9399] 'USE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8629/9399] 'USEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USEA' 데이터 수집 완료.
[8630/9399] 'USEG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USEG' 데이터 수집 완료.
[8631/9399] 'USFD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USFD' 데이터 수집 완료.
[8632/9399] 'USFR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8633/9399] 'USG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8634/9399] 'USGO' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8635/9399] 'USIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8636/9399] 'USIN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8637/9399] 'USIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USIO' 데이터 수집 완료.
[8638/9399] 'USL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8639/9399] 'USLM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USLM' 데이터 수집 완료.
[8640/9399] 'USMC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8641/9399] 'USML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8642/9399] 'USNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USNA' 데이터 수집 완료.
[8643/9399] 'USNG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8644/9399] 'USNZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8645/9399] 'USO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8646/9399] 'USOI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8647/9399] 'USOY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8648/9399] 'USPH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'USPH' 데이터 수집 완료.
[8649/9399] 'USPX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8650/9399] 'USRD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8651/9399] 'USRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8652/9399] 'USSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8653/9399] 'USSG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8654/9399] 'USSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8655/9399] 'UST' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8656/9399] 'USTB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8657/9399] 'USVM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8658/9399] 'USVN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8659/9399] 'USXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8660/9399] 'UTEN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8661/9399] 'UTES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8662/9399] 'UTF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UTF' 데이터 수집 완료.
[8663/9399] 'UTG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UTG' 데이터 수집 완료.
[8664/9399] 'UTHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UTHR' 데이터 수집 완료.
[8665/9399] 'UTHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8666/9399] 'UTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UTI' 데이터 수집 완료.
[8667/9399] 'UTL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UTL' 데이터 수집 완료.
[8668/9399] 'UTMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UTMD' 데이터 수집 완료.
[8669/9399] 'UTRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8670/9399] 'UTSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UTSI' 데이터 수집 완료.
[8671/9399] 'UTSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8672/9399] 'UTWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8673/9399] 'UTWY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8674/9399] 'UTZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UTZ' 데이터 수집 완료.
[8675/9399] 'UUP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8676/9399] 'UUU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UUU' 데이터 수집 완료.
[8677/9399] 'UUUU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UUUU' 데이터 수집 완료.
[8678/9399] 'UVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UVE' 데이터 수집 완료.
[8679/9399] 'UVSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UVSP' 데이터 수집 완료.
[8680/9399] 'UVV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UVV' 데이터 수집 완료.
[8681/9399] 'UWM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8682/9399] 'UWMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'UWMC' 데이터 수집 완료.
[8683/9399] 'UXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8684/9399] 'UXIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8685/9399] 'UXRP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8686/9399] 'UYG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8687/9399] 'UYLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8688/9399] 'UYM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8689/9399] 'UYSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8690/9399] 'V' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'V' 데이터 수집 완료.
[8691/9399] 'VABK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VABK' 데이터 수집 완료.
[8692/9399] 'VABS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8693/9399] 'VAC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VAC' 데이터 수집 완료.
[8694/9399] 'VACH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8695/9399] 'VAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VAL' 데이터 수집 완료.
[8696/9399] 'VALE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VALE' 데이터 수집 완료.
[8697/9399] 'VALN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VALN' 데이터 수집 완료.
[8698/9399] 'VALQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8699/9399] 'VALU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VALU' 데이터 수집 완료.
[8700/9399] 'VANI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VANI' 데이터 수집 완료.
[8701/9399] 'VATE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8702/9399] 'VAW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8703/9399] 'VB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8704/9399] 'VBF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VBF' 데이터 수집 완료.
[8705/9399] 'VBIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8706/9399] 'VBIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VBIX' 데이터 수집 완료.
[8707/9399] 'VBK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8708/9399] 'VBND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8709/9399] 'VBNK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VBNK' 데이터 수집 완료.
[8710/9399] 'VBR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8711/9399] 'VBTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VBTX' 데이터 수집 완료.
[8712/9399] 'VC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VC' 데이터 수집 완료.
[8713/9399] 'VCEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VCEL' 데이터 수집 완료.
[8714/9399] 'VCIC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8715/9399] 'VCIG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8716/9399] 'VCIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8717/9399] 'VCLN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8718/9399] 'VCLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8719/9399] 'VCR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8720/9399] 'VCRB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8721/9399] 'VCSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8722/9399] 'VCTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VCTR' 데이터 수집 완료.
[8723/9399] 'VCV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VCV' 데이터 수집 완료.
[8724/9399] 'VCYT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VCYT' 데이터 수집 완료.
[8725/9399] 'VDC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8726/9399] 'VDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8727/9399] 'VEA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8728/9399] 'VECO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VECO' 데이터 수집 완료.
[8729/9399] 'VEEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8730/9399] 'VEEE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VEEE' 데이터 수집 완료.
[8731/9399] 'VEEV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VEEV' 데이터 수집 완료.
[8732/9399] 'VEGA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8733/9399] 'VEGI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8734/9399] 'VEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VEL' 데이터 수집 완료.
[8735/9399] 'VELO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VELO' 데이터 수집 완료.
[8736/9399] 'VEMY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8737/9399] 'VENU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8738/9399] 'VEON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VEON' 데이터 수집 완료.
[8739/9399] 'VERA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VERA' 데이터 수집 완료.
[8740/9399] 'VERI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8741/9399] 'VERO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VERO' 데이터 수집 완료.
[8742/9399] 'VERS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8743/9399] 'VERU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VERU' 데이터 수집 완료.
[8744/9399] 'VERX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VERX' 데이터 수집 완료.
[8745/9399] 'VET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VET' 데이터 수집 완료.
[8746/9399] 'VETZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8747/9399] 'VEU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8748/9399] 'VFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VFC' 데이터 수집 완료.
[8749/9399] 'VFF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VFF' 데이터 수집 완료.
[8750/9399] 'VFH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8751/9399] 'VFL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8752/9399] 'VFLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8753/9399] 'VFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8754/9399] 'VG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8755/9399] 'VGAS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VGAS' 데이터 수집 완료.
[8756/9399] 'VGHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8757/9399] 'VGI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8758/9399] 'VGIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8759/9399] 'VGK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8760/9399] 'VGLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8761/9399] 'VGM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VGM' 데이터 수집 완료.
[8762/9399] 'VGSH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8763/9399] 'VGSR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8764/9399] 'VGT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8765/9399] 'VGUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8766/9399] 'VGVT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8767/9399] 'VGZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VGZ' 데이터 수집 완료.
[8768/9399] 'VHC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VHC' 데이터 수집 완료.
[8769/9399] 'VHI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VHI' 데이터 수집 완료.
[8770/9399] 'VHT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8771/9399] 'VIA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8772/9399] 'VIAV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIAV' 데이터 수집 완료.
[8773/9399] 'VICE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8774/9399] 'VICI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VICI' 데이터 수집 완료.
[8775/9399] 'VICR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VICR' 데이터 수집 완료.
[8776/9399] 'VIDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8777/9399] 'VIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8778/9399] 'VIGI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8779/9399] 'VIK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8780/9399] 'VINP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VINP' 데이터 수집 완료.
[8781/9399] 'VIOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8782/9399] 'VIOO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8783/9399] 'VIOT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIOT' 데이터 수집 완료.
[8784/9399] 'VIOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8785/9399] 'VIPS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIPS' 데이터 수집 완료.
[8786/9399] 'VIR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIR' 데이터 수집 완료.
[8787/9399] 'VIRC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIRC' 데이터 수집 완료.
[8788/9399] 'VIRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIRT' 데이터 수집 완료.
[8789/9399] 'VIS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8790/9399] 'VIST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIST' 데이터 수집 완료.
[8791/9399] 'VITL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VITL' 데이터 수집 완료.
[8792/9399] 'VIV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIV' 데이터 수집 완료.
[8793/9399] 'VIVK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIVK' 데이터 수집 완료.
[8794/9399] 'VIVS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VIVS' 데이터 수집 완료.
[8795/9399] 'VIXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8796/9399] 'VKI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VKI' 데이터 수집 완료.
[8797/9399] 'VKQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VKQ' 데이터 수집 완료.
[8798/9399] 'VKTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VKTX' 데이터 수집 완료.
[8799/9399] 'VLGEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VLGEA' 데이터 수집 완료.
[8800/9399] 'VLLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8801/9399] 'VLN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VLN' 데이터 수집 완료.
[8802/9399] 'VLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VLO' 데이터 수집 완료.
[8803/9399] 'VLRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VLRS' 데이터 수집 완료.
[8804/9399] 'VLT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VLT' 데이터 수집 완료.
[8805/9399] 'VLTO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8806/9399] 'VLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8807/9399] 'VLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VLY' 데이터 수집 완료.
[8808/9399] 'VMAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VMAR' 데이터 수집 완료.
[8809/9399] 'VMBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8810/9399] 'VMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VMC' 데이터 수집 완료.
[8811/9399] 'VMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VMD' 데이터 수집 완료.
[8812/9399] 'VMEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VMEO' 데이터 수집 완료.
[8813/9399] 'VMI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VMI' 데이터 수집 완료.
[8814/9399] 'VMO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VMO' 데이터 수집 완료.
[8815/9399] 'VNAM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8816/9399] 'VNCE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VNCE' 데이터 수집 완료.
[8817/9399] 'VNDA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VNDA' 데이터 수집 완료.
[8818/9399] 'VNET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VNET' 데이터 수집 완료.
[8819/9399] 'VNIE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8820/9399] 'VNLA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8821/9399] 'VNME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8822/9399] 'VNO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VNO' 데이터 수집 완료.
[8823/9399] 'VNOM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8824/9399] 'VNQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8825/9399] 'VNQI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8826/9399] 'VNRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8827/9399] 'VNSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8828/9399] 'VNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VNT' 데이터 수집 완료.
[8829/9399] 'VNTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8830/9399] 'VO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8831/9399] 'VOC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VOC' 데이터 수집 완료.
[8832/9399] 'VOD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VOD' 데이터 수집 완료.
[8833/9399] 'VOE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8834/9399] 'VOLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8835/9399] 'VONE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8836/9399] 'VONG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8837/9399] 'VONV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8838/9399] 'VOO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8839/9399] 'VOOG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8840/9399] 'VOOV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8841/9399] 'VOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8842/9399] 'VOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8843/9399] 'VOTE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8844/9399] 'VOX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8845/9399] 'VOXR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VOXR' 데이터 수집 완료.
[8846/9399] 'VOYA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VOYA' 데이터 수집 완료.
[8847/9399] 'VOYG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8848/9399] 'VPC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8849/9399] 'VPG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VPG' 데이터 수집 완료.
[8850/9399] 'VPL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8851/9399] 'VPLS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8852/9399] 'VPU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8853/9399] 'VPV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VPV' 데이터 수집 완료.
[8854/9399] 'VRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRA' 데이터 수집 완료.
[8855/9399] 'VRAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8856/9399] 'VRAR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRAR' 데이터 수집 완료.
[8857/9399] 'VRAX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRAX' 데이터 수집 완료.
[8858/9399] 'VRCA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8859/9399] 'VRDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRDN' 데이터 수집 완료.
[8860/9399] 'VRE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRE' 데이터 수집 완료.
[8861/9399] 'VREX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VREX' 데이터 수집 완료.
[8862/9399] 'VRIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8863/9399] 'VRM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8864/9399] 'VRME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRME' 데이터 수집 완료.
[8865/9399] 'VRNA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRNA' 데이터 수집 완료.
[8866/9399] 'VRNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRNS' 데이터 수집 완료.
[8867/9399] 'VRNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRNT' 데이터 수집 완료.
[8868/9399] 'VRP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8869/9399] 'VRRM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRRM' 데이터 수집 완료.
[8870/9399] 'VRSK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRSK' 데이터 수집 완료.
[8871/9399] 'VRSN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8872/9399] 'VRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRT' 데이터 수집 완료.
[8873/9399] 'VRTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8874/9399] 'VRTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRTS' 데이터 수집 완료.
[8875/9399] 'VRTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VRTX' 데이터 수집 완료.
[8876/9399] 'VS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VS' 데이터 수집 완료.
[8877/9399] 'VSA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8878/9399] 'VSAI' 처리 중...
HTTP Error 404: {"quoteSummary":{"result":null,"error":{"code":"Not Found","description":"Quote not found for symbol: VSAI"}}}
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8879/9399] 'VSAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VSAT' 데이터 수집 완료.
[8880/9399] 'VSCO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VSCO' 데이터 수집 완료.
[8881/9399] 'VSDA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8882/9399] 'VSEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VSEC' 데이터 수집 완료.
[8883/9399] 'VSEE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8884/9399] 'VSH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VSH' 데이터 수집 완료.
[8885/9399] 'VSHY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8886/9399] 'VSLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8887/9399] 'VSME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8888/9399] 'VSMV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8889/9399] 'VSS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8890/9399] 'VST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VST' 데이터 수집 완료.
[8891/9399] 'VSTA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VSTA' 데이터 수집 완료.
[8892/9399] 'VSTD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VSTD' 데이터 수집 완료.
[8893/9399] 'VSTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8894/9399] 'VSTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VSTM' 데이터 수집 완료.
[8895/9399] 'VSTS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8896/9399] 'VT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8897/9399] 'VTAK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTAK' 데이터 수집 완료.
[8898/9399] 'VTC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8899/9399] 'VTEB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8900/9399] 'VTES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8901/9399] 'VTEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTEX' 데이터 수집 완료.
[8902/9399] 'VTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8903/9399] 'VTGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTGN' 데이터 수집 완료.
[8904/9399] 'VTHR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8905/9399] 'VTI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8906/9399] 'VTIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8907/9399] 'VTLE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTLE' 데이터 수집 완료.
[8908/9399] 'VTMX' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8909/9399] 'VTN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTN' 데이터 수집 완료.
[8910/9399] 'VTOL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTOL' 데이터 수집 완료.
[8911/9399] 'VTP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8912/9399] 'VTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTR' 데이터 수집 완료.
[8913/9399] 'VTRS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTRS' 데이터 수집 완료.
[8914/9399] 'VTS' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8915/9399] 'VTSI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTSI' 데이터 수집 완료.
[8916/9399] 'VTV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8917/9399] 'VTVT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTVT' 데이터 수집 완료.
[8918/9399] 'VTWG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8919/9399] 'VTWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8920/9399] 'VTWV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8921/9399] 'VTYX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VTYX' 데이터 수집 완료.
[8922/9399] 'VUG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8923/9399] 'VUSE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8924/9399] 'VUZI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VUZI' 데이터 수집 완료.
[8925/9399] 'VV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8926/9399] 'VVOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VVOS' 데이터 수집 완료.
[8927/9399] 'VVPR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8928/9399] 'VVR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VVR' 데이터 수집 완료.
[8929/9399] 'VVV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VVV' 데이터 수집 완료.
[8930/9399] 'VVX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VVX' 데이터 수집 완료.
[8931/9399] 'VWAV' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8932/9399] 'VWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8933/9399] 'VWOB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8934/9399] 'VXF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8935/9399] 'VXUS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8936/9399] 'VYGR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VYGR' 데이터 수집 완료.
[8937/9399] 'VYLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8938/9399] 'VYM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8939/9399] 'VYMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8940/9399] 'VYNE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VYNE' 데이터 수집 완료.
[8941/9399] 'VYX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VYX' 데이터 수집 완료.
[8942/9399] 'VZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VZ' 데이터 수집 완료.
[8943/9399] 'VZLA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'VZLA' 데이터 수집 완료.
[8944/9399] 'W' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8945/9399] 'WAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WAB' 데이터 수집 완료.
[8946/9399] 'WABC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WABC' 데이터 수집 완료.
[8947/9399] 'WABF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8948/9399] 'WAFD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WAFD' 데이터 수집 완료.
[8949/9399] 'WAFU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WAFU' 데이터 수집 완료.
[8950/9399] 'WAI' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[8951/9399] 'WAL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WAL' 데이터 수집 완료.
[8952/9399] 'WALD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WALD' 데이터 수집 완료.
[8953/9399] 'WANT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8954/9399] 'WAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8955/9399] 'WASH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WASH' 데이터 수집 완료.
[8956/9399] 'WAT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WAT' 데이터 수집 완료.
[8957/9399] 'WATT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WATT' 데이터 수집 완료.
[8958/9399] 'WAVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WAVE' 데이터 수집 완료.
[8959/9399] 'WAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8960/9399] 'WB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WB' 데이터 수집 완료.
[8961/9399] 'WBD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WBD' 데이터 수집 완료.
[8962/9399] 'WBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8963/9399] 'WBIF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8964/9399] 'WBIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8965/9399] 'WBIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8966/9399] 'WBIY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8967/9399] 'WBS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WBS' 데이터 수집 완료.
[8968/9399] 'WBTN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8969/9399] 'WBUY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8970/9399] 'WBX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[8971/9399] 'WCAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8972/9399] 'WCBR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8973/9399] 'WCC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WCC' 데이터 수집 완료.
[8974/9399] 'WCEO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8975/9399] 'WCLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8976/9399] 'WCME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8977/9399] 'WCMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8978/9399] 'WCN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WCN' 데이터 수집 완료.
[8979/9399] 'WCPB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8980/9399] 'WCT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8981/9399] 'WD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WD' 데이터 수집 완료.
[8982/9399] 'WDAF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8983/9399] 'WDAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WDAY' 데이터 수집 완료.
[8984/9399] 'WDC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WDC' 데이터 수집 완료.
[8985/9399] 'WDEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8986/9399] 'WDFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WDFC' 데이터 수집 완료.
[8987/9399] 'WDGF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8988/9399] 'WDH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WDH' 데이터 수집 완료.
[8989/9399] 'WDI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8990/9399] 'WDIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8991/9399] 'WDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WDS' 데이터 수집 완료.
[8992/9399] 'WDTE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8993/9399] 'WEA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WEA' 데이터 수집 완료.
[8994/9399] 'WEAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8995/9399] 'WEAV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WEAV' 데이터 수집 완료.
[8996/9399] 'WEBL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8997/9399] 'WEBS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[8998/9399] 'WEC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WEC' 데이터 수집 완료.
[8999/9399] 'WEEI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9000/9399] 'WEEL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9001/9399] 'WELL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WELL' 데이터 수집 완료.
[9002/9399] 'WEN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WEN' 데이터 수집 완료.
[9003/9399] 'WENN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9004/9399] 'WERN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WERN' 데이터 수집 완료.
[9005/9399] 'WES' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WES' 데이터 수집 완료.
[9006/9399] 'WEST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WEST' 데이터 수집 완료.
[9007/9399] 'WETH' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[9008/9399] 'WETO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9009/9399] 'WEX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WEX' 데이터 수집 완료.
[9010/9399] 'WEYS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WEYS' 데이터 수집 완료.
[9011/9399] 'WF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WF' 데이터 수집 완료.
[9012/9399] 'WFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WFC' 데이터 수집 완료.
[9013/9399] 'WFCF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WFCF' 데이터 수집 완료.
[9014/9399] 'WFF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9015/9399] 'WFG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WFG' 데이터 수집 완료.
[9016/9399] 'WFH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9017/9399] 'WFRD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WFRD' 데이터 수집 완료.
[9018/9399] 'WGMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9019/9399] 'WGO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WGO' 데이터 수집 완료.
[9020/9399] 'WGRX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9021/9399] 'WGS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WGS' 데이터 수집 완료.
[9022/9399] 'WH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WH' 데이터 수집 완료.
[9023/9399] 'WHD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WHD' 데이터 수집 완료.
[9024/9399] 'WHF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WHF' 데이터 수집 완료.
[9025/9399] 'WHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WHG' 데이터 수집 완료.
[9026/9399] 'WHLR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WHLR' 데이터 수집 완료.
[9027/9399] 'WHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WHR' 데이터 수집 완료.
[9028/9399] 'WHWK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WHWK' 데이터 수집 완료.
[9029/9399] 'WIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WIA' 데이터 수집 완료.
[9030/9399] 'WILC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WILC' 데이터 수집 완료.
[9031/9399] 'WILD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9032/9399] 'WIMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9033/9399] 'WINA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9034/9399] 'WING' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9035/9399] 'WINN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9036/9399] 'WIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9037/9399] 'WISE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9038/9399] 'WIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WIT' 데이터 수집 완료.
[9039/9399] 'WIW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WIW' 데이터 수집 완료.
[9040/9399] 'WIX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9041/9399] 'WK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9042/9399] 'WKC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WKC' 데이터 수집 완료.
[9043/9399] 'WKEY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WKEY' 데이터 수집 완료.
[9044/9399] 'WKHS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WKHS' 데이터 수집 완료.
[9045/9399] 'WKSP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WKSP' 데이터 수집 완료.
[9046/9399] 'WLAC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9047/9399] 'WLDN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WLDN' 데이터 수집 완료.
[9048/9399] 'WLDS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WLDS' 데이터 수집 완료.
[9049/9399] 'WLFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WLFC' 데이터 수집 완료.
[9050/9399] 'WLK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WLK' 데이터 수집 완료.
[9051/9399] 'WLKP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WLKP' 데이터 수집 완료.
[9052/9399] 'WLTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9053/9399] 'WLY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WLY' 데이터 수집 완료.
[9054/9399] 'WM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WM' 데이터 수집 완료.
[9055/9399] 'WMB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WMB' 데이터 수집 완료.
[9056/9399] 'WMG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WMG' 데이터 수집 완료.
[9057/9399] 'WMK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WMK' 데이터 수집 완료.
[9058/9399] 'WMS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WMS' 데이터 수집 완료.
[9059/9399] 'WMT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WMT' 데이터 수집 완료.
[9060/9399] 'WNC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WNC' 데이터 수집 완료.
[9061/9399] 'WNEB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WNEB' 데이터 수집 완료.
[9062/9399] 'WNS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WNS' 데이터 수집 완료.
[9063/9399] 'WNTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9064/9399] 'WNW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WNW' 데이터 수집 완료.
[9065/9399] 'WOK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9066/9399] 'WOLF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WOLF' 데이터 수집 완료.
[9067/9399] 'WOMN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9068/9399] 'WOOD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9069/9399] 'WOOF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WOOF' 데이터 수집 완료.
[9070/9399] 'WOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WOR' 데이터 수집 완료.
[9071/9399] 'WORX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WORX' 데이터 수집 완료.
[9072/9399] 'WOW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WOW' 데이터 수집 완료.
[9073/9399] 'WPC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WPC' 데이터 수집 완료.
[9074/9399] 'WPM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WPM' 데이터 수집 완료.
[9075/9399] 'WPP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WPP' 데이터 수집 완료.
[9076/9399] 'WPRT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WPRT' 데이터 수집 완료.
[9077/9399] 'WRAP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WRAP' 데이터 수집 완료.
[9078/9399] 'WRB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WRB' 데이터 수집 완료.
[9079/9399] 'WRBY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WRBY' 데이터 수집 완료.
[9080/9399] 'WRD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9081/9399] 'WRLD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WRLD' 데이터 수집 완료.
[9082/9399] 'WRN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WRN' 데이터 수집 완료.
[9083/9399] 'WRND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9084/9399] 'WS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9085/9399] 'WSBC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WSBC' 데이터 수집 완료.
[9086/9399] 'WSBF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WSBF' 데이터 수집 완료.
[9087/9399] 'WSBK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9088/9399] 'WSC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WSC' 데이터 수집 완료.
[9089/9399] 'WSFS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WSFS' 데이터 수집 완료.
[9090/9399] 'WSM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WSM' 데이터 수집 완료.
[9091/9399] 'WSML' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9092/9399] 'WSO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WSO' 데이터 수집 완료.
[9093/9399] 'WSR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WSR' 데이터 수집 완료.
[9094/9399] 'WST' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WST' 데이터 수집 완료.
[9095/9399] 'WT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WT' 데이터 수집 완료.
[9096/9399] 'WTBA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WTBA' 데이터 수집 완료.
[9097/9399] 'WTBN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9098/9399] 'WTF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9099/9399] 'WTFC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WTFC' 데이터 수집 완료.
[9100/9399] 'WTG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9101/9399] 'WTI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9102/9399] 'WTID' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9103/9399] 'WTIP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9104/9399] 'WTIU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9105/9399] 'WTM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WTM' 데이터 수집 완료.
[9106/9399] 'WTMF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9107/9399] 'WTMU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9108/9399] 'WTMY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9109/9399] 'WTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WTO' 데이터 수집 완료.
[9110/9399] 'WTPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9111/9399] 'WTRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9112/9399] 'WTRG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WTRG' 데이터 수집 완료.
[9113/9399] 'WTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WTS' 데이터 수집 완료.
[9114/9399] 'WTTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WTTR' 데이터 수집 완료.
[9115/9399] 'WTV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9116/9399] 'WTW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WTW' 데이터 수집 완료.
[9117/9399] 'WU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WU' 데이터 수집 완료.
[9118/9399] 'WULF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WULF' 데이터 수집 완료.
[9119/9399] 'WVE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WVE' 데이터 수집 완료.
[9120/9399] 'WVVI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WVVI' 데이터 수집 완료.
[9121/9399] 'WW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9122/9399] 'WWD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WWD' 데이터 수집 완료.
[9123/9399] 'WWJD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9124/9399] 'WWR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WWR' 데이터 수집 완료.
[9125/9399] 'WWW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WWW' 데이터 수집 완료.
[9126/9399] 'WXET' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9127/9399] 'WXM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9128/9399] 'WY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WY' 데이터 수집 완료.
[9129/9399] 'WYFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9130/9399] 'WYHG' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[9131/9399] 'WYNN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9132/9399] 'WYY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'WYY' 데이터 수집 완료.
[9133/9399] 'XAGE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9134/9399] 'XAIR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XAIR' 데이터 수집 완료.
[9135/9399] 'XAIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9136/9399] 'XAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9137/9399] 'XB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9138/9399] 'XBB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9139/9399] 'XBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9140/9399] 'XBIL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9141/9399] 'XBIO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XBIO' 데이터 수집 완료.
[9142/9399] 'XBIT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XBIT' 데이터 수집 완료.
[9143/9399] 'XBP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9144/9399] 'XBTY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9145/9399] 'XC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9146/9399] 'XCCC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9147/9399] 'XCEM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9148/9399] 'XCH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9149/9399] 'XCLR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9150/9399] 'XCNY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9151/9399] 'XCOR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9152/9399] 'XCUR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XCUR' 데이터 수집 완료.
[9153/9399] 'XEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XEL' 데이터 수집 완료.
[9154/9399] 'XELB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XELB' 데이터 수집 완료.
[9155/9399] 'XENE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XENE' 데이터 수집 완료.
[9156/9399] 'XERS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9157/9399] 'XES' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9158/9399] 'XFIV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9159/9399] 'XFIX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9160/9399] 'XFLT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9161/9399] 'XFLX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9162/9399] 'XFOR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XFOR' 데이터 수집 완료.
[9163/9399] 'XGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XGN' 데이터 수집 완료.
[9164/9399] 'XHB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9165/9399] 'XHE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9166/9399] 'XHG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9167/9399] 'XHLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9168/9399] 'XHLF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9169/9399] 'XHR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XHR' 데이터 수집 완료.
[9170/9399] 'XHS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9171/9399] 'XHYC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9172/9399] 'XHYD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9173/9399] 'XHYE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9174/9399] 'XHYF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9175/9399] 'XHYH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9176/9399] 'XHYI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9177/9399] 'XHYT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9178/9399] 'XIDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9179/9399] 'XIFR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XIFR' 데이터 수집 완료.
[9180/9399] 'XITK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9181/9399] 'XLB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9182/9399] 'XLBI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9183/9399] 'XLC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9184/9399] 'XLCI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9185/9399] 'XLE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9186/9399] 'XLEI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9187/9399] 'XLF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9188/9399] 'XLFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9189/9399] 'XLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9190/9399] 'XLI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9191/9399] 'XLII' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9192/9399] 'XLK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9193/9399] 'XLKI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9194/9399] 'XLO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XLO' 데이터 수집 완료.
[9195/9399] 'XLP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9196/9399] 'XLRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9197/9399] 'XLRI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9198/9399] 'XLSI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9199/9399] 'XLSR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9200/9399] 'XLU' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9201/9399] 'XLUI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9202/9399] 'XLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9203/9399] 'XLVI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9204/9399] 'XLY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9205/9399] 'XLYI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9206/9399] 'XMAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9207/9399] 'XME' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9208/9399] 'XMHQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9209/9399] 'XMLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9210/9399] 'XMMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9211/9399] 'XMTR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XMTR' 데이터 수집 완료.
[9212/9399] 'XMVM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9213/9399] 'XNAV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9214/9399] 'XNCR' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XNCR' 데이터 수집 완료.
[9215/9399] 'XNET' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XNET' 데이터 수집 완료.
[9216/9399] 'XNTK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9217/9399] 'XOEF' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9218/9399] 'XOM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XOM' 데이터 수집 완료.
[9219/9399] 'XOMA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XOMA' 데이터 수집 완료.
[9220/9399] 'XOMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9221/9399] 'XOMX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9222/9399] 'XOMZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9223/9399] 'XONE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9224/9399] 'XOP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9225/9399] 'XOS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XOS' 데이터 수집 완료.
[9226/9399] 'XOVR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9227/9399] 'XP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XP' 데이터 수집 완료.
[9228/9399] 'XPAY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9229/9399] 'XPEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XPEL' 데이터 수집 완료.
[9230/9399] 'XPER' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XPER' 데이터 수집 완료.
[9231/9399] 'XPEV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XPEV' 데이터 수집 완료.
[9232/9399] 'XPH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9233/9399] 'XPL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XPL' 데이터 수집 완료.
[9234/9399] 'XPND' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9235/9399] 'XPO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XPO' 데이터 수집 완료.
[9236/9399] 'XPOF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9237/9399] 'XPON' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XPON' 데이터 수집 완료.
[9238/9399] 'XPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9239/9399] 'XPRO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XPRO' 데이터 수집 완료.
[9240/9399] 'XRAY' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XRAY' 데이터 수집 완료.
[9241/9399] 'XRLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9242/9399] 'XRLX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9243/9399] 'XRMI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9244/9399] 'XRPI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9245/9399] 'XRPR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9246/9399] 'XRPT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9247/9399] 'XRT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9248/9399] 'XRTX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XRTX' 데이터 수집 완료.
[9249/9399] 'XRX' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XRX' 데이터 수집 완료.
[9250/9399] 'XSD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9251/9399] 'XSLV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9252/9399] 'XSMO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9253/9399] 'XSOE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9254/9399] 'XSVM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9255/9399] 'XSVN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9256/9399] 'XSW' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9257/9399] 'XT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9258/9399] 'XTEN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9259/9399] 'XTIA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9260/9399] 'XTKG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XTKG' 데이터 수집 완료.
[9261/9399] 'XTL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9262/9399] 'XTLB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XTLB' 데이터 수집 완료.
[9263/9399] 'XTN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9264/9399] 'XTNT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XTNT' 데이터 수집 완료.
[9265/9399] 'XTR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9266/9399] 'XTRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9267/9399] 'XTWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9268/9399] 'XTWY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9269/9399] 'XUDV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9270/9399] 'XV' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9271/9399] 'XWEL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XWEL' 데이터 수집 완료.
[9272/9399] 'XXCH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9273/9399] 'XXII' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XXII' 데이터 수집 완료.
[9274/9399] 'XXRP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9275/9399] 'XYF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XYF' 데이터 수집 완료.
[9276/9399] 'XYL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XYL' 데이터 수집 완료.
[9277/9399] 'XYLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9278/9399] 'XYLG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9279/9399] 'XYZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'XYZ' 데이터 수집 완료.
[9280/9399] 'XYZG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9281/9399] 'XYZY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9282/9399] 'YAAS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9283/9399] 'YALA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YALA' 데이터 수집 완료.
[9284/9399] 'YALL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9285/9399] 'YANG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9286/9399] 'YB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9287/9399] 'YBIT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9288/9399] 'YCBD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YCBD' 데이터 수집 완료.
[9289/9399] 'YCL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9290/9399] 'YCS' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9291/9399] 'YDES' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[9292/9399] 'YDKG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9293/9399] 'YEAR' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9294/9399] 'YELP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YELP' 데이터 수집 완료.
[9295/9399] 'YETI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YETI' 데이터 수집 완료.
[9296/9399] 'YEXT' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YEXT' 데이터 수집 완료.
[9297/9399] 'YFFI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9298/9399] 'YFYA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9299/9399] 'YGLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9300/9399] 'YGMZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YGMZ' 데이터 수집 완료.
[9301/9399] 'YHC' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[9302/9399] 'YHGJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YHGJ' 데이터 수집 완료.
[9303/9399] 'YHNA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9304/9399] 'YI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YI' 데이터 수집 완료.
[9305/9399] 'YIBO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9306/9399] 'YINN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9307/9399] 'YJ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YJ' 데이터 수집 완료.
[9308/9399] 'YLD' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9309/9399] 'YLDE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9310/9399] 'YMAB' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[9311/9399] 'YMAG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9312/9399] 'YMAT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9313/9399] 'YMAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9314/9399] 'YMM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YMM' 데이터 수집 완료.
[9315/9399] 'YMT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9316/9399] 'YNOT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9317/9399] 'YOKE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9318/9399] 'YOLO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9319/9399] 'YORW' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YORW' 데이터 수집 완료.
[9320/9399] 'YOU' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YOU' 데이터 수집 완료.
[9321/9399] 'YOUL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9322/9399] 'YPF' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YPF' 데이터 수집 완료.
[9323/9399] 'YQ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YQ' 데이터 수집 완료.
[9324/9399] 'YQQQ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9325/9399] 'YRD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YRD' 데이터 수집 완료.
[9326/9399] 'YSG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YSG' 데이터 수집 완료.
[9327/9399] 'YSPY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9328/9399] 'YSXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9329/9399] 'YTRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YTRA' 데이터 수집 완료.
[9330/9399] 'YUM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9331/9399] 'YUMC' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'YUMC' 데이터 수집 완료.
[9332/9399] 'YXI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9333/9399] 'YXT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9334/9399] 'YYAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9335/9399] 'YYGH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9336/9399] 'YYY' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9337/9399] 'Z' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'Z' 데이터 수집 완료.
[9338/9399] 'ZAP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9339/9399] 'ZBAI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZBAI' 데이터 수집 완료.
[9340/9399] 'ZBAO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9341/9399] 'ZBH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZBH' 데이터 수집 완료.
[9342/9399] 'ZBIO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9343/9399] 'ZBRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZBRA' 데이터 수집 완료.
[9344/9399] 'ZCMD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZCMD' 데이터 수집 완료.
[9345/9399] 'ZD' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZD' 데이터 수집 완료.
[9346/9399] 'ZDAI' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9347/9399] 'ZDGE' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZDGE' 데이터 수집 완료.
[9348/9399] 'ZENA' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9349/9399] 'ZENV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZENV' 데이터 수집 완료.
[9350/9399] 'ZEO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZEO' 데이터 수집 완료.
[9351/9399] 'ZEPP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZEPP' 데이터 수집 완료.
[9352/9399] 'ZETA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZETA' 데이터 수집 완료.
[9353/9399] 'ZEUS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZEUS' 데이터 수집 완료.
[9354/9399] 'ZG' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZG' 데이터 수집 완료.
[9355/9399] 'ZGM' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9356/9399] 'ZGN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZGN' 데이터 수집 완료.
[9357/9399] 'ZH' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZH' 데이터 수집 완료.
[9358/9399] 'ZHDG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9359/9399] 'ZIG' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9360/9399] 'ZIM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZIM' 데이터 수집 완료.
[9361/9399] 'ZIMV' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZIMV' 데이터 수집 완료.
[9362/9399] 'ZION' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZION' 데이터 수집 완료.
[9363/9399] 'ZIP' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 일부 팩터 값이 누락되어 제외합니다.
[9364/9399] 'ZIPP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9365/9399] 'ZJK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9366/9399] 'ZJYL' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[9367/9399] 'ZK' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9368/9399] 'ZKH' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9369/9399] 'ZKIN' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZKIN' 데이터 수집 완료.
[9370/9399] 'ZLAB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZLAB' 데이터 수집 완료.
[9371/9399] 'ZM' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZM' 데이터 수집 완료.
[9372/9399] 'ZNB' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZNB' 데이터 수집 완료.
[9373/9399] 'ZNTL' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZNTL' 데이터 수집 완료.
[9374/9399] 'ZONE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9375/9399] 'ZOOZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9376/9399] 'ZROZ' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9377/9399] 'ZS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZS' 데이터 수집 완료.
[9378/9399] 'ZSB' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9379/9399] 'ZSC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9380/9399] 'ZSL' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9381/9399] 'ZSPC' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9382/9399] 'ZTAX' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9383/9399] 'ZTEK' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZTEK' 데이터 수집 완료.
[9384/9399] 'ZTEN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9385/9399] 'ZTO' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZTO' 데이터 수집 완료.
[9386/9399] 'ZTOP' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9387/9399] 'ZTR' 처리 중...
  -> 일부 팩터 값이 누락되어 제외합니다.
[9388/9399] 'ZTRE' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9389/9399] 'ZTS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZTS' 데이터 수집 완료.
[9390/9399] 'ZTWO' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9391/9399] 'ZUMZ' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZUMZ' 데이터 수집 완료.
[9392/9399] 'ZURA' 처리 중...
  -> 주가 데이터가 3년 미만이라 제외합니다.
[9393/9399] 'ZVIA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZVIA' 데이터 수집 완료.
[9394/9399] 'ZVRA' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZVRA' 데이터 수집 완료.
[9395/9399] 'ZWS' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZWS' 데이터 수집 완료.
[9396/9399] 'ZYBT' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9397/9399] 'ZYME' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZYME' 데이터 수집 완료.
[9398/9399] 'ZYN' 처리 중...
  -> 주식이 아니거나 필수 정보(PBR, Beta)가 없어 제외합니다.
[9399/9399] 'ZYXI' 처리 중...
/data/jupyter/seungtae/LANDPRICE/TEST/2.getinfo.py:78: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  asset_growth_val = (balance_sheet.loc['Total Assets'][0] - balance_sheet.loc['Total Assets'][1]) / abs(balance_sheet.loc['Total Assets'][1])
  -> 'ZYXI' 데이터 수집 완료.

✅ 3. 총 4509개 주식의 데이터 수집 완료. CSV 파일로 저장합니다.
  -> 'all_stocks_raw_factors.csv' 저장 완료!
